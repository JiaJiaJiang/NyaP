{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/Object2HTML/Object2HTML.js","../lib/danmaku-frame/lib/ResizeSensor.js","../lib/danmaku-frame/src/danmaku-frame.js","../lib/danmaku-text/lib/Mat/Mat.js","../lib/danmaku-text/lib/promise/promise.js","../lib/danmaku-text/lib/setImmediate/setImmediate.js","../lib/danmaku-text/src/danmaku-text.js","../lib/danmaku-text/src/text2d.js","../lib/danmaku-text/src/text3d.js","../lib/danmaku-text/src/textCanvas.js","../lib/danmaku-text/src/textModuleTemplate.js","../node_modules/process/browser.js","NyaP.js","NyaPCore.js","i18n.js"],"names":[],"mappings":"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","file":"NyaP.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n\nfunction Object2HTML(obj,func){\n\tlet ele,o,e;\n\tif(typeof obj==='string')return document.createTextNode(obj);//text node\n\tif('_' in obj === false)return;//if it dont have a _ prop to specify a tag\n\tif(typeof obj._ !== 'string' || obj._=='')return;\n\tele=document.createElement(obj._);\n\t//attributes\n\tif(typeof obj.attr === 'object'){\n\t\tfor(o in obj.attr){\n\t\t\tele.setAttribute(o,obj.attr[o]);\n\t\t}\n\t}\n\t//properties\n\tif(typeof obj.prop === 'object'){\n\t\tfor(o in obj.prop){\n\t\t\tele[o]=obj.prop[o];\n\t\t}\n\t}\n\t//events\n\tif(typeof obj.event === 'object'){\n\t\tfor(o in obj.event){\n\t\t\tele.addEventListener(o,obj.event[o]);\n\t\t}\n\t}\n\t//childNodes\n\tif(typeof obj.child === 'object' && obj.child.length>0){\n\t\tobj.child.forEach(o=>{\n\t\t\te=(o instanceof Node)?o:Object2HTML(o,func);\n\t\t\t(e instanceof Node)&&ele.appendChild(e);\n\t\t});\n\t}\n\tfunc&&func(ele);\n\treturn ele;\n}\n\nexport default Object2HTML;\nexport {Object2HTML}","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            }\n            if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            }\n\n            return element.style[prop];\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport ResizeSensor from '../lib/ResizeSensor.js';\nclass DanmakuFrame{\n\tconstructor(container){\n\t\tthis.container=container||document.createElement('div');\n\t\tthis.container.id='danmaku_container';\n\t\tthis.rate=1;\n\t\tthis.timeBase=0;\n\t\tthis.media=null;\n\t\tthis.fps=0;\n\t\tthis.working=false;\n\t\tthis.modules={};//constructed module list\n\t\tthis.moduleList=[];\n\t\tfor(let m in DanmakuFrame.moduleList){//init all modules\n\t\t\tthis.initModule(m)\n\t\t}\n\n\t\tsetTimeout(()=>{//container size sensor\n\t\t\tthis.container.ResizeSensor=new ResizeSensor(this.container,()=>{\n\t\t\t\tthis.resize();\n\t\t\t});\n\t\t\tthis.resize();\n\t\t},0);\n\t\tconst draw=()=>{\n\t\t\tthis.moduleFunction('draw');\n\t\t\tif(this.fps===0){\n\t\t\t\trequestAnimationFrame(draw);\n\t\t\t}else{\n\t\t\t\tsetTimeout(draw,1000/this.fps);\n\t\t\t}\n\t\t}\n\t\tdraw();\n\t}\n\tenable(name){\n\t\tlet module=this.modules[name];\n\t\tif(!module)return this.initModule(name);\n\t\tmodule.enabled=true;\n\t\tmodule.enable&&module.enable();\n\t\treturn true;\n\t}\n\tdisable(name){\n\t\tlet module=this.modules[name];\n\t\tif(!module)return false;\n\t\tmodule.enabled=false;\n\t\tmodule.disable&&module.disable();\n\t\treturn true;\n\t}\n\tinitModule(name){\n\t\tlet mod=DanmakuFrame.moduleList[name];\n\t\tif(!mod)throw('Module ['+name+'] does not exist.');\n\t\tlet module=new mod(this);\n\t\tif(module instanceof DanmakuFrameModule === false)\n\t\t\tthrow('Constructor of '+name+' is not extended from DanmakuFrameModule');\n\t\tmodule.enabled=true;\n\t\tthis.modules[name]=module;\n\t\tthis.moduleList.push(name);\n\t\tconsole.debug(`Mod Inited: ${name}`);\n\t\treturn true;\n\t}\n\tset time(t){//current media time (ms)\n\t\tthis.media||(this.timeBase=Date.now()-t);\n\t\tthis.moduleFunction('time',t);//let all mods know when the time be set\n\t}\n\tget time(){\n\t\treturn this.media?(this.media.currentTime*1000)|0:(Date.now()-this.timeBase);\n\t}\n\tload(danmakuObj){\n\t\tthis.moduleFunction('load',danmakuObj);\n\t}\n\tloadList(danmakuArray){\n\t\tthis.moduleFunction('loadList',danmakuArray);\n\t}\n\tunload(danmakuObj){\n\t\tthis.moduleFunction('unload',danmakuObj);\n\t}\n\tstart(){\n\t\tif(this.working)return;\n\t\tthis.working=true;\n\t\tthis.moduleFunction('start');\n\t}\n\tpause(){\n\t\tthis.working=false;\n\t\tthis.moduleFunction('pause');\n\t}\n\tresize(){\n\t\tthis.moduleFunction('resize');\n\t}\n\tmoduleFunction(name,arg){\n\t\tfor(let i=0,m;i<this.moduleList.length;i++){\n\t\t\tm=this.modules[this.moduleList[i]];\n\t\t\tif(m[name])m[name](arg);\n\t\t}\n\t\t\t\n\t}\n\tsetMedia(media){\n\t\tthis.media=media;\n\t\taddEvents(media,{\n\t\t\tplaying:()=>{\n\t\t\t\tthis.start();\n\t\t\t},\n\t\t\tpause:()=>{\n\t\t\t\tthis.pause();\n\t\t\t},\n\t\t\tratechange:()=>{\n\t\t\t\tthis.rate=this.media.playbackRate;\n\t\t\t},\n\t\t});\n\t\tthis.moduleFunction('media',media);\n\t}\n\tstatic addModule(name,module){\n\t\tif(name in this.moduleList){\n\t\t\tconsole.warn('The module \"'+name+'\" has already been added.');\n\t\t\treturn;\n\t\t}\n\t\tthis.moduleList[name]=module;\n\t} \n}\n\nDanmakuFrame.moduleList={};\n\nclass DanmakuFrameModule{\n\tconstructor(frame){\n\t\tthis.frame=frame;\n\t\tthis.enabled=false;\n\t}\n}\nfunction addEvents(target,events={}){\n\tfor(let e in events)e.split(/\\,/g).forEach(e2=>target.addEventListener(e2,events[e]));\n}\n\nexport {DanmakuFrame,DanmakuFrameModule,ResizeSensor}","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\n(function(f){\n\tif (typeof define === \"function\" && define.amd) {\n\t    define(f);\n\t}else if (typeof exports === \"object\") {\n\t    module.exports = f();\n\t}else {\n\t    (0,eval)('this').Mat = f();\n\t}\n})(function(){\nconst global= (0,eval)('this');\nconst TypedArray=global.Float32Array&&global.Float32Array.prototype;\n\nfunction createClass(Constructor){\n\tclass Matrix{\n\t\tget length(){return this._len;}\n\t\tstatic leftMultiply(m){\n\t\t\treturn this.set(Mat.multiply(m,this,Mat(m.row,this.column)));\n\t\t}\n\t\tstatic rightMultiply(m){\n\t\t\treturn this.set(Mat.multiply(this,m,Mat(this.row,m,column)));\n\t\t}\n\t\tstatic fill(n){\n\t\t\targuments.length||(n=0);\n\t\t\tfor(let i=this.length;i--;)this[i]=n;\n\t\t\treturn this;\n\t\t}\n\t\tstatic set(arr,offset){\n\t\t\toffset||(offset=0);\n\t\t\tfor(let i=(arr.length+offset)<=this.length?arr.length:(this.length-offset);i--;)\n\t\t\t\tthis[offset+i]=arr[i];\n\t\t\treturn this;\n\t\t}\n\t\tstatic put(m,row,column){\n\t\t\tMat.put(this,m,row||0,column||0);\n\t\t\treturn this;\n\t\t}\n\t\tstatic rotate2d(t){\n\t\t\treturn this.set(Mat.rotate2d(this,t,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic translate2d(x,y){\n\t\t\treturn this.set(Mat.translate2d(this,x,y,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic scale2d(x,y){\n\t\t\treturn this.set(Mat.scale2d(this,x,y,Mat.Matrixes.T3));\n\t\t}\n\t\tstatic rotate3d(tx,ty,tz){\n\t\t\treturn this.set(Mat.rotate3d(this,tx,ty,tz,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic scale3d(x,y,z){\n\t\t\treturn this.set(Mat.scale3d(this,x,y,z,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic translate3d(x,y,z){\n\t\t\treturn this.set(Mat.translate3d(this,x,y,z,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateX(t){\n\t\t\treturn this.set(Mat.rotateX(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateY(t){\n\t\t\treturn this.set(Mat.rotateY(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic rotateZ(t){\n\t\t\treturn this.set(Mat.rotateZ(this,t,Mat.Matrixes.T4));\n\t\t}\n\t\tstatic clone(){\n\t\t\treturn Mat(this.row,this.column,this);\n\t\t}\n\t\tstatic toString(){\n\t\t\tif(this.length === 0)return '';\n\t\t\tfor(var i=0,lines=[],tmp=[];i<this.length;i++){\n\t\t\t\tif(i && (i%this.column === 0)){\n\t\t\t\t\tlines.push(tmp.join('\\t'));\n\t\t\t\t\ttmp.length=0;\n\t\t\t\t}\n\t\t\t\ttmp.push(this[i]||0);\n\t\t\t}\n\t\t\tlines.push(tmp.join('\t'));\n\t\t\treturn lines.join('\\n');\n\t\t}\n\t}\n\tclass staticMethods{\n\t\t//static methods\n\t\tstatic Identity(n){//return a new Identity Matrix\n\t\t\tlet m=Mat(n,n,0);\n\t\t\tfor(let i=n;i--;)m[i*n+i]=1;\n\t\t\treturn m;\n\t\t}\n\t\tstatic Perspective(fovy,aspect,znear,zfar,result){\n\t\t\tvar y1=znear*Math.tan(fovy*Math.PI/360.0),\n\t\t\t\tx1=y1*aspect,\n\t\t\t\tm=result||Mat(4,4,0);\n\t\t\tm[0]=2*znear/(x1+x1);\n\t\t\tm[5]=2*znear/(y1+y1);\n\t\t\tm[10]=-(zfar+znear)/(zfar-znear);\n\t\t\tm[14]=-2*zfar*znear/(zfar-znear);\n\t\t\tm[11]=-1;\n\t\t    if(result)m[1]=m[2]=m[3]=m[4]=m[6]=m[7]=m[8]=m[9]=m[12]=m[13]=m[15]=0;\n\t\t    return m;\n\t\t}\n\t\tstatic multiply(a,b,result){\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tlet row=a.row,column=Math.min(a.column,b.column),r=result||Mat(row,column),c,i,ind;\n\t\t\tfor(let l=row;l--;){\n\t\t\t\tfor(c=column;c--;){\n\t\t\t\t\tr[ind=(l*r.column+c)]=0;\n\t\t\t\t\tfor(i=a.column;i--;){\n\t\t\t\t\t\tr[ind]+=(a[l*a.column+i]*b[c+i*b.column]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic multiplyString(a,b,array,ignoreZero=true){//work out the equation for every elements,only for debug and only works with Array matrixes\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tvar r=array||Mat(a.row,b.column),l,c,i,ind;\n\t\t\tfor(l=a.row;l--;){\n\t\t\t\tfor(c=b.column;c--;){\n\t\t\t\t\tr[ind=(l*b.column+c)]='';\n\t\t\t\t\tfor(i=0;i<a.column;i++){\n\t\t\t\t\t\tif(ignoreZero && (a[l*a.column+i]==0 ||b[c+i*b.column]==0))continue;\n\t\t\t\t\t\tr[ind]+=(((i&&r[ind])?'+':'')+'('+a[l*a.column+i]+')*('+b[c+i*b.column])+')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic add(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||Mat(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r[i]=a[i]+b[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic minus(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||Mat(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r[i]=a[i]-b[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic rotate2d(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotate2d;\n\t\t\tMr[0]=Mr[4]=Math.cos(t);\n\t\t\tMr[1]=-(Mr[3]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic scale2d(m,x,y,result){\n\t\t\tconst Mr=Mat.Matrixes.scale2d;\n\t\t\tMr[0]=x;\n\t\t\tMr[4]=y;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic translate2d(m,x,y,result){\n\t\t\tconst Mr=Mat.Matrixes.translate2d;\n\t\t\tMr[2]=x;\n\t\t\tMr[5]=y;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(3,3));\n\t\t}\n\t\tstatic rotate3d(m,tx,ty,tz,result){\n\t\t\tconst Xc=Math.cos(tx),Xs=Math.sin(tx),\n\t\t\t\tYc=Math.cos(ty),Ys=Math.sin(ty),\n\t\t\t\tZc=Math.cos(tz),Zs=Math.sin(tz),\n\t\t\t\tMr=Mat.Matrixes.rotate3d;\n\t\t\tMr[0]=Zc*Yc;\n\t\t\tMr[1]=Zc*Ys*Xs-Zs*Xc;\n\t\t\tMr[2]=Zc*Ys*Xc+Zs*Xs;\n\t\t\tMr[4]=Zs*Yc;\n\t\t\tMr[5]=Zs*Ys*Xs+Zc*Xc;\n\t\t\tMr[6]=Zs*Ys*Xc-Zc*Xs;\n\t\t\tMr[8]=-Ys;\n\t\t\tMr[9]=Yc*Xs;\n\t\t\tMr[10]=Yc*Xc;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateX(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateX;\n\t\t\tMr[10]=Mr[5]=Math.cos(t);\n\t\t\tMr[6]=-(Mr[9]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateY(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateY;\n\t\t\tMr[10]=Mr[0]=Math.cos(t);\n\t\t\tMr[8]=-(Mr[2]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic rotateZ(m,t,result){\n\t\t\tconst Mr=Mat.Matrixes.rotateZ;\n\t\t\tMr[5]=Mr[0]=Math.cos(t);\n\t\t\tMr[1]=-(Mr[4]=Math.sin(t));\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic scale3d(m,x,y,z,result){\n\t\t\tconst Mr=Mat.Matrixes.scale3d;\n\t\t\tMr[0]=x;\n\t\t\tMr[5]=y;\n\t\t\tMr[10]=z;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic translate3d(m,x,y,z,result){\n\t\t\tconst Mr=Mat.Matrixes.translate3d;\n\t\t\tMr[12]=x;\n\t\t\tMr[13]=y;\n\t\t\tMr[14]=z;\n\t\t\treturn Mat.multiply(Mr,m,result||Mat(4,4));\n\t\t}\n\t\tstatic put(m,sub,row,column){\n\t\t\tlet c,ind,i;\n\t\t\trow||(row=0);\n\t\t\tcolumn||(column=0);\n\t\t\tfor(let l=sub.row;l--;){\n\t\t\t\tif(l+row>=m.row)continue;\n\t\t\t\tfor(c=sub.column;c--;){\n\t\t\t\t\tif(c+column>=m.column)continue;\n\t\t\t\t\tm[(l+row)*m.column+c+column]=sub[l*sub.column+c];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic createClass(Constructor){\n\t\t\treturn createClass(Constructor);\n\t\t}\n\t}\n\tvar testArray=new Constructor(1);\n\tObject.defineProperty(Matrix,'_instanceofTypedArray',{value:!!(TypedArray&&TypedArray.isPrototypeOf(testArray))});\n\ttestArray=null;\n\n\tObject.setPrototypeOf(Matrix,Constructor.prototype);\n\tfunction Mat(l,c,fill){\n\t\tconst M=new Constructor(l*c);\n\t\tObject.setPrototypeOf(M,Matrix);\n\t\tObject.defineProperty(M,'length',{value:l*c});\n\t\tObject.defineProperty(M,'row',{value:l});\n\t\tObject.defineProperty(M,'column',{value:c});\n\t\tif(arguments.length>=3){\n\t\t\tif(Matrix._instanceofTypedArray&&(fill===0)){}\n\t\t\telse if(typeof fill === 'number'){\n\t\t\t\tM.fill(fill);\n\t\t\t}else if(fill.length){\n\t\t\t\tM.set(fill);\n\t\t\t}\n\t\t}\n\t\treturn M;\n\t}\n\tObject.setPrototypeOf(Mat,staticMethods);\n\tMat.Matrixes={//do not modify these matrixes manually and dont use them\n\t\tI2:Mat.Identity(2),\n\t\tI3:Mat.Identity(3),\n\t\tI4:Mat.Identity(4),\n\t\tT3:Mat(3,3,0),\n\t\tT4:Mat(4,4,0),\n\t\trotate2d:Mat.Identity(3),\n\t\ttranslate2d:Mat.Identity(3),\n\t\tscale2d:Mat.Identity(3),\n\t\ttranslate3d:Mat.Identity(4),\n\t\trotate3d:Mat.Identity(4),\n\t\trotateX:Mat.Identity(4),\n\t\trotateY:Mat.Identity(4),\n\t\trotateZ:Mat.Identity(4),\n\t\tscale3d:Mat.Identity(4),\n\t}\n\treturn Mat;\n}\nreturn createClass(global.Float32Array?Float32Array:Array);\n});\n","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*\nCopyright luojia@luojia.me\nLGPL license\n\ndanmaku-frame text2d mod\n*/\n'use strict';\n\nimport '../lib/setImmediate/setImmediate.js'\nimport Promise from '../lib/promise/promise.js'\nimport Text2d from './text2d.js'\nimport Text3d from './text3d.js'\nimport TextCanvas from './textCanvas.js'\n\nif (!window.Promise)window.Promise = Promise;\n\n\n/*\ndanmaku obj struct\n{\n\t_:'text',\n\ttime:(number)msec time,\n\ttext:(string),\n\tstyle:(object)to be combined whit default style,\n\tmode:(number)\n}\n\ndanmaku mode\n\t0:right\n\t1:left\n\t2:bottom\n\t3:top\n*/\n\nfunction init(DanmakuFrame,DanmakuFrameModule){\n\tconst defProp=Object.defineProperty;\n\tconst requestIdleCallback=window.requestIdleCallback||setImmediate;\n\tlet useImageBitmap=false;\n\n\tclass TextDanmaku extends DanmakuFrameModule{\n\t\tconstructor(frame){\n\t\t\tsuper(frame);\n\t\t\tthis.list=[];//danmaku object array\n\t\t\tthis.indexMark=0;//to record the index of last danmaku in the list\n\t\t\tthis.tunnel=new tunnelManager();\n\t\t\tthis.paused=true;\n\t\t\tthis.randomText=`danmaku_text_${(Math.random()*999999)|0}`;\n\t\t\tthis.defaultStyle={//these styles can be overwrote by the 'font' property of danmaku object\n\t\t\t\tfontStyle: null,\n\t\t\t\tfontWeight: 300,\n\t\t\t\tfontVariant: null,\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tlineHeight: null,//when this style is was not a number,the number will be the same as fontSize\n\t\t\t\tfontSize: 24,\n\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\tstrokeWidth: 1,//outline width\n\t\t\t\tstrokeColor: \"#888\",\n\t\t\t\tshadowBlur: 5,\n\t\t\t\ttextAlign:'start',//left right center start end\n\t\t\t\tshadowColor: \"#000\",\n\t\t\t\tshadowOffsetX:0,\n\t\t\t\tshadowOffsetY:0,\n\t\t\t\tfill:true,//if the text should be filled\n\t\t\t};\n\t\t\tdocument.styleSheets[0].insertRule(`.${this.randomText}_fullfill{top:0;left:0;width:100%;height:100%;position:absolute;}`,0);\n\n\t\t\tdefProp(this,'renderMode',{configurable:true});\n\t\t\tdefProp(this,'activeRenderMode',{configurable:true,value:null});\n\t\t\tconst con=this.container=document.createElement('div');\n\t\t\tcon.classList.add(`${this.randomText}_fullfill`);\n\t\t\tframe.container.appendChild(con);\n\n\t\t\t//init modes\n\t\t\tthis.text2d=new Text2d(this);\n\t\t\tthis.text3d=new Text3d(this);\n\t\t\tthis.textCanvas=new TextCanvas(this);\n\t\t\t\n\t\t\tthis.textCanvasContainer.hidden=this.canvas.hidden=this.canvas3d.hidden=true;\n\t\t\tthis.modes={\n\t\t\t\t1:this.textCanvas,\n\t\t\t\t2:this.text2d,\n\t\t\t\t3:this.text3d,\n\t\t\t};\n\t\t\tthis.GraphCache=[];//COL text graph cache\n\t\t\tthis.DanmakuText=[];\n\n\t\t\t//opt time record\n\t\t\tthis.cacheCleanTime=0;\n\t\t\tthis.danmakuMoveTime=0;\n\t\t\tthis.danmakuCheckTime=0;\n\n\t\t\tthis.danmakuCheckSwitch=true;\n\t\t\tthis.options={\n\t\t\t\tallowLines:false,//allow multi-line danmaku\n\t\t\t\tscreenLimit:0,//the most number of danmaku on the screen\n\t\t\t\tclearWhenTimeReset:true,//clear danmaku on screen when the time is reset\n\t\t\t\tspeed:6.5,\n\t\t\t}\n\t\t\taddEvents(document,{\n\t\t\t\tvisibilitychange:e=>{\n\t\t\t\t\tif(document.hidden){\n\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.reCheckIndexMark();\n\t\t\t\t\t\tif(this.frame.working)this.start();\n\t\t\t\t\t\telse{this.draw(true);}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._checkNewDanmaku=this._checkNewDanmaku.bind(this);\n\t\t\tthis._cleanCache=this._cleanCache.bind(this);\n\t\t\tsetInterval(this._cleanCache,5000);//set an interval for cache cleaning\n\t\t\tthis.setRenderMode(1);\n\t\t}\n\t\tsetRenderMode(n){\n\t\t\tif(this.renderMode===n || !(n in this.modes) || !this.modes[n].supported)return;\n\t\t\tthis.clear();\n\t\t\tthis.activeRenderMode&&this.activeRenderMode.disable();\n\t\t\tthis.modes[n].enable();\n\t\t\tdefProp(this,'activeRenderMode',{value:this.modes[n]});\n\t\t\tdefProp(this,'renderMode',{value:n});\n\t\t}\n\t\tmedia(media){\n\t\t\taddEvents(media,{\n\t\t\t\tseeked:()=>{\n\t\t\t\t\tthis.start();\n\t\t\t\t\tthis.time();\n\t\t\t\t\tthis._clearCanvas();\n\t\t\t\t},\n\t\t\t\tseeking:()=>this.pause(),\n\t\t\t\tstalled:()=>this.pause(),\n\t\t\t});\n\t\t}\n\t\tstart(){\n\t\t\tthis.paused=false;\n\t\t\tthis.activeRenderMode.start();\n\t\t}\n\t\tpause(){\n\t\t\tthis.paused=true;\n\t\t\tthis.activeRenderMode.pause();\n\t\t}\n\t\tload(d){\n\t\t\tif(!d || d._!=='text'){return false;}\n\t\t\tif(typeof d.text !== 'string'){\n\t\t\t\tconsole.error('wrong danmaku object:',d);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet t=d.time,ind,arr=this.list;\n\t\t\tind=dichotomy(arr,d.time,0,arr.length-1,false)\n\t\t\tarr.splice(ind,0,d);\n\t\t\tif(ind<this.indexMark)this.indexMark++;\n\t\t\t//round d.style.fontSize to prevent Iifinity loop in tunnel\n\t\t\td.style.fontSize=(d.style.fontSize+0.5)|0;\n\t\t\tif(d.style.fontSize===NaN || d.style.fontSize===Infinity || d.style.fontSize===0)d.style.fontSize=this.defaultStyle.fontstyle.fontSize;\n\t\t\tif(typeof d.mode !== 'number')d.mode=0;\n\t\t\treturn d;\n\t\t}\n\t\tloadList(danmakuArray){\n\t\t\tdanmakuArray.forEach(d=>this.load(d));\n\t\t}\n\t\tunload(d){\n\t\t\tif(!d || d._!=='text')return false;\n\t\t\tconst i=this.list.indexOf(d);\n\t\t\tif(i<0)return false;\n\t\t\tthis.list.splice(i,1);\n\t\t\tif(i<this.indexMark)this.indexMark--;\n\t\t\treturn true;\n\t\t}\n\t\t_checkNewDanmaku(){\n\t\t\tlet d,time=this.frame.time,hidden=document.hidden;\n\t\t\tif(this.danmakuCheckTime===time)return;\n\t\t\tif(this.list.length)\n\t\t\tfor(;(this.indexMark<this.list.length)&&(d=this.list[this.indexMark])&&(d.time<=time);this.indexMark++){//add new danmaku\n\t\t\t\tif(this.options.screenLimit>0 && this.DanmakuText.length>=this.options.screenLimit ||hidden){continue;}//continue if the number of danmaku on screen has up to limit or doc is not visible\n\t\t\t\tthis._addNewDanmaku(d);\n\t\t\t}\n\t\t\tthis.danmakuCheckTime=time;\n\t\t}\n\t\t_addNewDanmaku(d){\n\t\t\tconst cHeight=this.canvas.height,cWidth=this.canvas.width;\n\t\t\tlet t;\n\t\t\tif(this.GraphCache.length){\n\t\t\t\tt=this.GraphCache.shift();\n\t\t\t}else{\n\t\t\t\tt=new TextGraph();\n\t\t\t}\n\t\t\tt.danmaku=d;\n\t\t\tt.drawn=false;\n\t\t\tt.text=this.options.allowLines?d.text:d.text.replace(/\\n/g,' ');\n\t\t\tt.time=d.time;\n\t\t\tObject.setPrototypeOf(t.font,this.defaultStyle);\n\t\t\tObject.assign(t.font,d.style);\n\t\t\tif(d.style.color){\n\t\t\t\tif(t.font.color && t.font.color[0]!=='#'){\n\t\t\t\t\tt.font.color='#'+d.style.color;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(d.mode>1)t.font.textAlign='center';\n\t\t\tt.prepare(this.renderMode===3?false:true);\n\t\t\t//find tunnel number\n\t\t\tconst tnum=this.tunnel.getTunnel(t,cHeight);\n\t\t\t//calc margin\n\t\t\tlet margin=(tnum<0?0:tnum)%cHeight;\n\t\t\tswitch(d.mode){\n\t\t\t\tcase 0:case 1:case 3:{\n\t\t\t\t\tt.style.y=margin;break;\n\t\t\t\t}\n\t\t\t\tcase 2:{\n\t\t\t\t\tt.style.y=cHeight-margin-t.style.height-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(d.mode){\n\t\t\t\tcase 0:{t.style.x=cWidth;break;}\n\t\t\t\tcase 1:{t.style.x=-t.style.width;break;}\n\t\t\t\tcase 2:case 3:{t.style.x=(cWidth-t.style.width)/2;}\n\t\t\t}\n\t\t\tthis.DanmakuText.push(t);\n\t\t\tthis.activeRenderMode.newDanmaku(t);\n\t\t}\n\t\t_calcSideDanmakuPosition(t,T,cWidth){\n\t\t\tlet R=!t.danmaku.mode,style=t.style;\n\t\t\treturn (R?cWidth:(-style.width))\n\t\t\t\t\t+(R?-1:1)*this.frame.rate*(style.width+1024)*(T-t.time)*this.options.speed/60000;\n\t\t}\n\t\t_calcDanmakusPosition(){\n\t\t\tlet T=this.frame.time;\n\t\t\tif((this.danmakuMoveTime===T)||this.paused)return;\n\t\t\tconst cWidth=this.canvas.width;\n\t\t\tlet R,i,t,style,X,rate=this.frame.rate;\n\t\t\tthis.danmakuMoveTime=T;\n\t\t\tfor(i=this.DanmakuText.length;i--;){\n\t\t\t\tt=this.DanmakuText[i];\n\t\t\t\tif(t.time>T){\n\t\t\t\t\tthis.removeText(t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstyle=t.style;\n\n\t\t\t\tswitch(t.danmaku.mode){\n\t\t\t\t\tcase 0:case 1:{\n\t\t\t\t\t\tR=!t.danmaku.mode;\n\t\t\t\t\t\tstyle.x=X=this._calcSideDanmakuPosition(t,T,cWidth);\n\t\t\t\t\t\tif(t.tunnelNumber>=0 && ((R&&(X+style.width)+10<cWidth) || (!R&&X>10)) ){\n\t\t\t\t\t\t\tthis.tunnel.removeMark(t);\n\t\t\t\t\t\t}else if( (R&&(X<-style.width-10)) || (!R&&(X>cWidth+style.width+10)) ){//go out the canvas\n\t\t\t\t\t\t\tthis.removeText(t);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 2:case 3:{\n\t\t\t\t\t\tif((T-t.time)>this.options.speed*1000/rate){\n\t\t\t\t\t\t\tthis.removeText(t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_cleanCache(force){//clean text object cache\n\t\t\tconst now=Date.now();\n\t\t\tif(this.GraphCache.length>30 || force){//save 20 cached danmaku\n\t\t\t\tfor(let ti = 0;ti<this.GraphCache.length;ti++){\n\t\t\t\t\tif(force || (now-this.GraphCache[ti].removeTime) > 10000){//delete cache which has not used for 10s\n\t\t\t\t\t\tthis.activeRenderMode.deleteTextObject(this.GraphCache[ti]);\n\t\t\t\t\t\tthis.GraphCache.splice(ti,1);\n\t\t\t\t\t}else{break;}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdraw(force){\n\t\t\tif(!this.enabled || (!force&&this.paused))return;\n\t\t\tthis._calcDanmakusPosition();\n\t\t\tthis.activeRenderMode.draw(force);\n\t\t\trequestIdleCallback(this._checkNewDanmaku);\n\t\t}\n\t\tremoveText(t){//remove the danmaku from screen\n\t\t\tlet ind=this.DanmakuText.indexOf(t);\n\t\t\tif(ind>=0)this.DanmakuText.splice(ind,1);\n\t\t\tthis.tunnel.removeMark(t);\n\t\t\tt._bitmap=t.danmaku=null;\n\t\t\tt.removeTime=Date.now();\n\t\t\tthis.GraphCache.push(t);\n\t\t\tthis.activeRenderMode.remove(t);\n\t\t}\n\t\tresize(){\n\t\t\tlet w=this.canvas.width=this.canvas3d.width=this.frame.container.offsetWidth;\n\t\t\tlet h=this.canvas.height=this.canvas3d.height=this.frame.container.offsetHeight;\n\t\t\tthis.text2d.resize(w,h);\n\t\t\tthis.text3d.resize(w,h);\n\t\t\tthis.textCanvas.resize(w,h);\n\t\t\tthis.draw(true);\n\t\t}\n\t\t\n\t\t_clearCanvas(forceFull){\n\t\t\tthis.activeRenderMode&&this.activeRenderMode.clear(forceFull);\n\t\t}\n\t\tclear(){//clear danmaku on the screen\n\t\t\tfor(let i=this.DanmakuText.length,T;i--;){\n\t\t\t\tT=this.DanmakuText[i];\n\t\t\t\tif(T.danmaku)this.removeText(T);\n\t\t\t}\n\t\t\tthis.tunnel.reset();\n\t\t\tthis._clearCanvas(true);\n\t\t}\n\t\treCheckIndexMark(t=this.frame.time){\n\t\t\tthis.indexMark=dichotomy(this.list,t,0,this.list.length-1,true);\n\t\t}\n\t\ttime(t=this.frame.time){//reset time,you should invoke it when the media has seeked to another time\n\t\t\tthis.reCheckIndexMark(t);\n\t\t\tif(this.options.clearWhenTimeReset){this.clear();}\n\t\t\telse{this.resetTimeOfDanmakuOnScreen();}\n\t\t}\n\t\tresetTimeOfDanmakuOnScreen(cTime){\n\t\t\t//cause the position of the danmaku is based on time\n\t\t\t//and if you don't want these danmaku on the screen to disappear after seeking,their time should be reset\n\t\t\tif(cTime===undefined)cTime=this.frame.time;\n\t\t\tthis.DanmakuText.forEach(t=>{\n\t\t\t\tif(!t.danmaku)return;\n\t\t\t\tt.time=cTime-(this.danmakuMoveTime-t.time);\n\t\t\t});\n\t\t}\n\t\tdanmakuAt(x,y){//return a list of danmaku which covers this position\n\t\t\tconst list=[];\n\t\t\tif(!this.enabled)return list;\n\t\t\tthis.DanmakuText.forEach(t=>{\n\t\t\t\tif(!t.danmaku)return;\n\t\t\t\tif(t.style.x<=x && t.style.x+t.style.width>=x && t.style.y<=y && t.style.y+t.style.height>=y)\n\t\t\t\t\tlist.push(t.danmaku);\n\t\t\t});\n\t\t\treturn list;\n\t\t}\n\t\tenable(){//enable the plugin\n\t\t\tthis.textCanvasContainer.hidden=false;\n\t\t}\n\t\tdisable(){//disable the plugin\n\t\t\tthis.textCanvasContainer.hidden=true;\n\t\t\tthis.pause();\n\t\t\tthis.clear();\n\t\t}\n\t\tset useImageBitmap(v){\n\t\t\tuseImageBitmap=(typeof createImageBitmap ==='function')?v:false;\n\t\t}\n\t\tget useImageBitmap(){return useImageBitmap;}\n\t}\n\n\n\tclass TextGraph{//code copied from CanvasObjLibrary\n\t\tconstructor(text=''){\n\t\t\tthis._fontString='';\n\t\t\tthis._renderList=null;\n\t\t\tthis.style={};\n\t\t\tthis.font={};\n\t\t\tthis.text=text;\n\t\t\tthis._renderToCache=this._renderToCache.bind(this);\n\t\t\tdefProp(this,'_cache',{configurable:true});\n\t\t}\n\t\tprepare(async=false){//prepare text details\n\t\t\tif(!this._cache){\n\t\t\t\tdefProp(this,'_cache',{value:document.createElement(\"canvas\")});\n\t\t\t}\n\t\t\tlet ta=[];\n\t\t\t(this.font.fontStyle)&&ta.push(this.font.fontStyle);\n\t\t\t(this.font.fontVariant)&&ta.push(this.font.fontVariant);\n\t\t\t(this.font.fontWeight)&&ta.push(this.font.fontWeight);\n\t\t\tta.push(`${this.font.fontSize}px`);\n\t\t\t(this.font.fontFamily)&&ta.push(this.font.fontFamily);\n\t\t\tthis._fontString = ta.join(' ');\n\n\t\t\tconst imgobj = this._cache,ct = (imgobj.ctx2d||(imgobj.ctx2d=imgobj.getContext(\"2d\")));\n\t\t\tct.font = this._fontString;\n\t\t\tthis._renderList = this.text.split(/\\n/g);\n\t\t\tthis.estimatePadding=Math.max(\n\t\t\t\tthis.font.shadowBlur+5+Math.max(Math.abs(this.font.shadowOffsetY),Math.abs(this.font.shadowOffsetX)),\n\t\t\t\tthis.font.strokeWidth+3\n\t\t\t);\n\t\t\tlet w = 0,tw,lh=(typeof this.font.lineHeigh ==='number')?this.font.lineHeigh:this.font.fontSize;\n\t\t\tfor (let i = this._renderList.length; i -- ;) {\n\t\t\t\ttw = ct.measureText(this._renderList[i]).width;\n\t\t\t\t(tw>w)&&(w=tw);//max\n\t\t\t}\n\t\t\timgobj.width = (this.style.width = w) + this.estimatePadding*2;\n\t\t\timgobj.height = (this.style.height = this._renderList.length * lh)+ ((lh<this.font.fontSize)?this.font.fontSize*2:0) + this.estimatePadding*2;\n\n\t\t\tct.translate(this.estimatePadding, this.estimatePadding);\n\t\t\tif(async){\n\t\t\t\trequestIdleCallback(this._renderToCache);\n\t\t\t}else{\n\t\t\t\tthis._renderToCache();\n\t\t\t}\n\t\t}\n\t\t_renderToCache(){\n\t\t\tif(!this.danmaku)return;\n\t\t\tthis.render(this._cache.ctx2d);\n\t\t\tif(useImageBitmap){//use ImageBitmap\n\t\t\t\tif(this._bitmap){\n\t\t\t\t\tthis._bitmap.close();\n\t\t\t\t\tthis._bitmap=null;\n\t\t\t\t}\n\t\t\t\tcreateImageBitmap(this._cache).then(bitmap=>{\n\t\t\t\t\tthis._bitmap=bitmap;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\trender(ct){//render text\n\t\t\tif(!this._renderList)return;\n\t\t\tct.save();\n\t\t\tif(this.danmaku.highlight){\n\t\t\t\tct.fillStyle='rgba(255,255,255,0.3)';\n\t\t\t\tct.beginPath();\n\t\t\t\tct.rect(0,0,this.style.width,this.style.height);\n\t\t\t\tct.fill();\n\t\t\t}\n\t\t\tct.font=this._fontString;//set font\n\t\t\tct.textBaseline = 'top';\n\t\t\tct.lineWidth = this.font.strokeWidth;\n\t\t\tct.fillStyle = this.font.color;\n\t\t\tct.strokeStyle = this.font.strokeColor;\n\t\t\tct.shadowBlur = this.font.shadowBlur;\n\t\t\tct.shadowColor= this.font.shadowColor;\n\t\t\tct.shadowOffsetX = this.font.shadowOffsetX;\n\t\t\tct.shadowOffsetY = this.font.shadowOffsetY;\n\t\t\tct.textAlign = this.font.textAlign;\n\t\t\tlet lh=(typeof this.font.lineHeigh ==='number')?this.font.lineHeigh:this.font.fontSize,\n\t\t\t\tx;\n\t\t\tswitch(this.font.textAlign){\n\t\t\t\tcase 'left':case 'start':{\n\t\t\t\t\tx=0;break;\n\t\t\t\t}\n\t\t\t\tcase 'center':{\n\t\t\t\t\tx=this.style.width/2;break;\n\t\t\t\t}\n\t\t\t\tcase 'right':case 'end':{\n\t\t\t\t\tx=this.style.width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = this._renderList.length;i--;) {\n\t\t\t\tthis.font.strokeWidth&&ct.strokeText(this._renderList[i],x,lh*i);\n\t\t\t\tthis.font.fill&&ct.fillText(this._renderList[i],x, lh*i);\n\t\t\t}\n\t\t\tct.restore();\n\t\t}\n\t}\n\n\tclass tunnelManager{\n\t\tconstructor(){\n\t\t\tthis.reset();\n\t\t}\n\t\treset(){\n\t\t\tthis.right={};\n\t\t\tthis.left={};\n\t\t\tthis.bottom={};\n\t\t\tthis.top={};\n\t\t}\n\t\tgetTunnel(tobj,cHeight){//get the tunnel index that can contain the danmaku of the sizes\n\t\t\tlet tunnel=this.tunnel(tobj.danmaku.mode),\n\t\t\t\tsize=tobj.style.height,\n\t\t\t\tti=0,\n\t\t\t\ttnum=-1;\n\t\t\tif(typeof size !=='number' || size<=0){\n\t\t\t\tconsole.error('Incorrect size:'+size);\n\t\t\t\tsize=24;\n\t\t\t}\n\t\t\tif(size>cHeight)return 0;\n\n\t\t\twhile(tnum<0){\n\t\t\t\tfor(let t=ti+size-1;ti<=t;){\n\t\t\t\t\tif(tunnel[ti]){//used\n\t\t\t\t\t\tti+=tunnel[ti].tunnelHeight;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if((ti!==0)&&(ti%(cHeight-1))===0){//new page\n\t\t\t\t\t\tti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(ti===t){//get\n\t\t\t\t\t\ttnum=ti-size+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttobj.tunnelNumber=tnum;\n\t\t\ttobj.tunnelHeight=(((tobj.style.y+size)>cHeight)?1:size);\n\t\t\tthis.addMark(tobj);\n\t\t\treturn tnum;\n\t\t}\n\t\taddMark(tobj){\n\t\t\tlet t=this.tunnel(tobj.danmaku.mode);\n\t\t\tif(!t[tobj.tunnelNumber])t[tobj.tunnelNumber]=tobj;\n\t\t}\n\t\tremoveMark(tobj){\n\t\t\tlet t,tun=tobj.tunnelNumber;\n\t\t\tif(tun>=0&&(t=this.tunnel(tobj.danmaku.mode))[tun]===tobj){\n\t\t\t\tdelete t[tun];\n\t\t\t\ttobj.tunnelNumber=-1;\n\t\t\t}\n\t\t}\n\t\ttunnel(id){\n\t\t\treturn this[tunnels[id]];\n\t\t}\n\t}\n\n\tconst tunnels=['right','left','bottom','top'];\n\n\tfunction dichotomy(arr,t,start,end,position=false){\n\t\tif(arr.length===0)return 0;\n\t\tlet m=start,s=start,e=end;\n\t\twhile(start <= end){//dichotomy\n\t\t\tm=(start+end)>>1;\n\t\t\tif(t<=arr[m].time)end=m-1;\n\t\t\telse{start=m+1;}\n\t\t}\n\t\tif(position){//find to top\n\t\t\twhile(start>0 && (arr[start-1].time===t)){\n\t\t\t\tstart--;\n\t\t\t}\n\t\t}else{//find to end\n\t\t\twhile(start<=e &&  (arr[start].time===t)){\n\t\t\t\tstart++;\n\t\t\t}\n\t\t}\n\t\treturn start;\n\t}\n\n\tDanmakuFrame.addModule('TextDanmaku',TextDanmaku);\n};\n\nfunction addEvents(target,events={}){\n\tfor(let e in events)e.split(/\\,/g).forEach(e2=>target.addEventListener(e2,events[e]));\n}\nfunction limitIn(num,min,max){//limit the number in a range\n\treturn num<min?min:(num>max?max:num);\n}\nfunction emptyFunc(){}\nexport default init;","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Template from './textModuleTemplate.js';\n\nclass Text2d extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=false;\n\t\tdText.canvas=document.createElement('canvas');//the canvas\n\t\tdText.canvas.classList.add(`${dText.randomText}_fullfill`);\n\t\tdText.canvas.id='text2d';\n\t\tdText.context2d=dText.canvas.getContext('2d');//the canvas contex\n\t\tif(!dText.context2d){\n\t\t\tconsole.warn('text 2d not supported');\n\t\t\treturn;\n\t\t}\n\t\tdText.container.appendChild(dText.canvas);\n\t\tthis.supported=true;\n\t}\n\tdraw(force){\n\t\tlet ctx=this.dText.context2d,\n\t\t\tcW=ctx.canvas.width,\n\t\t\tdT=this.dText.DanmakuText,\n\t\t\ti=dT.length,\n\t\t\tt;\n\t\tctx.globalCompositeOperation='destination-over';\n\t\tthis.clear(force);\n\t\tfor(;i--;){\n\t\t\t(t=dT[i]).drawn||(t.drawn=true);\n\t\t\tif(cW>=t._cache.width){\n\t\t\t\tctx.drawImage(t._bitmap||t._cache, t.style.x-t.estimatePadding, t.style.y-t.estimatePadding);\n\t\t\t}else if(t.style.x-t.estimatePadding>=0){\n\t\t\t\tctx.drawImage(t._bitmap||t._cache, 0,0,cW,t._cache.height,t.style.x-t.estimatePadding,t.style.y-t.estimatePadding,cW,t._cache.height);\n\t\t\t}else{\n\t\t\t\tif(t.style.x-t.estimatePadding+t._cache.width<=cW){\n\t\t\t\t\tctx.drawImage(t._bitmap||t._cache, t.estimatePadding-t.style.x,0,t.style.x-t.estimatePadding+t._cache.width,t._cache.height,0,t.style.y-t.estimatePadding,t.style.x-t.estimatePadding+t._cache.width,t._cache.height);\n\t\t\t\t}else{\n\t\t\t\t\tctx.drawImage(t._bitmap||t._cache, t.estimatePadding-t.style.x,0,cW,t._cache.height,0,t.style.y-t.estimatePadding,cW,t._cache.height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tclear(force){\n\t\tlet ctx=this.dText.context2d;\n\t\tif(force||this._evaluateIfFullClearMode()){\n\t\t\tctx.clearRect(0,0,this.dText.canvas.width,this.dText.canvas.height);\n\t\t\treturn;\n\t\t}\n\t\tfor(let i=this.dText.DanmakuText.length,t;i--;){\n\t\t\tt=this.dText.DanmakuText[i];\n\t\t\tif(t.drawn){\n\t\t\t\tctx.clearRect(t.style.x-t.estimatePadding,t.style.y-t.estimatePadding,t._cache.width,t._cache.height);\n\t\t\t}\n\t\t}\n\t}\n\t_evaluateIfFullClearMode(){\n\t\tif(this.dText.DanmakuText.length>3)return true;\n\t\tlet l=this.dText.GraphCache[this.dText.GraphCache.length-1];\n\t\tif(l&&l.drawn){\n\t\t\tl.drawn=false;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tenable(){\n\t\tthis.dText.useImageBitmap=!(this.dText.canvas.hidden=false);\n\t}\n\tdisable(){\n\t\tthis.dText.canvas.hidden=true;\n\t}\n}\n\nexport default Text2d;","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Mat from '../lib/Mat/Mat.js'\nimport Template from './textModuleTemplate.js';\nconst requestIdleCallback=window.requestIdleCallback||setImmediate;\n\nclass Text3d extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=false;\n\t\tdText.canvas3d=document.createElement('canvas');//the canvas\n\t\tdText.canvas3d.classList.add(`${dText.randomText}_fullfill`);\n\t\tdText.canvas3d.id='text3d';\n\t\tdText.context3d=dText.canvas3d.getContext('webgl');//the canvas3d context\n\t\tif(!dText.context3d)dText.context3d=dText.canvas3d.getContext('expeimental-webgl');\n\n\t\tif(!dText.context3d){\n\t\t\tconsole.warn('text 3d not supported');\n\t\t\treturn;\n\t\t}\n\t\tthis.supported=true;\n\t\tdText.container.appendChild(dText.canvas3d);\n\t\tconst gl=this.gl=dText.context3d,canvas=dText.canvas3d;\n\t\t//init webgl\n\n\t\t//shader\n\t\tvar shaders={\n\t\tdanmakuFrag:[gl.FRAGMENT_SHADER,`\nvarying lowp vec2 vDanmakuTexCoord;\nuniform sampler2D uSampler;\n\nvoid main(void) {\n\tgl_FragColor = texture2D(uSampler,vDanmakuTexCoord);\n}`],\n\t\tdanmakuVert:[gl.VERTEX_SHADER,`\nattribute vec2 aVertexPosition;\nattribute vec2 aDanmakuTexCoord;\n\nuniform mat4 u2dCoordinate;\nuniform vec2 uDanmakuPos;\n\nvarying lowp vec2 vDanmakuTexCoord;\n\nvoid main(void) {\n\tgl_Position = u2dCoordinate * vec4(aVertexPosition+uDanmakuPos,0,1);\n\tvDanmakuTexCoord = aDanmakuTexCoord;\n}`],\n\t\t}\n\t\tfunction shader(name){\n\t\t\tvar s=gl.createShader(shaders[name][0]);\n\t\t\tgl.shaderSource(s,shaders[name][1]);\n\t\t\tgl.compileShader(s);\n\t\t\tif (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\t\n\t\t\t\tthrow(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(s));\t\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t\tvar fragmentShader = shader(\"danmakuFrag\");\n\t\tvar vertexShader = shader(\"danmakuVert\");\n\t\tvar shaderProgram = this.shaderProgram = gl.createProgram();\n\t\tgl.attachShader(shaderProgram,vertexShader);\n\t\tgl.attachShader(shaderProgram,fragmentShader);\n\t\tgl.linkProgram(shaderProgram);\n\t\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\t\tconsole.error(\"Unable to initialize the shader program.\");\n\t\t}\n\t\tgl.useProgram(shaderProgram);\n\n\t\t//scene\n\t\tgl.clearColor(0, 0, 0, 0.0);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA ,gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n\n\t\tthis.maxTexSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\n\t\tthis.uSampler=gl.getUniformLocation(shaderProgram,\"uSampler\");\n\t\tthis.u2dCoord=gl.getUniformLocation(shaderProgram,\"u2dCoordinate\");\n\t\tthis.uDanmakuPos=gl.getUniformLocation(shaderProgram,\"uDanmakuPos\");\n\t\tthis.aVertexPosition=gl.getAttribLocation(shaderProgram,\"aVertexPosition\");\n\t\tthis.atextureCoord=gl.getAttribLocation(shaderProgram,\"aDanmakuTexCoord\");\n\n\t\tgl.enableVertexAttribArray(this.aVertexPosition);\n\t\tgl.enableVertexAttribArray(this.atextureCoord);\n\n\t\tthis.commonTexCoordBuffer=gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER,this.commonTexCoordBuffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER,commonTextureCoord,gl.STATIC_DRAW);\n\t\tgl.vertexAttribPointer(this.atextureCoord,2,gl.FLOAT,false,0,0);\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.uniform1i(this.uSampler,0);\n\t}\n\tdraw(force){\n\t\tconst gl=this.gl,l=this.dText.DanmakuText.length;\n\t\tfor(let i=0,t;i<l;i++){\n\t\t\tt=this.dText.DanmakuText[i];\n\t\t\tif(!t || !t.glDanmaku)continue;\n\t\t\tgl.uniform2f(this.uDanmakuPos,t.style.x-t.estimatePadding,t.style.y-t.estimatePadding);\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER,t.verticesBuffer);\n\t\t\tgl.vertexAttribPointer(this.aVertexPosition,2,gl.FLOAT,false,0,0);\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D,t.texture);\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP,0,4);\n\t\t}\n\t\tgl.flush();\n\t}\n\tclear(){\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\t}\n\tdeleteTextObject(t){\n\t\tconst gl=this.gl;\n\t\tif(t.texture)gl.deleteTexture(t.texture);\n\t\tif(t.verticesBuffer)gl.deleteBuffer(t.verticesBuffer);\n\t\tif(t.textureCoordBuffer)gl.deleteBuffer(t.textureCoordBuffer);\n\t}\n\tresize(w,h){\n\t\tif(!this.supported)return;\n\t\tconst gl=this.gl,canvas=this.dText.canvas3d;\n\t\tgl.viewport(0,0,canvas.width,canvas.height);\n\t\t//to 2d canvas\n\t\tgl.uniformMatrix4fv(this.u2dCoord,false,Mat.Identity(4).translate3d(-1,1,0).scale3d(2/canvas.width,-2/canvas.height,0));\n\t}\n\tenable(){\n\t\tthis.dText.useImageBitmap=this.dText.canvas3d.hidden=false;\n\n\t}\n\tdisable(){\n\t\tthis.dText._cleanCache(true);\n\t\tthis.dText.canvas3d.hidden=true;\n\t}\n\tnewDanmaku(t){\n\t\tconst gl=this.gl;\n\t\tt.glDanmaku=false;\n\t\tif(t._cache.height>this.maxTexSize || t._cache.width>this.maxTexSize){//ignore too large danmaku image\n\t\t\tconsole.warn('Ignore a danmaku width too large size',t.danmaku);\n\t\t\treturn;\n\t\t}\n\t\tlet tex;\n\t\tif(!(tex=t.texture)){\n\t\t\ttex=t.texture=gl.createTexture();\n\t\t\tgl.bindTexture(gl.TEXTURE_2D,tex);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);\n\t\t}\n\t\t\n\t\trequestIdleCallback(()=>{\n\t\t\tgl.bindTexture(gl.TEXTURE_2D,tex);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,t._cache);\n\t\t\tt.glDanmaku=true;\n\t\t});\n\n\t\t//vert\n\t\tt.verticesBuffer||(t.verticesBuffer=gl.createBuffer());\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER,t.verticesBuffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER,new Float32Array([\n\t\t\t0,0,\n\t\t\tt._cache.width,0,\n\t\t\t0,t._cache.height,\n\t\t\tt._cache.width,t._cache.height,\n\t\t]), gl.STATIC_DRAW);\n\t}\n}\n\n\n\nconst commonTextureCoord=new Float32Array([\n\t0.0,  0.0,\n\t1.0,  0.0,\n\t0.0,  1.0,\n\t1.0,  1.0,\n]);\n\n\nexport default Text3d;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Template from './textModuleTemplate.js';\n\nclass TextCanvas extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=dText.text2d.supported;\n\t\tif(!this.supported)return;\n\t\tdocument.styleSheets[0].insertRule(`#${dText.randomText}_textCanvasContainer canvas{will-change:transform;top:0;left:0;position:absolute;}`,0);\n\t\tdocument.styleSheets[0].insertRule(`#${dText.randomText}_textCanvasContainer.moving canvas{transition:transform 500s linear;}`,0);\n\t\tdocument.styleSheets[0].insertRule(`#${dText.randomText}_textCanvasContainer{will-change:transform;pointer-events:none;overflow:hidden;}`,0);\n\n\t\tdText.textCanvasContainer=document.createElement('div');//for text canvas\n\t\tdText.textCanvasContainer.classList.add(`${dText.randomText}_fullfill`);\n\t\tdText.textCanvasContainer.id=`${dText.randomText}_textCanvasContainer`;\n\t\tdText.container.appendChild(dText.textCanvasContainer);\n\t\tdocument.addEventListener('visibilitychange',e=>{\n\t\t\tif(dText.renderMode===1 &&!document.hidden){\n\t\t\t\tthis.resetPos();\n\t\t\t}\n\t\t});\n\t}\n\tpause(){\n\t\tlet T=this.dText.frame.time;\n\t\tthis.dText.textCanvasContainer.classList.remove('moving');\n\t\tfor(let dT=this.dText,i=dT.DanmakuText.length,t;i--;){\n\t\t\tif((t=dT.DanmakuText[i]).danmaku.mode>=2)continue;\n\t\t\tlet X=this.dText._calcSideDanmakuPosition(t,T,this.dText.canvas.width);\n\t\t\tt._cache.style.transform=`translate3d(${(((X-t.estimatePadding)*10)|0)/10}px,${t.style.y-t.estimatePadding}px,0)`;\n\t\t}\n\t}\n\tstart(){\n\t\tlet T=this.dText.frame.time;\n\t\tthis.dText.textCanvasContainer.classList.add('moving');\n\t\tfor(let dT=this.dText,i=dT.DanmakuText.length,t;i--;){\n\t\t\tif((t=dT.DanmakuText[i]).danmaku.mode<2)\n\t\t\t\tthis._move(t,T);\n\t\t}\n\t}\n\t_move(t,T=this.dText.frame.time){\n\t\trequestAnimationFrame(()=>{\n\t\t\tif(!t.danmaku)return;\n\t\t\tlet X=this.dText._calcSideDanmakuPosition(t,T+500000,this.dText.canvas.width);\n\t\t\tt._cache.style.transform=`translate3d(${(((X-t.estimatePadding)*10)|0)/10}px,${t.style.y-t.estimatePadding}px,0)`;\n\t\t});\n\t}\n\tresetPos(){\n\t\tthis.pause();\n\t\tif(!this.dText.paused)setImmediate(()=>{\n\t\t\tthis.start();\t\n\t\t});\n\t}\n\tresize(){\n\t\tthis.resetPos();\n\t}\n\tremove(t){\n\t\tthis.dText.textCanvasContainer.removeChild(t._cache);\n\t}\n\tenable(){\n\t\tthis.dText.textCanvasContainer.hidden=false;\n\t}\n\tdisable(){\n\t\tthis.dText.textCanvasContainer.hidden=true;\n\t}\n\tnewDanmaku(t){\n\t\tt._cache.style.transform=`translate3d(${(((t.style.x-t.estimatePadding)*10)|0)/10}px,${t.style.y-t.estimatePadding}px,0)`;\n\t\tthis.dText.textCanvasContainer.appendChild(t._cache);\n\t\tif(t.danmaku.mode<2)\n\t\t\tthis._move(t);\n\t}\n}\n\n\nexport default TextCanvas;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n\n*/\nclass textModuleTemplate{\n\tconstructor(dText){\n\t\tthis.dText=dText;\n\t}\n\tdraw(){}\n\tpause(){}\n\tstart(){}\n\tclear(){}\n\tresize(){}\n\tremove(){}\n\tenable(){}\n\tdisable(){}\n\tnewDanmaku(){}\n\tdeleteTextObject(){}\n}\n\nexport default textModuleTemplate;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport {i18n} from './i18n.js';\nimport O2H from '../lib/Object2HTML/Object2HTML.js'\nimport {NyaPlayerCore,\n\t\taddEvents,\n\t\trequestFullscreen,\n\t\texitFullscreen,\n\t\tisFullscreen,\n\t\tformatTime,\n\t\tsetAttrs,\n\t\tpadTime,\n\t\tlimitIn,\n\t\ttoArray,\n\t\tResizeSensor} from './NyaPCore.js';\n\nconst _=i18n._;\n\nconst colorChars='0123456789abcdef';\n\n//NyaP options\nconst NyaPOptions={\n\tautoHideDanmakuInput:true,//hide danmakuinput after danmaku sending\n\tdanmakuColors:['fff','6cf','ff0','f00','0f0','00f','f0f','000'],//colors in the danmaku style pannel\n\tdanmakuModes:[0,3,2,1],//0:right\t1:left\t2:bottom\t3:top\n\tdefaultDanmakuColor:null,//a hex color(without #),when the color inputed is invalid,this color will be applied\n\tdefaultDanmakuMode:0,//right\n\tdanmakuSend:(d,callback)=>{callback(false);},//the func for sending danmaku\n\tdanmakuSizes:[20,24,36],\n\tdefaultDanmakuSize:24,\n}\n\n//normal player\nclass NyaP extends NyaPlayerCore{\n\tconstructor(opt){\n\t\tsuper(Object.assign({},NyaPOptions,opt));\n\t\topt=this.opt;\n\t\tconst NP=this;\n\t\tconst $=this.$={document,window};\n\t\tthis._.playerMode='normal';\n\t\tconst video=this.video;\n\t\tvideo.controls=false;\n\t\tconst icons={\n\t\t\tplay:[30,30,'<path d=\"m10.063,8.856l9.873,6.143l-9.873,6.143v-12.287z\" stroke-width=\"3\" stroke-linejoin=\"round\"/>'],\n\t\t\taddDanmaku:[30,30,'<path stroke-width=\"1.5\" d=\"m20.514,20.120l0.551,-1.365l2.206,-0.341l-2.757,1.706h-13.787v-10.240h16.544v8.533\" stroke-linejoin=\"round\"/>'\n\t\t\t\t\t\t\t\t+'<path style=\"fill-opacity:1;stroke-width:0\" d=\"m12.081,13.981h1.928v-1.985h1.978v1.985h1.928v2.036h-1.928v1.985h-1.978v-1.985h-1.928v-2.036z\"/>'],\n\t\t\tdanmakuStyle:[30,30,'<path style=\"fill-opacity:1!important\" d=\"m21.781,9.872l-1.500,-1.530c-0.378,-0.385 -0.997,-0.391 -1.384,-0.012l-0.959,0.941l2.870,2.926l0.960,-0.940c0.385,-0.379 0.392,-0.998 0.013,-1.383zm-12.134,7.532l2.871,2.926l7.593,-7.448l-2.872,-2.927l-7.591,7.449l0.000,0.000zm-1.158,2.571l-0.549,1.974l1.984,-0.511l1.843,-0.474l-2.769,-2.824l-0.509,1.835z\" stroke-width=\"0\"/>'],\n\t\t\tfullPage:[30,30,'<path stroke-linejoin=\"round\" d=\"m11.166,9.761l-5.237,5.239l5.237,5.238l1.905,-1.905l-3.333,-3.333l3.332,-3.333l-1.904,-1.906zm7.665,0l-1.903,1.905l3.332,3.333l-3.332,3.332l1.903,1.905l5.238,-5.238l-5.238,-5.237z\" stroke-width=\"1.3\" />'],\n\t\t\tfullScreen:[30,30,'<rect stroke-linejoin=\"round\" height=\"11.169\" width=\"17.655\" y=\"9.415\" x=\"6.172\" stroke-width=\"1.5\"/>'\n\t\t\t\t\t\t\t  +'<path stroke-linejoin=\"round\" d=\"m12.361,11.394l-3.604,3.605l3.605,3.605l1.311,-1.311l-2.294,-2.294l2.293,-2.294l-1.311,-1.311zm5.275,0l-1.310,1.311l2.293,2.294l-2.293,2.293l1.310,1.311l3.605,-3.605l-3.605,-3.605z\"/>'],\n\t\t\tloop:[30,30,'<path stroke-linejoin=\"round\" stroke-width=\"1\" d=\"m14.632,10.097h5.524c2.373,0 4.297,2.147 4.297,4.796c0,1.272 -0.452,2.491 -1.258,3.391c-0.805,0.899 -1.898,1.404 -3.038,1.404h-0.613v1.370l-2.455,-2.740l2.455,-2.740v1.370h0.613c1.017,0 1.841,-0.920 1.841,-2.055c0,-1.135 -0.824,-2.055 -1.841,-2.055h-5.524v-2.740z\"/>'\n\t\t\t\t\t   +'<path stroke-linejoin=\"round\" stroke-width=\"1\" d=\"m15.367,19.902h-5.524c-2.373,0 -4.297,-2.147 -4.297,-4.796c0,-1.272 0.452,-2.491 1.258,-3.391c0.805,-0.899 1.898,-1.404 3.038,-1.404h0.613v-1.370l2.455,2.740l-2.455,2.740v-1.370h-0.613c-1.017,0 -1.841,0.920 -1.841,2.055c0,1.135 0.824,2.055 1.841,2.055h5.524v2.740z\"/>'],\n\t\t\tvolume:[30,30,'<ellipse id=\"volume_circle\" style=\"fill-opacity:.6!important\" ry=\"5\" rx=\"5\" cy=\"15\" cx=\"15\" stroke-dasharray=\"32 90\" stroke-width=\"1.8\"/>'],\n\t\t\tdanmakuMode0:[30,30,'<path style=\"fill-opacity:1!important\" stroke-width=\"0\" d=\"m14.981,17.821l-7.937,-2.821l7.937,-2.821l0,1.409l7.975,0l0,2.821l-7.975,0l0,1.409l0,0.002z\"/>'],\n\t\t\tdanmakuMode1:[30,30,'<path style=\"fill-opacity:1!important\" stroke-width=\"0\" d=\"m15.019,12.178l7.937,2.821l-7.937,2.821l0,-1.409l-7.975,0l0,-2.821l7.975,0l0,-1.409l0,-0.002z\"/>'],\n\t\t\tdanmakuMode3:[30,30,'<path stroke-width=\"3\" d=\"m7.972,7.486l14.054,0\"/>'],\n\t\t\tdanmakuMode2:[30,30,'<path stroke-width=\"3\" d=\"m7.972,22.513l14.054,0\"/>'],\n\t\t\tsettings:[30,30,'<path stroke=\"null\" style=\"fill-opacity:1!important\" d=\"m19.770,13.364l-0.223,-0.530c0.766,-1.732 0.715,-1.784 0.566,-1.934l-0.979,-0.956l-0.097,-0.081l-0.113,0c-0.059,0 -0.238,0 -1.727,0.675l-0.547,-0.220c-0.708,-1.755 -0.780,-1.755 -0.988,-1.755l-1.381,0c-0.207,0 -0.287,-0.000 -0.944,1.761l-0.545,0.221c-1.006,-0.424 -1.596,-0.639 -1.755,-0.639l-0.130,0.004l-1.053,1.032c-0.159,0.150 -0.215,0.203 0.594,1.909l-0.223,0.528c-1.793,0.693 -1.793,0.760 -1.793,0.972l0,1.354c0,0.212 0,0.287 1.799,0.932l0.223,0.528c-0.766,1.731 -0.714,1.783 -0.566,1.932l0.979,0.958l0.097,0.083l0.114,0c0.058,0 0.235,0 1.726,-0.676l0.547,0.222c0.708,1.755 0.780,1.754 0.988,1.754l1.381,0c0.211,0 0.286,0 0.945,-1.760l0.548,-0.221c1.004,0.424 1.593,0.640 1.751,0.640l0.131,-0.003l1.061,-1.039c0.151,-0.152 0.204,-0.204 -0.602,-1.903l0.221,-0.529c1.795,-0.694 1.795,-0.766 1.795,-0.974l0,-1.353c-0.000,-0.213 -0.000,-0.287 -1.801,-0.929zm-4.770,3.888c-1.266,0 -2.298,-1.011 -2.298,-2.254c0,-1.241 1.031,-2.252 2.298,-2.252c1.266,0 2.295,1.010 2.295,2.252c-0.000,1.242 -1.029,2.254 -2.295,2.254z\"/>'],\n\t\t}\n\t\tfunction icon(name,event,attr={}){\n\t\t\tconst ico=icons[name];\n\t\t\treturn O2H({_:'span',event,attr,prop:{id:`icon_span_${name}`,\n\t\t\t\tinnerHTML:`<svg height=${ico[1]} width=${ico[0]} id=\"icon_${name}\"\">${ico[2]}</svg>`}});\n\t\t}\n\t\tfunction collectEles(ele){\n\t\t\tif(ele.id&&!$[ele.id])$[ele.id]=ele;\n\t\t\ttoArray(ele.querySelectorAll('*')).forEach(e=>{\n\t\t\t\tif(e.id&&!$[e.id])$[e.id]=e;\n\t\t\t});\n\t\t}\n\n\t\tthis._.player=O2H({\n\t\t\t_:'div',attr:{'class':'NyaP',id:'NyaP'},child:[\n\t\t\t\t{_:'div',attr:{id:'video_frame'},child:[\n\t\t\t\t\tvideo,\n\t\t\t\t\tthis.danmakuFrame.container\n\t\t\t\t]},\n\t\t\t\t{_:'div',attr:{id:'controls'},child:[\n\t\t\t\t\t{_:'div',attr:{id:'control'},child:[\n\t\t\t\t\t\t{_:'span',attr:{id:'control_left'},child:[\n\t\t\t\t\t\t\ticon('play',{click:e=>this.playToggle()},{title:_('play')}),\n\t\t\t\t\t\t]},\n\t\t\t\t\t\t{_:'span',attr:{id:'control_center'},child:[\n\t\t\t\t\t\t\t{_:'div',prop:{id:'progress_info'},child:[\n\t\t\t\t\t\t\t\t{_:'span',child:[\n\t\t\t\t\t\t\t\t\t{_:'canvas',prop:{id:'progress',pad:10}},\n\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t\t{_:'span',prop:{id:'time'},child:[\n\t\t\t\t\t\t\t\t\t{_:'span',prop:{id:'current_time'},child:['00:00']},\n\t\t\t\t\t\t\t\t\t'/',\n\t\t\t\t\t\t\t\t\t{_:'span',prop:{id:'total_time'},child:['00:00']},\n\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t{_:'div',prop:{id:'danmaku_input_frame'},child:[\n\t\t\t\t\t\t\t\t{_:'span',prop:{id:'danmaku_style'},child:[\n\t\t\t\t\t\t\t\t\t{_:'div',attr:{id:'danmaku_style_pannel'},child:[\n\t\t\t\t\t\t\t\t\t\t{_:'div',attr:{id:'danmaku_color_box'}},\n\t\t\t\t\t\t\t\t\t\t{_:'input',attr:{id:'danmaku_color',placeholder:_('hex color'),maxlength:\"6\"}},\n\t\t\t\t\t\t\t\t\t\t{_:'span',attr:{id:'danmaku_mode_box'}},\n\t\t\t\t\t\t\t\t\t\t{_:'span',attr:{id:'danmaku_size_box'}},\n\t\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t\t\ticon('danmakuStyle'),\n\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t\t{_:'input',attr:{id:'danmaku_input',placeholder:_('Input danmaku here')}},\n\t\t\t\t\t\t\t\t{_:'span',prop:{id:'danmaku_submit',innerHTML:_('Send')}},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t]},\n\t\t\t\t\t\t{_:'span',attr:{id:'control_right'},child:[\n\t\t\t\t\t\t\ticon('addDanmaku',{click:e=>this.danmakuInput()},{title:_('danmaku input')}),\n\t\t\t\t\t\t\ticon('volume',{},{title:_('volume($0)','100%')}),\n\t\t\t\t\t\t\ticon('loop',{click:e=>{video.loop=!video.loop;}},{title:_('loop')}),\n\t\t\t\t\t\t\t{_:'span',prop:{id:'player_mode'},child:[\n\t\t\t\t\t\t\t\ticon('fullPage',{click:e=>this.playerMode('fullPage')},{title:_('full page')}),\n\t\t\t\t\t\t\t\ticon('fullScreen',{click:e=>this.playerMode('fullScreen')},{title:_('full screen')})\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t]},\n\t\t\t\t\t]}\n\t\t\t\t\t\n\t\t\t\t]},\n\t\t\t\t{_:'input',attr:{style:'position:absolute;bottom:0;font-size:0;height:0;padding:0;border:none;width:0;',id:'keyEventInput'}}\n\t\t\t]\n\t\t});\n\n\t\t//add elements with id to $ prop\n\t\tcollectEles(this._.player);\n\n\t\t//danmaku sizes\n\t\topt.danmakuSizes&&opt.danmakuSizes.forEach((s,ind)=>{\n\t\t\tlet e=O2H({_:'span',attr:{style:`font-size:${12+ind*3}px;`,title:s},prop:{size:s},child:['A']});\n\t\t\t$.danmaku_size_box.appendChild(e);\n\t\t});\n\n\t\t//danmaku colors\n\t\topt.danmakuColors&&opt.danmakuColors.forEach(c=>{\n\t\t\tlet e=O2H({_:'span',attr:{style:`background-color:#${c};`,title:c},prop:{color:c}});\n\t\t\t$.danmaku_color_box.appendChild(e);\n\t\t});\n\n\t\t//danmaku modes\n\t\topt.danmakuModes&&opt.danmakuModes.forEach(m=>{\n\t\t\t$.danmaku_mode_box.appendChild(icon(`danmakuMode${m}`));\n\t\t});\n\t\tcollectEles($.danmaku_mode_box);\n\n\n\t\t//progress\n\t\tsetTimeout(()=>{//ResizeSensor\n\t\t\t$.control.ResizeSensor=new ResizeSensor($.control,()=>this.refreshProgress());\n\t\t\tthis.refreshProgress();\n\t\t},0);\n\t\tthis._.progressContext=$.progress.getContext('2d');\n\n\t\t//events\n\t\tconst events={\n\t\t\twindow:{\n\t\t\t\tkeydown:e=>{\n\t\t\t\t\tswitch(e.code){\n\t\t\t\t\t\tcase 'Escape':{//exit full page mode\n\t\t\t\t\t\t\tif(this._.playerMode==='fullPage'){\n\t\t\t\t\t\t\t\tthis.playerMode('normal');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tNyaP:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tif(e.target.tagName!=='INPUT')$.keyEventInput.focus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyEventInput:{\n\t\t\t\tkeydown:e=>this._playerKeyHandle(e)\n\t\t\t},\n\t\t\tdocument:{\n\t\t\t\t'fullscreenchange,mozfullscreenchange,webkitfullscreenchange,msfullscreenchange':e=>{\n\t\t\t\t\tif(this._.playerMode=='fullScreen' && !isFullscreen())\n\t\t\t\t\t\tthis.playerMode('normal');\n\t\t\t\t}\n\t\t\t},\n\t\t\tmain_video:{\n\t\t\t\tplaying:e=>{\n\t\t\t\t\t$.icon_span_play.classList.add('active_icon');\n\t\t\t\t},\n\t\t\t\tpause:e=>{\n\t\t\t\t\t$.icon_span_play.classList.remove('active_icon');\n\t\t\t\t},\n\t\t\t\tstalled:e=>{\n\t\t\t\t\t$.icon_span_play.classList.remove('active_icon');\n\t\t\t\t},\n\t\t\t\ttimeupdate:(e)=>{\n\t\t\t\t\tif(Date.now()-this._.lastTimeUpdate <30)return;\n\t\t\t\t\tthis._setTimeInfo(formatTime(video.currentTime,video.duration));\n\t\t\t\t\tthis.drawProgress();\n\t\t\t\t\tthis._.lastTimeUpdate=Date.now();\n\t\t\t\t},\n\t\t\t\tloadedmetadata:e=>{\n\t\t\t\t\tthis._setTimeInfo(null,formatTime(video.duration,video.duration));\n\t\t\t\t},\n\t\t\t\tvolumechange:e=>{\n\t\t\t\t\tsetAttrs($.volume_circle,{'stroke-dasharray':`${video.volume*10*Math.PI} 90`,style:`fill-opacity:${video.muted?.2:.6}!important`});\n\t\t\t\t\t$.icon_span_volume.setAttribute('title',_('volume($0)',video.muted?_('muted'):`${video.volume*100|0}%`));\n\t\t\t\t},\n\t\t\t\tprogress:e=>{this.drawProgress();},\n\t\t\t\t_loopChange:e=>{\n\t\t\t\t\t$.icon_span_loop.classList[e.value?'add':'remove']('active_icon');\n\t\t\t\t},\n\t\t\t\tclick:e=>this.playToggle(),\n\t\t\t\tmouseup:e=>{\n\t\t\t\t\tif(e.button===2){//right key\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.menu([e.offsetX,e.offsetY]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontextmenu:e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t},\n\t\t\t},\n\t\t\tprogress:{\n\t\t\t\tmousemove:e=>{\n\t\t\t\t\tthis._.progressX=e.offsetX;this.drawProgress();\n\t\t\t\t\tlet t=e.target,\n\t\t\t\t\t\tpre=(e.offsetX-t.pad)/(t.offsetWidth-2*t.pad);\n\t\t\t\t\tpre=limitIn(pre,0,1);\n\t\t\t\t\tthis._setTimeInfo(null,formatTime(pre*video.duration,video.duration));\n\t\t\t\t},\n\t\t\t\tmouseout:e=>{\n\t\t\t\t\tthis._.progressX=undefined;this.drawProgress();\n\t\t\t\t\tthis._setTimeInfo(null,formatTime(video.duration,video.duration));\n\t\t\t\t},\n\t\t\t\tclick:e=>{\n\t\t\t\t\tlet t=e.target,\n\t\t\t\t\t\tpre=(e.offsetX-t.pad)/(t.offsetWidth-2*t.pad);\n\t\t\t\t\tpre=limitIn(pre,0,1);\n\t\t\t\t\tvideo.currentTime=pre*video.duration;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_style_pannel:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tsetImmediate(()=>{\n\t\t\t\t\t\tthis.$.danmaku_input.focus();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_color:{\n\t\t\t\t'input,change':e=>{\n\t\t\t\t\tlet i=e.target,c;\n\t\t\t\t\tif(c=i.value.match(/^([\\da-f\\$]{3}){1,2}$/i)){//match valid hex color code\n\t\t\t\t\t\tc=c[0];\n\t\t\t\t\t\ti.style.backgroundColor=`#${c}`;\n\t\t\t\t\t\tthis._.danmakuColor=c;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._.danmakuColor=undefined;\n\t\t\t\t\t\ti.style.backgroundColor='';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\ticon_span_volume:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tvideo.muted=!video.muted;\n\t\t\t\t},\n\t\t\t\twheel:e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif(e.deltaMode!==0)return;\n\t\t\t\t\tlet delta;\n\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\tdelta=e.deltaY>0?10:-10;\n\t\t\t\t\t}\n\t\t\t\t\telse if(e.deltaY>10 || e.deltaY<-10)delta=e.deltaY/10;\n\t\t\t\t\telse{delta=e.deltaY;}\n\t\t\t\t\tvideo.volume=limitIn(video.volume+(delta/100),0,1);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmakuModeSwitch:{\n\t\t\t\tclick:function(){\n\t\t\t\t\tlet m=1*this.id.match(/\\d$/)[0];\n\t\t\t\t\tif(NP._.danmakuMode!==undefined)\n\t\t\t\t\t\t$[`icon_span_danmakuMode${NP._.danmakuMode}`].classList.remove('active');\n\t\t\t\t\t$[`icon_span_danmakuMode${m}`].classList.add('active');\n\t\t\t\t\tNP._.danmakuMode=m;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_input:{\n\t\t\t\tkeydown:e=>{if(e.key==='Enter'){this.send();}else if(e.key==='Escape'){this.danmakuInput(false);}}\n\t\t\t},\n\t\t\tdanmaku_submit:{\n\t\t\t\tclick:e=>{this.send();}\n\t\t\t},\n\t\t\tdanmaku_size_box:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tlet t=e.target;\n\t\t\t\t\tif(!t.size)return;\n\t\t\t\t\ttoArray($.danmaku_size_box.childNodes).forEach(sp=>{\n\t\t\t\t\t\tif(this._.danmakuSize===sp.size)sp.classList.remove('active');\n\t\t\t\t\t});\n\t\t\t\t\tt.classList.add('active');\n\t\t\t\t\tthis._.danmakuSize=t.size;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_color_box:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tif(e.target.color){\n\t\t\t\t\t\t$.danmaku_color.value=e.target.color;\n\t\t\t\t\t\t$.danmaku_color.dispatchEvent(new Event('change'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t\tfor(let eleid in $){//add events to elements\n\t\t\tlet eves=events[eleid];\n\t\t\tif(eleid.startsWith('icon_span_danmakuMode'))\n\t\t\t\teves=events.danmakuModeSwitch;\n\t\t\teves&&addEvents($[eleid],eves);\n\t\t}\n\n\t\t(typeof opt.defaultDanmakuMode === 'number')\n\t\t\t&&$['icon_span_danmakuMode'+opt.defaultDanmakuMode].click();//init to default danmaku mode\n\t\t(typeof opt.defaultDanmakuSize === 'number')\n\t\t\t&&toArray($.danmaku_size_box.childNodes).forEach(sp=>{if(sp.size===opt.defaultDanmakuSize)sp.click()});\n\n\t}\n\t_setTimeInfo(a=null,b=null){\n\t\trequestAnimationFrame(()=>{\n\t\t\tif(a!==null){\n\t\t\t\tthis.$.current_time.innerHTML=a;\n\t\t\t}\n\t\t\tif(b!==null){\n\t\t\t\tthis.$.total_time.innerHTML=b;\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\t/*settingsBoxToggle(bool=!this.$.settings_box.style.display){\n\t\tthis.$.settings_box.style.display=bool?'flex':'';\n\t}*/\n\t_playerKeyHandle(e){//hot keys\n\t\tconsole.log('input',e)\n\t\tconst V=this.video,_SH=e.shiftKey;\n\t\tswitch(e.key){\n\t\t\tcase ' ':{\n\t\t\t\tif(!e.repeat)this.playToggle();break;\n\t\t\t}\n\t\t\tcase 'ArrowRight':{//seek to after time\n\t\t\t\tV.currentTime+=(3*(_SH?2:1));break;\n\t\t\t}\n\t\t\tcase 'ArrowLeft':{//seek to before time\n\t\t\t\tV.currentTime-=(1.5*(_SH?2:1));break;\n\t\t\t}\n\t\t\tcase 'ArrowUp':{//volume up\n\t\t\t\tV.volume=limitIn(V.volume+(0.03*(_SH?2:1)),0,1);break;\n\t\t\t}\n\t\t\tcase 'ArrowDown':{//volume down\n\t\t\t\tV.volume=limitIn(V.volume-(0.03*(_SH?2:1)),0,1);break;\n\t\t\t}\n\t\t\tcase 'p':{//volume down\n\t\t\t\tthis.playerMode('fullPage');break;\n\t\t\t}\n\t\t\tcase 'f':{//volume down\n\t\t\t\tthis.playerMode('fullScreen');break;\n\t\t\t}\n\t\t\tcase 'Enter':{//danmaku input toggle\n\t\t\t\tthis.danmakuInput();break;\n\t\t\t}\n\t\t}\n\n\t}\n\tdanmakuInput(bool=!this.$.danmaku_input_frame.offsetHeight){\n\t\tlet $=this.$;\n\t\t$.danmaku_input_frame.style.display=bool?'flex':'';\n\t\t$.icon_span_addDanmaku.classList[bool?'add':'remove']('active_icon');\n\t\tbool?$.danmaku_input.focus():$.keyEventInput.focus();\n\t}\n\tplayerMode(mode='normal'){\n\t\tif(mode==='normal' && this._.playerMode===mode)return;\n\t\tlet $=this.$;\n\t\tif(this._.playerMode==='fullPage'){\n\t\t\tthis.player.style.position='';\n\t\t\t$.icon_span_fullPage.classList.remove('active_icon');\n\t\t}else if(this._.playerMode==='fullScreen'){\n\t\t\t$.icon_span_fullScreen.classList.remove('active_icon');\n\t\t\texitFullscreen();\n\t\t}\n\t\tif(mode!=='normal' && this._.playerMode===mode)mode='normal';//back to normal mode\n\t\tswitch(mode){\n\t\t\tcase 'fullPage':{\n\t\t\t\tthis.player.style.position='fixed';\n\t\t\t\t$.icon_span_fullPage.classList.add('active_icon');\n\t\t\t\tthis.player.setAttribute('playerMode','fullPage');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'fullScreen':{\n\t\t\t\t$.icon_span_fullScreen.classList.add('active_icon');\n\t\t\t\tthis.player.setAttribute('playerMode','fullScreen');\n\t\t\t\trequestFullscreen(this.player);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tthis.player.setAttribute('playerMode','normal');\n\t\t\t}\n\t\t}\n\t\tthis._.playerMode=mode;\n\t\tthis.emit('playerModeChange',mode);\n\t}\n\trefreshProgress(){\n\t\tconst c=this.$.progress;\n\t\tc.width=c.offsetWidth;\n\t\tc.height=c.offsetHeight;\n\t\tthis.drawProgress();\n\t\tthis.emit('progressRefresh');\n\t}\n\tsend(){\n\t\tlet color=this._.danmakuColor||this.opt.defaultDanmakuColor,\n\t\t\ttext=this.$.danmaku_input.value,\n\t\t\tsize=this._.danmakuSize,\n\t\t\tmode=this._.danmakuMode,\n\t\t\ttime=this.danmakuFrame.time;\n\n\t\tif(text.match(/^\\s+$/))return;\n\t\tif(color){\n\t\t\tcolor=color.replace(/\\$/g,()=>{\n\t\t\t\treturn colorChars[limitIn((16*Math.random())|0,0,15)];\n\t\t\t});\n\t\t}\n\t\tlet d={color,text,size,mode,time};\n\t\tif(this.opt.danmakuSend){\n\t\t\tthis.opt.danmakuSend(d,(danmaku)=>{\n\t\t\t\tif(danmaku&&danmaku._==='text')\n\t\t\t\t\tthis.$.danmaku_input.value='';\n\t\t\t\t\tlet result=this.danmakuFrame.modules.TextDanmaku.load(danmaku);\n\t\t\t\t\tresult.highlight=true;\n\t\t\t\t\tif(this.opt.autoHideDanmakuInput){this.danmakuInput(false);}\n\t\t\t});\n\t\t}\n\t}\n\tmenu(position){\n\t\tconsole.log('position',position)\n\t\tif(position){//if position is defined,find out the danmaku at that position and enable danmaku oprion in menu\n\t\t\tlet ds=this.danmakuFrame.modules.TextDanmaku.danmakuAt(position[0],position[1]);\n\t\t\tconsole.log(ds)\n\t\t}\n\t}\n\t_progressDrawer(){\n\t\tconst ctx=this._.progressContext,\n\t\t\t\tc=this.$.progress,\n\t\t\t\tw=c.width,\n\t\t\t\th=c.height,\n\t\t\t\tv=this.video,\n\t\t\t\td=v.duration,\n\t\t\t\tcT=v.currentTime,\n\t\t\t\tpad=c.pad,\n\t\t\t\tlen=w-2*pad;\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.lineCap = \"round\";\n\t\t//background\n\t\tctx.beginPath();\n\t\tctx.strokeStyle='#eee';\n\t\tctx.lineWidth=7;\n\t\tctx.moveTo(pad, 15);\n\t\tctx.lineTo(pad+len, 15);\n\t\tctx.stroke();\n\t\t//buffered\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = '#C0BBBB';\n\t\tctx.lineWidth = 2;\n\t\ttr = v.buffered;\n\t\tfor (var i = tr.length;i--;) {\n\t\t\tctx.moveTo(pad+tr.start(i) / d * len, 18);\n\t\t\tctx.lineTo(pad+tr.end(i) / d * len, 18);\n\t\t}\n\t\tctx.stroke();\n\t\t//progress\n\t\tctx.beginPath();\n\t\tctx.strokeStyle='#6cf';\n\t\tctx.lineWidth = 5;\n\t\tctx.moveTo(pad,15);\n\t\tctx.lineTo(pad+len*cT/d,15);\n\t\tctx.stroke();\n\t\t//already played\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = 'rgba(255,255,255,.3)';\n\t\tctx.lineWidth = 5;\n\t\tlet tr = v.played;\n\t\tfor (var i = tr.length;i--;) {\n\t\t\tctx.moveTo(pad+tr.start(i) / d * len, 15);\n\t\t\tctx.lineTo(pad+tr.end(i) / d * len, 15);\n\t\t}\n\t\tctx.stroke();\n\t\t//mouse\n\t\tif(this._.progressX){\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle='rgba(0,0,0,.05)';\n\t\t\tctx.moveTo(pad+len*cT/d,15);\n\t\t\tctx.lineTo(limitIn(this._.progressX,pad,pad+len),15);\n\t\t\tctx.stroke();\n\t\t}\n\t\tthis._.drawingProgress=false;\n\t}\n\tdrawProgress(){\n\t\tif(this._.drawingProgress)return;\n\t\tthis._.drawingProgress=true;\n\t\trequestAnimationFrame(()=>{\n\t\t\tthis._progressDrawer();\n\t\t});\n\t}\n}\n\nwindow.NyaP=NyaP;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport {DanmakuFrame,DanmakuFrameModule,ResizeSensor} from '../lib/danmaku-frame/src/danmaku-frame.js'\nimport initTextDanmaku from '../lib/danmaku-text/src/danmaku-text.js'\nimport O2H from '../lib/Object2HTML/Object2HTML.js'\n\n\ninitTextDanmaku(DanmakuFrame,DanmakuFrameModule);//init TextDanmaku mod\n\n\n//default options\nconst NyaPOptions={\n\tmuted:false,\n\tvolume:1,\n\tloop:false,\n\ttextStyle:{},\n\tdanmakuOption:{},\n}\n\n\nclass NyaPEventEmitter{\n\tconstructor(){\n\t\tthis._events={};\n\t}\n\temit(e,arg){\n\t\tthis._resolve(e,arg);\n\t}\n\t_resolve(e,arg){\n\t\tif(e in this._events){\n\t\t\tconst hs=this._events[e];\n\t\t\ttry{\n\t\t\t\ths.forEach(h=>{h.call(this,e,arg)});\n\t\t\t}catch(e){\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t}\n\ton(e,handle){\n\t\tif(!(handle instanceof Function))return;\n\t\tif(!(e in this._events))this._events[e]=[];\n\t\tthis._events[e].push(handle);\n\t}\n\tremoveEvent(e,handle){\n\t\tif(!(e in this._events))return;\n\t\tif(arguments.length===1){delete this._events[e];return;}\n\t\tlet ind;\n\t\tif(ind=(this._events[e].indexOf(handle))>=0)this._events[e].splice(ind,1);\n\t\tif(this._events[e].length===0)delete this._events[e];\n\t}\n}\n\n\nclass NyaPlayerCore extends NyaPEventEmitter{\n\tconstructor(opt){\n\t\tsuper();\n\t\topt=this.opt=Object.assign({},NyaPOptions,opt);\n\t\tthis._={};//for private variables\n\t\tconst video=this._.video=O2H({_:'video',attr:{id:'main_video'}});\n\t\tthis.danmakuFrame=new DanmakuFrame();\n\t\tthis.danmakuFrame.setMedia(video);\n\t\tthis.danmakuFrame.enable('TextDanmaku');\n\t\tthis.setDanmakuOptions(opt.danmakuOption);\n\t\tthis.setDanmakuOptions(opt.textStyle);\n\n\n\t\t//options\n\t\tsetTimeout(a=>{\n\t\t\t['src','muted','volume','loop'].forEach(o=>{//dont change the order\n\t\t\t\t(opt[o]!==undefined)&&(this.video[o]=opt[o]);\n\t\t\t})\n\t\t},0)\n\n\t\t//define events\n\t\t{\n\t\t\t//video:_loopChange\n\t\t\tlet LoopDesc=Object.getOwnPropertyDescriptor(HTMLMediaElement.prototype,'loop');\n\t\t\tObject.defineProperty(video,'loop',{\n\t\t\t\tget:LoopDesc.get,\n\t\t\t\tset:function(bool){\n\t\t\t\t\tif(bool===this.loop)return;\n\t\t\t\t\tthis.dispatchEvent(Object.assign(new Event('_loopChange'),{value:bool}));\n\t\t\t\t\tLoopDesc.set.call(this,bool);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.emit('coreLoad');\n\t\t//this.danmakuFrame.container\n\t}\n\tplay(){\n\t\tthis.video.paused&&this.video.play();\n\t}\n\tpause(){\n\t\tthis.video.paused||this.video.pause();\n\t}\n\tplayToggle(){\n\t\tthis[this.video.paused?'play':'pause']();\n\t}\n\tseek(time){//msec\n\t\tthis.video.currentTime=time/1000;\n\t}\n\tloadDanmaku(obj){\n\t\tthis.danmakuFrame.load(obj);\n\t}\n\tloadDanmakuList(obj){\n\t\tthis.danmakuFrame.loadList(obj);\n\t}\n\tremoveDanmaku(obj){\n\t\tthis.danmakuFrame.unload(obj);\n\t}\n\tdanmakuToggle(bool=!this.danmakuFrame.working){\n\t\tthis.danmakuFrame[bool?'strat':'stop']();\n\t}\n\tget player(){return this._.player;}\n\tget video(){return this._.video;}\n\tget src(){return this.video.src;}\n\tset src(s){this.video.src=s;}\n\tget TextDanmaku(){return this.danmakuFrame.modules.TextDanmaku;}\n\tget videoSize(){return [this.video.videoWidth,this.video.videoHeight];}\n\tsetDefaultTextStyle(opt){\n\t\tif(opt)for(let n in opt)this.TextDanmaku.defaultStyle[n]=opt[n];\n\t}\n\tsetDanmakuOptions(opt){\n\t\tif(opt)for(let n in opt)this.TextDanmaku.options[n]=opt[n];\n\t}\n}\n\n\n\n\n//other functions\n\nfunction addEvents(target,events={}){\n\tfor(let e in events)\n\t\te.split(/\\,/g).forEach(e2=>target.addEventListener(e2,events[e]));\n}\nfunction requestFullscreen(d) {\n\ttry{\n\t\t(d.requestFullscreen||\n\t\td.msRequestFullscreen||\n\t\td.mozRequestFullScreen||\n\t\td.webkitRequestFullscreen)\n\t\t.call(d);\n\t}catch(e){\n\t\tconsole.error(e)\n\t\talert(_('Failed to change to fullscreen mode'));\n\t}\n}\nfunction exitFullscreen() {\n\tconst d=document;\n\t(d.exitFullscreen||\n\td.msExitFullscreen||\n\td.mozCancelFullScreen||\n\td.webkitCancelFullScreen).call(d);\n}\nfunction isFullscreen() {\n\tconst d=document;\n\treturn !!(d.fullscreen || d.mozFullScreen || d.webkitIsFullScreen || d.msFullscreenElement);\n}\nfunction formatTime(sec,total){\n\tlet r,s=sec|0,h=(s/3600)|0;\n\tif(total>=3600)s=s%3600;\n\tr=[padTime((s/60)|0),padTime(s%60)];\n\t(total>=3600)&&r.unshift(h);\n\treturn r.join(':');\n}\nfunction padTime(n){//pad number to 2 chars\n\treturn n>9&&n||`0${n}`;\n}\nfunction setAttrs(ele,obj){//set multi attrs to a Element\n\tfor(let a in obj)\n\t\tele.setAttribute(a,obj[a])\n}\nfunction limitIn(num,min,max){//limit the number in a range\n\treturn num<min?min:(num>max?max:num);\n}\nfunction toArray(obj){\n\treturn [...obj];\n}\n\n\n//Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nif (!String.prototype.startsWith)\nString.prototype.startsWith = function(searchString, position=0){\n\treturn this.substr(position, searchString.length) === searchString;\n};\n\nexport default NyaPlayerCore;\nexport {\n\tNyaPlayerCore,\n\taddEvents,\n\trequestFullscreen,\n\texitFullscreen,\n\tisFullscreen,\n\tformatTime,\n\tpadTime,\n\tsetAttrs,\n\tlimitIn,\n\ttoArray,\n\tResizeSensor,\n}\n","const i18n={\n\tlang:null,\n\tlangs:{},\n\t_:(str,...args)=>{\n\t\tlet s=(i18n.lang&&i18n.langs[i18n.lang][str])||str;\n\t\targs.length&&args.forEach((arg,ind)=>{s=s.replace(`$${ind}`,arg)});\n\t\treturn s;\n\t}\n};\n\n\ni18n.langs['zh-CN']={\n\t'play':'播放',\n\t'loop':'循环',\n\t'Send':'发送',\n\t'pause':'暂停',\n\t'muted':'静音',\n\t'settings':'设置',\n\t'full page':'全页模式',\n\t'full screen':'全屏模式',\n\t'volume($0)':'音量（$0）',\n\t'hex color':'Hex颜色',\n\t'danmaku input':'弹幕输入框',\n\t'Input danmaku here':'在这里输入弹幕',\n\t'Failed to change to fullscreen mode':'无法切换到全屏模式',\n}\n\n\n\n\n\nif(!navigator.languages){\n\tnavigator.languages=[navigator.language];\n}\n\nnavigator.languages\nfor(let lang of [...navigator.languages]){\n\tif(i18n.langs[lang]){\n\t\ti18n.lang=lang;\n\t\tbreak;\n\t}\n\tlet code=lang.match(/^\\w+/)[0];\n\tfor(let cod in i18n.langs){\n\t\tif(cod.startsWith(code)){\n\t\t\ti18n.lang=cod;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i18n.lang)break;\n}\nconsole.debug('Language:'+i18n.lang)\n\nexport {i18n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}