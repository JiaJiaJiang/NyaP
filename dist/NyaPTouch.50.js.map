{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/Object2HTML/Object2HTML.js","../lib/danmaku-frame/lib/ResizeSensor.js","../lib/danmaku-frame/src/danmaku-frame.js","../lib/danmaku-text/lib/Mat/Mat.js","../lib/danmaku-text/lib/setImmediate/setImmediate.js","../lib/danmaku-text/src/danmaku-text.js","../lib/danmaku-text/src/text2d.js","../lib/danmaku-text/src/text3d.js","../lib/danmaku-text/src/textCanvas.js","../lib/danmaku-text/src/textModuleTemplate.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_add-to-unscopables.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_html.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_iter-create.js","../node_modules/core-js/modules/_iter-define.js","../node_modules/core-js/modules/_iter-step.js","../node_modules/core-js/modules/_iterators.js","../node_modules/core-js/modules/_library.js","../node_modules/core-js/modules/_object-create.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_object-dps.js","../node_modules/core-js/modules/_object-gpo.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_set-to-string-tag.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_to-absolute-index.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_wks.js","../node_modules/core-js/modules/es6.array.iterator.js","../node_modules/core-js/modules/web.dom.iterable.js","../node_modules/process/browser.js","../node_modules/timers-browserify/main.js","NyaPCore.js","NyaPTouch.js","danmaku.js","i18n.js"],"names":[],"mappings":"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ACLA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;;ACHA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"NyaPTouch.50.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nfunction _Obj(t){return (typeof t == 'object');}\n\nfunction Object2HTML(obj,func){\n\tlet ele,o,e;\n\tif(typeof obj==='string' ||typeof obj==='number')ele=document.createTextNode(obj);//text node\n\telse if(obj instanceof Node)ele=obj;\n\telse if(obj===null || typeof obj !=='object' || '_' in obj === false || typeof obj._ !== 'string' || obj._=='')return;//if it dont have a _ prop to specify a tag\n\tele||(ele=document.createElement(obj._));\n\t//attributes\n\tif(_Obj(obj.attr))for(o in obj.attr)ele.setAttribute(o,obj.attr[o]);\n\t//properties\n\tif(_Obj(obj.prop))for(o in obj.prop)ele[o]=obj.prop[o];\n\t//events\n\tif(_Obj(obj.event))for(o in obj.event)ele.addEventListener(o,obj.event[o]);\n\t//childNodes\n\tif(_Obj(obj.child)&&obj.child.length>0)\n\t\tobj.child.forEach(o=>{\n\t\t\te=Object2HTML(o,func);\n\t\t\t(e instanceof Node)&&ele.appendChild(e);\n\t\t});\n\tfunc&&func(ele);\n\treturn ele;\n}\n\nexport default Object2HTML;\nexport {Object2HTML}","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            }\n            if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            }\n\n            return element.style[prop];\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport ResizeSensor from '../lib/ResizeSensor.js';\nclass DanmakuFrame{\n\tconstructor(container){\n\t\tconst F=this;\n\t\tF.container=container||document.createElement('div');\n\t\tF.rate=1;\n\t\tF.timeBase=F.width=F.height=F.fps=0;\n\t\tF.fpsTmp=0;\n\t\tF.fpsRec=F.fps||60;\n\t\tF.media=null;\n\t\tF.working=false;\n\t\tF.enabled=true;\n\t\tF.modules={};//constructed module list\n\t\t//F.moduleList=[];\n\t\tconst style=document.createElement(\"style\");\n\t\tdocument.head.appendChild(style);\n\t\tF.styleSheet=style.sheet;\n\t\t\n\n\t\tsetTimeout(()=>{//container size sensor\n\t\t\tF.container.ResizeSensor=new ResizeSensor(F.container,()=>{\n\t\t\t\tF.resize();\n\t\t\t});\n\t\t\tF.resize();\n\t\t},0);\n\t\tsetInterval(()=>{\n\t\t\tF.fpsRec=F.fpsTmp;\n\t\t\tF.fpsTmp=0;\n\t\t},1000);\n\t\tF.draw=F.draw.bind(F);\n\t}\n\tenable(name){\n\t\tif(!name){\n\t\t\tthis.enabled=true;\n\t\t\tif(this.media){\n\t\t\t\tthis.media.paused||this.start();\n\t\t\t}else{\n\t\t\t\tthis.start();\n\t\t\t}\n\t\t\tthis.container.hidden=false;\n\t\t\treturn;\n\t\t}\n\t\tlet module=this.modules[name]||this.initModule(name);\n\t\tif(!module)return false;\n\t\tmodule.enabled=true;\n\t\tmodule.enable&&module.enable();\n\t\treturn true;\n\t}\n\tdisable(name){\n\t\tif(!name){\n\t\t\tthis.pause();\n\t\t\tthis.moduleFunction('clear');\n\t\t\tthis.enabled=false;\n\t\t\tthis.container.hidden=true;\n\t\t\treturn;\n\t\t}\n\t\tlet module=this.modules[name];\n\t\tif(!module)return false;\n\t\tmodule.enabled=false;\n\t\tmodule.disable&&module.disable();\n\t\treturn true;\n\t}\n\taddStyle(s){\n\t\tif(typeof s === 'string')s=[s];\n\t\tif(s instanceof Array === false)return;\n\t\ts.forEach(r=>this.styleSheet.insertRule(r,this.styleSheet.cssRules.length));\n\t}\n\tinitModule(name,arg){\n\t\tif(this.modules[name]){\n\t\t\tconsole.warn(`The module [${name}] has already inited.`);\n\t\t\treturn this.modules[name];\n\t\t}\n\t\tlet mod=DanmakuFrame.availableModules[name];\n\t\tif(!mod)throw('Module ['+name+'] does not exist.');\n\t\tlet module=new mod(this,arg);\n\t\tif(module instanceof DanmakuFrameModule === false)\n\t\t\tthrow('Constructor of '+name+' is not extended from DanmakuFrameModule');\n\t\tthis.modules[name]=module;\n\t\tconsole.debug(`Mod Inited: ${name}`);\n\t\treturn module;\n\t}\n\tset time(t){//current media time (ms)\n\t\tthis.media||(this.timeBase=Date.now()-t);\n\t\tthis.moduleFunction('time',t);//let all mods know when the time be set\n\t}\n\tget time(){\n\t\treturn this.media?(this.media.currentTime*1000)|0:(Date.now()-this.timeBase);\n\t}\n\tdraw(force){\n\t\tif(!this.working)return;\n\t\tthis.fpsTmp++;\n\t\tthis.moduleFunction('draw',force);\n\t\tif(this.fps===0){\n\t\t\trequestAnimationFrame(()=>this.draw());\n\t\t}else{\n\t\t\tsetTimeout(this.draw,1000/this.fps);\n\t\t}\n\t}\n\tload(...danmakuObj){\n\t\tthis.moduleFunction('load',...danmakuObj);\n\t}\n\tloadList(danmakuArray){\n\t\tthis.moduleFunction('loadList',danmakuArray);\n\t}\n\tunload(danmakuObj){\n\t\tthis.moduleFunction('unload',danmakuObj);\n\t}\n\tstart(){\n\t\tif(this.working||!this.enabled)return;\n\t\tthis.working=true;\n\t\tthis.moduleFunction('start');\n\t\tthis.draw(true);\n\t}\n\tpause(){\n\t\tif(!this.enabled)return;\n\t\tthis.working=false;\n\t\tthis.moduleFunction('pause');\n\t}\n\tresize(){\n\t\tthis.width=this.container.offsetWidth;\n\t\tthis.height=this.container.offsetHeight;\n\t\tthis.moduleFunction('resize');\n\t}\n\tmoduleFunction(name,...arg){\n\t\tlet m;\n\t\tfor(let n in this.modules){\n\t\t\tm=this.modules[n];\n\t\t\tif(m.enabled&&m[name])m[name](...arg);\n\t\t}\n\t}\n\tsetMedia(media){\n\t\tconst F=this;\n\t\tF.media=media;\n\t\taddEvents(media,{\n\t\t\tplaying:()=>F.start(),\n\t\t\t'pause,stalled,seeking,waiting':()=>F.pause(),\n\t\t\tratechange:()=>{\n\t\t\t\tF.rate=F.media.playbackRate;\n\t\t\t\tF.moduleFunction('rate',F.rate);\n\t\t\t},\n\t\t});\n\t\tF.moduleFunction('media',media);\n\t}\n\tstatic addModule(name,module){\n\t\tif(name in this.availableModules){\n\t\t\tconsole.warn('The module \"'+name+'\" has already been added.');\n\t\t\treturn;\n\t\t}\n\t\tthis.availableModules[name]=module;\n\t} \n}\n\nDanmakuFrame.availableModules={};\n\nclass DanmakuFrameModule{\n\tconstructor(frame){\n\t\tthis.frame=frame;\n\t\tthis.enabled=false;\n\t}\n}\nfunction addEvents(target,events={}){\n\tfor(let e in events)e.split(/\\,/g).forEach(e2=>target.addEventListener(e2,events[e]));\n}\n\nexport {DanmakuFrame,DanmakuFrameModule,ResizeSensor}","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\n(function(f){\n\tif (typeof define === \"function\" && define.amd) {\n\t    define(f);\n\t}else if (typeof exports === \"object\") {\n\t    module.exports = f();\n\t}else {\n\t    (0,eval)('this').Mat = f();\n\t}\n})(function(){\nconst global= (0,eval)('this');\nconst TypedArray=global.Float32Array&&global.Float32Array.prototype;\n\nfunction createClass(Constructor){\n\tclass Matrix{\n\t\tconstructor(l,c,fill=0){\n\t\t\tthis.array=new Constructor(l*c);\n\t\t\tObject.defineProperty(this.array,'row',{value:l});\n\t\t\tObject.defineProperty(this.array,'column',{value:c});\n\t\t\tif(arguments.length==3){\n\t\t\t\tif(Matrix._instanceofTypedArray&&(fill===0)){}\n\t\t\t\telse if(typeof fill === 'number'){\n\t\t\t\t\tthis.fill(fill);\n\t\t\t\t}else if(fill.length){\n\t\t\t\t\tthis.set(fill);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tget length(){return this.array.length;}\n\t\tget row(){return this.array.row;}\n\t\tget column(){return this.array.column;}\n\t\tleftMultiply(m){\n\t\t\treturn this.set(Matrix.multiply(m,this,new Matrix(m.row,this.column)));\n\t\t}\n\t\trightMultiply(m){\n\t\t\treturn this.set(Matrix.multiply(this,m,new Matrix(this.row,m,column)));\n\t\t}\n\t\tfill(n){\n\t\t\targuments.length||(n=0);\n\t\t\tfor(let i=this.length;i--;)this.array[i]=n;\n\t\t\treturn this;\n\t\t}\n\t\tset(arr,offset){\n\t\t\toffset||(offset=0);\n\t\t\t(arr instanceof Matrix)&&(arr=arr.array);\n\t\t\tfor(let i=(arr.length+offset)<=this.length?arr.length:(this.length-offset);i--;)\n\t\t\t\tthis.array[offset+i]=arr[i];\n\t\t\treturn this;\n\t\t}\n\t\tput(m,row,column){\n\t\t\tMatrix.put(this,m,row||0,column||0);\n\t\t\treturn this;\n\t\t}\n\t\trotate2d(t){\n\t\t\treturn this.set(Matrix.rotate2d(this,t,Matrix.Matrixes.T3));\n\t\t}\n\t\ttranslate2d(x,y){\n\t\t\treturn this.set(Matrix.translate2d(this,x,y,Matrix.Matrixes.T3));\n\t\t}\n\t\tscale2d(x,y){\n\t\t\treturn this.set(Matrix.scale2d(this,x,y,Matrix.Matrixes.T3));\n\t\t}\n\t\trotate3d(tx,ty,tz){\n\t\t\treturn this.set(Matrix.rotate3d(this,tx,ty,tz,Matrix.Matrixes.T4));\n\t\t}\n\t\tscale3d(x,y,z){\n\t\t\treturn this.set(Matrix.scale3d(this,x,y,z,Matrix.Matrixes.T4));\n\t\t}\n\t\ttranslate3d(x,y,z){\n\t\t\treturn this.set(Matrix.translate3d(this,x,y,z,Matrix.Matrixes.T4));\n\t\t}\n\t\trotateX(t){\n\t\t\treturn this.set(Matrix.rotateX(this,t,Matrix.Matrixes.T4));\n\t\t}\n\t\trotateY(t){\n\t\t\treturn this.set(Matrix.rotateY(this,t,Matrix.Matrixes.T4));\n\t\t}\n\t\trotateZ(t){\n\t\t\treturn this.set(Matrix.rotateZ(this,t,Matrix.Matrixes.T4));\n\t\t}\n\t\tclone(){\n\t\t\treturn new Matrix(this.row,this.column,this);\n\t\t}\n\t\ttoString(){\n\t\t\tif(this.length === 0)return '';\n\t\t\tfor(var i=0,lines=[],tmp=[];i<this.length;i++){\n\t\t\t\tif(i && (i%this.column === 0)){\n\t\t\t\t\tlines.push(tmp.join('\\t'));\n\t\t\t\t\ttmp.length=0;\n\t\t\t\t}\n\t\t\t\ttmp.push(this.array[i]||0);\n\t\t\t}\n\t\t\tlines.push(tmp.join('\t'));\n\t\t\treturn lines.join('\\n');\n\t\t}\n\n\t\t//static methods\n\t\tstatic Identity(n){//return a new Identity Matrix\n\t\t\tlet m=new Matrix(n,n,0);\n\t\t\tfor(let i=n;i--;)m.array[i*n+i]=1;\n\t\t\treturn m;\n\t\t}\n\t\tstatic Perspective(fovy,aspect,znear,zfar,result){\n\t\t\tvar y1=znear*Math.tan(fovy*Math.PI/360.0),\n\t\t\t\tx1=y1*aspect,\n\t\t\t\tm=result||new Matrix(4,4,0),\n\t\t\t\tarr=m.array;\n\n\t\t\tarr[0]=2*znear/(x1+x1);\n\t\t\tarr[5]=2*znear/(y1+y1);\n\t\t\tarr[10]=-(zfar+znear)/(zfar-znear);\n\t\t\tarr[14]=-2*zfar*znear/(zfar-znear);\n\t\t\tarr[11]=-1;\n\t\t    if(result)arr[1]=arr[2]=arr[3]=arr[4]=arr[6]=arr[7]=arr[8]=arr[9]=arr[12]=arr[13]=arr[15]=0;\n\t\t    return m;\n\t\t}\n\t\tstatic multiply(a,b,result){\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tlet row=a.row,column=Math.min(a.column,b.column),r=result||new Matrix(row,column),c,i,ind;\n\t\t\tfor(let l=row;l--;){\n\t\t\t\tfor(c=column;c--;){\n\t\t\t\t\tr.array[ind=(l*r.column+c)]=0;\n\t\t\t\t\tfor(i=a.column;i--;){\n\t\t\t\t\t\tr.array[ind]+=(a.array[l*a.column+i]*b.array[c+i*b.column]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic multiplyString(a,b,array,ignoreZero=true){//work out the equation for every elements,only for debug and only works with Array matrixes\n\t\t\tif(a.column!==b.row)throw('wrong matrix');\n\t\t\tvar r=array||new Matrix(a.row,b.column),l,c,i,ind;\n\t\t\tfor(l=a.row;l--;){\n\t\t\t\tfor(c=b.column;c--;){\n\t\t\t\t\tr.array[ind=(l*b.column+c)]='';\n\t\t\t\t\tfor(i=0;i<a.column;i++){\n\t\t\t\t\t\tif(ignoreZero && (a.array[l*a.column+i]==0 ||b.array[c+i*b.column]==0))continue;\n\t\t\t\t\t\tr.array[ind]+=(((i&&r.array[ind])?'+':'')+'('+a.array[l*a.column+i]+')*('+b.array[c+i*b.column])+')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\t\tstatic add(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||new Matrix(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r.array[i]=a.array[i]+b.array[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic minus(a,b,result){\n\t\t\tif(a.column!==b.column || a.row!==b.row)throw('wrong matrix');\n\t\t\tlet r=result||new Matrix(a.row,b.column);\n\t\t\tfor(let i=a.length;i--;)r.array[i]=a.array[i]-b.array[i];\n\t\t\treturn r;\n\t\t}\n\t\tstatic rotate2d(m,t,result){\n\t\t\tconst Mr=Matrix.Matrixes.rotate2d;\n\t\t\tMr.array[0]=Mr.array[4]=Math.cos(t);\n\t\t\tMr.array[1]=-(Mr.array[3]=Math.sin(t));\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(3,3));\n\t\t}\n\t\tstatic scale2d(m,x,y,result){\n\t\t\tconst Mr=Matrix.Matrixes.scale2d;\n\t\t\tMr.array[0]=x;\n\t\t\tMr.array[4]=y;\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(3,3));\n\t\t}\n\t\tstatic translate2d(m,x,y,result){\n\t\t\tconst Mr=Matrix.Matrixes.translate2d;\n\t\t\tMr.array[2]=x;\n\t\t\tMr.array[5]=y;\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(3,3));\n\t\t}\n\t\tstatic rotate3d(m,tx,ty,tz,result){\n\t\t\tconst Xc=Math.cos(tx),Xs=Math.sin(tx),\n\t\t\t\tYc=Math.cos(ty),Ys=Math.sin(ty),\n\t\t\t\tZc=Math.cos(tz),Zs=Math.sin(tz),\n\t\t\t\tMr=Matrix.Matrixes.rotate3d;\n\t\t\tMr.array[0]=Zc*Yc;\n\t\t\tMr.array[1]=Zc*Ys*Xs-Zs*Xc;\n\t\t\tMr.array[2]=Zc*Ys*Xc+Zs*Xs;\n\t\t\tMr.array[4]=Zs*Yc;\n\t\t\tMr.array[5]=Zs*Ys*Xs+Zc*Xc;\n\t\t\tMr.array[6]=Zs*Ys*Xc-Zc*Xs;\n\t\t\tMr.array[8]=-Ys;\n\t\t\tMr.array[9]=Yc*Xs;\n\t\t\tMr.array[10]=Yc*Xc;\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic rotateX(m,t,result){\n\t\t\tconst Mr=Matrix.Matrixes.rotateX;\n\t\t\tMr.array[10]=Mr.array[5]=Math.cos(t);\n\t\t\tMr.array[6]=-(Mr.array[9]=Math.sin(t));\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic rotateY(m,t,result){\n\t\t\tconst Mr=Matrix.Matrixes.rotateY;\n\t\t\tMr.array[10]=Mr.array[0]=Math.cos(t);\n\t\t\tMr.array[8]=-(Mr.array[2]=Math.sin(t));\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic rotateZ(m,t,result){\n\t\t\tconst Mr=Matrix.Matrixes.rotateZ;\n\t\t\tMr.array[5]=Mr.array[0]=Math.cos(t);\n\t\t\tMr.array[1]=-(Mr.array[4]=Math.sin(t));\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic scale3d(m,x,y,z,result){\n\t\t\tconst Mr=Matrix.Matrixes.scale3d;\n\t\t\tMr.array[0]=x;\n\t\t\tMr.array[5]=y;\n\t\t\tMr.array[10]=z;\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic translate3d(m,x,y,z,result){\n\t\t\tconst Mr=Matrix.Matrixes.translate3d;\n\t\t\tMr.array[12]=x;\n\t\t\tMr.array[13]=y;\n\t\t\tMr.array[14]=z;\n\t\t\treturn Matrix.multiply(Mr,m,result||new Matrix(4,4));\n\t\t}\n\t\tstatic put(m,sub,row,column){\n\t\t\tlet c,ind,i;\n\t\t\trow||(row=0);\n\t\t\tcolumn||(column=0);\n\t\t\tfor(let l=sub.row;l--;){\n\t\t\t\tif(l+row>=m.row)continue;\n\t\t\t\tfor(c=sub.column;c--;){\n\t\t\t\t\tif(c+column>=m.column)continue;\n\t\t\t\t\tm.array[(l+row)*m.column+c+column]=sub.array[l*sub.column+c];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic createClass(Constructor){\n\t\t\treturn createClass(Constructor);\n\t\t}\n\t}\n\n\tvar testArray=new Constructor(1);\n\tObject.defineProperty(Matrix,'_instanceofTypedArray',{value:!!(TypedArray&&TypedArray.isPrototypeOf(testArray))});\n\ttestArray=null;\n\n\tMatrix.Matrixes={//do not modify these matrixes manually and dont use them\n\t\tI2:Matrix.Identity(2),\n\t\tI3:Matrix.Identity(3),\n\t\tI4:Matrix.Identity(4),\n\t\tT3:new Matrix(3,3,0),\n\t\tT4:new Matrix(4,4,0),\n\t\trotate2d:Matrix.Identity(3),\n\t\ttranslate2d:Matrix.Identity(3),\n\t\tscale2d:Matrix.Identity(3),\n\t\ttranslate3d:Matrix.Identity(4),\n\t\trotate3d:Matrix.Identity(4),\n\t\trotateX:Matrix.Identity(4),\n\t\trotateY:Matrix.Identity(4),\n\t\trotateZ:Matrix.Identity(4),\n\t\tscale3d:Matrix.Identity(4),\n\t}\n\treturn Matrix;\n}\nreturn createClass(global.Float32Array?Float32Array:Array);\n});\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*\nCopyright luojia@luojia.me\nLGPL license\n\ndanmaku-frame text2d mod\n*/\n'use strict';\n\nimport '../lib/setImmediate/setImmediate.js'\nimport Text2d from './text2d.js'\nimport Text3d from './text3d.js'\nimport TextCanvas from './textCanvas.js'\n\n\n\n/*\ndanmaku obj struct\n{\n\t_:'text',\n\ttime:(number)msec time,\n\ttext:(string),\n\tstyle:(object)to be combined whit default style,\n\tmode:(number)\n}\n\ndanmaku mode\n\t0:right\n\t1:left\n\t2:bottom\n\t3:top\n*/\n\nfunction init(DanmakuFrame,DanmakuFrameModule){\n\tconst defProp=Object.defineProperty;\n\tconst requestIdleCallback=window.requestIdleCallback||setImmediate;\n\tlet useImageBitmap=false;\n\n\tclass TextDanmaku extends DanmakuFrameModule{\n\t\tconstructor(frame,arg={}){\n\t\t\tsuper(frame);\n\t\t\tconst D=this;\n\t\t\tD.list=[];//danmaku object array\n\t\t\tD.indexMark=0;//to record the index of last danmaku in the list\n\t\t\tD.tunnel=new tunnelManager();\n\t\t\tD.paused=true;\n\t\t\tD.randomText=`danmaku_text_${(Math.random()*999999)|0}`;\n\t\t\t\n\t\t\t//opt time record\n\t\t\tD.cacheCleanTime=0;\n\t\t\tD.danmakuMoveTime=0;\n\t\t\tD.danmakuCheckTime=0;\n\t\t\tD.danmakuCheckSwitch=true;\n\t\t\tD.defaultStyle={//these styles can be overwrote by the 'font' property of danmaku object\n\t\t\t\tfontStyle: null,\n\t\t\t\tfontWeight: 300,\n\t\t\t\tfontVariant: null,\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tfontSize: 24,\n\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\tstrokeWidth: 1,//outline width\n\t\t\t\tstrokeColor: \"#888\",\n\t\t\t\tshadowBlur: 5,\n\t\t\t\ttextAlign:'start',//left right center start end\n\t\t\t\tshadowColor: \"#000\",\n\t\t\t\tshadowOffsetX:0,\n\t\t\t\tshadowOffsetY:0,\n\t\t\t\tfill:true,//if the text should be filled\n\t\t\t};\n\t\t\tD.options={\n\t\t\t\tallowLines:false,//allow multi-line danmaku\n\t\t\t\tscreenLimit:0,//the most number of danmaku on the screen\n\t\t\t\tclearWhenTimeReset:true,//clear danmaku on screen when the time is reset\n\t\t\t\tspeed:6.5,\n\t\t\t\tautoShiftRenderingMode:true,//auto shift to a low load mode\n\t\t\t}\n\n\t\t\tif(arg.defaultStyle)\n\t\t\t\tObject.assign(this.defaultStyle,arg.defaultStyle);\n\t\t\tif(arg.options)\n\t\t\t\tObject.assign(this.options,arg.options);\n\t\t\t\n\t\t\tframe.addStyle(`.${D.randomText}_fullfill{top:0;left:0;width:100%;height:100%;position:absolute;}`);\n\n\t\t\tdefProp(D,'rendererMode',{configurable:true});\n\t\t\tdefProp(D,'activeRendererMode',{configurable:true,value:null});\n\t\t\tconst con=D.container=document.createElement('div');\n\t\t\tcon.classList.add(`${D.randomText}_fullfill`);\n\t\t\tframe.container.appendChild(con);\n\n\t\t\t//init modes\n\t\t\tD.text2d=new Text2d(D);\n\t\t\tD.text3d=new Text3d(D);\n\t\t\tD.textCanvas=new TextCanvas(D);\n\t\t\t\n\t\t\tD.textCanvasContainer.hidden=D.canvas.hidden=D.canvas3d.hidden=true;\n\t\t\tD.modes={\n\t\t\t\t1:D.textCanvas,\n\t\t\t\t2:D.text2d,\n\t\t\t\t3:D.text3d,\n\t\t\t};\n\t\t\tD.GraphCache=[];//text graph cache\n\t\t\tD.DanmakuText=[];\n\t\t\tD.renderingDanmakuManager=new renderingDanmakuManager(D);\n\n\t\t\taddEvents(document,{\n\t\t\t\tvisibilitychange:e=>{\n\t\t\t\t\tD.danmakuCheckSwitch=!document.hidden;\n\t\t\t\t\tif(!document.hidden)D.recheckIndexMark();\n\t\t\t\t}\n\t\t\t});\n\t\t\tD._checkNewDanmaku=D._checkNewDanmaku.bind(D);\n\t\t\tD._cleanCache=D._cleanCache.bind(D);\n\t\t\tsetInterval(D._cleanCache,5000);//set an interval for cache cleaning\n\t\t\t\n\t\t\tD.setRendererMode(1);\n\t\t}\n\t\tsetRendererMode(n){\n\t\t\tconst D=this;\n\t\t\tif(D.rendererMode===n || !(n in D.modes) || !D.modes[n].supported)return false;\n\t\t\tD.activeRendererMode&&D.activeRendererMode.disable();\n\t\t\tdefProp(D,'activeRendererMode',{value:D.modes[n]});\n\t\t\tdefProp(D,'rendererMode',{value:n});\n\t\t\tD.activeRendererMode.resize();\n\t\t\tD.activeRendererMode.enable();\n\t\t\tconsole.log('rendererMode:',D.rendererMode);\n\t\t\treturn true;\n\t\t}\n\t\tmedia(media){\n\t\t\tconst D=this;\n\t\t\taddEvents(media,{\n\t\t\t\tseeked:()=>{\n\t\t\t\t\tD.time();\n\t\t\t\t\tD._clearScreen(true);\n\t\t\t\t},\n\t\t\t\tseeking:()=>D.pause(),\n\t\t\t});\n\t\t}\n\t\tstart(){\n\t\t\tthis.paused=false;\n\t\t\t//this.recheckIndexMark();\n\t\t\tthis.activeRendererMode.start();\n\t\t}\n\t\tpause(){\n\t\t\tthis.paused=true;\n\t\t\tthis.activeRendererMode.pause();\n\t\t}\n\t\tload(d,autoAddToScreen){\n\t\t\tif(!d || d._!=='text'){return false;}\n\t\t\tif(typeof d.text !== 'string'){\n\t\t\t\tconsole.error('wrong danmaku object:',d);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet t=d.time,ind,arr=this.list;\n\t\t\tind=dichotomy(arr,d.time,0,arr.length-1,false)\n\t\t\tarr.splice(ind,0,d);\n\t\t\tif(ind<this.indexMark)this.indexMark++;\n\t\t\t//round d.style.fontSize to prevent Iifinity loop in tunnel\n\t\t\tif(typeof d.style!=='object')d.style={};\n\t\t\td.style.fontSize=d.style.fontSize?((d.style.fontSize+0.5)|0):this.defaultStyle.fontSize;\n\t\t\tif(isNaN(d.style.fontSize)|| d.style.fontSize===Infinity || d.style.fontSize===0)d.style.fontSize=this.defaultStyle.fontSize;\n\t\t\tif(typeof d.mode !== 'number')d.mode=0;\n\t\t\tif(autoAddToScreen){\n\t\t\t\tconsole.log(ind,this.indexMark)\n\t\t\t}\n\t\t\tif(autoAddToScreen&&(ind<this.indexMark))this._addNewDanmaku(d);\n\t\t\treturn d;\n\t\t}\n\t\tloadList(danmakuArray){\n\t\t\tdanmakuArray.forEach(d=>this.load(d));\n\t\t}\n\t\tunload(d){\n\t\t\tif(!d || d._!=='text')return false;\n\t\t\tconst D=this,i=D.list.indexOf(d);\n\t\t\tif(i<0)return false;\n\t\t\tD.list.splice(i,1);\n\t\t\tif(i<D.indexMark)D.indexMark--;\n\t\t\treturn true;\n\t\t}\n\t\t_checkNewDanmaku(force){\n\t\t\tif(this.paused&&!force)return;\n\t\t\tlet D=this,d,time=D.frame.time;\n\t\t\tif(D.danmakuCheckTime===time || !D.danmakuCheckSwitch)return;\n\t\t\tif(D.list.length)\n\t\t\tfor(;(D.indexMark<D.list.length)&&(d=D.list[D.indexMark])&&(d.time<=time);D.indexMark++){//add new danmaku\n\t\t\t\tif(D.options.screenLimit>0 && D.DanmakuText.length>=D.options.screenLimit){continue;}//continue if the number of danmaku on screen has up to limit or doc is not visible\n\t\t\t\tD._addNewDanmaku(d);\n\t\t\t}\n\t\t\tD.danmakuCheckTime=time;\n\t\t}\n\t\t_addNewDanmaku(d){\n\t\t\tconst D=this,cHeight=D.height,cWidth=D.width;\n\t\t\tlet t=D.GraphCache.length?D.GraphCache.shift():new TextGraph();\n\t\t\tt.danmaku=d;\n\t\t\tt.drawn=false;\n\t\t\tt.text=D.options.allowLines?d.text:d.text.replace(/\\n/g,' ');\n\t\t\tt.time=d.time;\n\t\t\tt.font=Object.create(D.defaultStyle);\n\t\t\tObject.assign(t.font,d.style);\n\t\t\tif(!t.font.lineHeight)t.font.lineHeight=(t.font.fontSize+2)||1;\n\t\t\tif(d.style.color){\n\t\t\t\tif(t.font.color && t.font.color[0]!=='#'){\n\t\t\t\t\tt.font.color='#'+d.style.color;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(d.mode>1)t.font.textAlign='center';\n\t\t\tt.prepare(D.rendererMode===3?false:true);\n\t\t\t//find tunnel number\n\t\t\tconst tnum=D.tunnel.getTunnel(t,cHeight);\n\t\t\t//calc margin\n\t\t\tlet margin=(tnum<0?0:tnum)%cHeight;\n\t\t\tswitch(d.mode){\n\t\t\t\tcase 0:case 1:case 3:{\n\t\t\t\t\tt.style.y=margin;break;\n\t\t\t\t}\n\t\t\t\tcase 2:{\n\t\t\t\t\tt.style.y=cHeight-margin-t.style.height-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(d.mode){\n\t\t\t\tcase 0:{t.style.x=cWidth;break;}\n\t\t\t\tcase 1:{t.style.x=-t.style.width;break;}\n\t\t\t\tcase 2:case 3:{t.style.x=(cWidth-t.style.width)/2;}\n\t\t\t}\n\t\t\tD.renderingDanmakuManager.add(t);\n\t\t\tD.activeRendererMode.newDanmaku(t);\n\t\t}\n\t\t_calcSideDanmakuPosition(t,T=this.frame.time){\n\t\t\tlet R=!t.danmaku.mode,style=t.style;\n\t\t\treturn (R?this.frame.width:(-style.width))\n\t\t\t\t\t+(R?-1:1)*this.frame.rate*(style.width+1024)*(T-t.time)*this.options.speed/60000;\n\t\t}\n\t\t_calcDanmakusPosition(force){\n\t\t\tlet D=this,T=D.frame.time;\n\t\t\tif(D.paused&&!force)return;\n\t\t\tconst cWidth=D.width,rate=D.frame.rate;\n\t\t\tlet R,i,t,style,X;\n\t\t\tD.danmakuMoveTime=T;\n\t\t\tfor(i=D.DanmakuText.length;i--;){\n\t\t\t\tt=D.DanmakuText[i];\n\t\t\t\tif(t.time>T){\n\t\t\t\t\tD.removeText(t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstyle=t.style;\n\n\t\t\t\tswitch(t.danmaku.mode){\n\t\t\t\t\tcase 0:case 1:{\n\t\t\t\t\t\tR=!t.danmaku.mode;\n\t\t\t\t\t\tstyle.x=X=D._calcSideDanmakuPosition(t,T);\n\t\t\t\t\t\tif(t.tunnelNumber>=0 && ((R&&(X+style.width)+10<cWidth) || (!R&&X>10)) ){\n\t\t\t\t\t\t\tD.tunnel.removeMark(t);\n\t\t\t\t\t\t}else if( (R&&(X<-style.width-20)) || (!R&&(X>cWidth+style.width+20)) ){//go out the canvas\n\t\t\t\t\t\t\tD.removeText(t);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 2:case 3:{\n\t\t\t\t\t\tif((T-t.time)>D.options.speed*1000/rate){\n\t\t\t\t\t\t\tD.removeText(t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_cleanCache(force){//clean text object cache\n\t\t\tconst D=this,now=Date.now();\n\t\t\tif(D.GraphCache.length>30 || force){//save 20 cached danmaku\n\t\t\t\tfor(let ti = 0;ti<D.GraphCache.length;ti++){\n\t\t\t\t\tif(force || (now-D.GraphCache[ti].removeTime) > 10000){//delete cache which has not used for 10s\n\t\t\t\t\t\tD.activeRendererMode.deleteTextObject(D.GraphCache[ti]);\n\t\t\t\t\t\tD.GraphCache.splice(ti,1);\n\t\t\t\t\t}else{break;}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdraw(force){\n\t\t\tif((!force&&this.paused)||!this.enabled)return;\n\t\t\tthis._calcDanmakusPosition(force);\n\t\t\tthis.activeRendererMode.draw(force);\n\t\t\trequestAnimationFrame(()=>{this._checkNewDanmaku(force)});\n\t\t}\n\t\tremoveText(t){//remove the danmaku from screen\n\t\t\tthis.renderingDanmakuManager.remove(t);\n\t\t\tthis.tunnel.removeMark(t);\n\t\t\tt._bitmap=t.danmaku=null;\n\t\t\tt.removeTime=Date.now();\n\t\t\tthis.GraphCache.push(t);\n\t\t\tthis.activeRendererMode.remove(t);\n\t\t}\n\t\tresize(){\n\t\t\tif(this.activeRendererMode)this.activeRendererMode.resize();\n\t\t\tthis.draw(true);\n\t\t}\n\t\t_clearScreen(forceFull){\n\t\t\tthis.activeRendererMode&&this.activeRendererMode.clear(forceFull);\n\t\t}\n\t\tclear(){//clear danmaku on the screen\n\t\t\tfor(let i=this.DanmakuText.length,T;i--;){\n\t\t\t\tT=this.DanmakuText[i];\n\t\t\t\tif(T.danmaku)this.removeText(T);\n\t\t\t}\n\t\t\tthis.tunnel.reset();\n\t\t\tthis._clearScreen(true);\n\t\t}\n\t\trecheckIndexMark(t=this.frame.time){\n\t\t\tthis.indexMark=dichotomy(this.list,t,0,this.list.length-1,true);\n\t\t}\n\t\trate(r){\n\t\t\tif(this.activeRendererMode)this.activeRendererMode.rate(r);\n\t\t}\n\t\ttime(t=this.frame.time){//reset time,you should invoke it when the media has seeked to another time\n\t\t\tthis.recheckIndexMark(t);\n\t\t\tif(this.options.clearWhenTimeReset){this.clear();}\n\t\t\telse{this.resetTimeOfDanmakuOnScreen();}\n\t\t}\n\t\tresetTimeOfDanmakuOnScreen(cTime){\n\t\t\t//cause the position of the danmaku is based on time\n\t\t\t//and if you don't want these danmaku on the screen to disappear after seeking,their time should be reset\n\t\t\tif(cTime===undefined)cTime=this.frame.time;\n\t\t\tthis.DanmakuText.forEach(t=>{\n\t\t\t\tif(!t.danmaku)return;\n\t\t\t\tt.time=cTime-(this.danmakuMoveTime-t.time);\n\t\t\t});\n\t\t}\n\t\tdanmakuAt(x,y){//return a list of danmaku which covers this position\n\t\t\tconst list=[];\n\t\t\tif(!this.enabled)return list;\n\t\t\tthis.DanmakuText.forEach(t=>{\n\t\t\t\tif(!t.danmaku)return;\n\t\t\t\tif(t.style.x<=x && t.style.x+t.style.width>=x && t.style.y<=y && t.style.y+t.style.height>=y)\n\t\t\t\t\tlist.push(t.danmaku);\n\t\t\t});\n\t\t\treturn list;\n\t\t}\n\t\tenable(){//enable the plugin\n\t\t\tthis.textCanvasContainer.hidden=false;\n\t\t\tif(this.frame.working)this.start();\n\t\t}\n\t\tdisable(){//disable the plugin\n\t\t\tthis.textCanvasContainer.hidden=true;\n\t\t\tthis.pause();\n\t\t\tthis.clear();\n\t\t}\n\t\tset useImageBitmap(v){\n\t\t\tuseImageBitmap=(typeof createImageBitmap ==='function')?v:false;\n\t\t}\n\t\tget useImageBitmap(){return useImageBitmap;}\n\t\tget width(){return this.frame.width;}\n\t\tget height(){return this.frame.height;}\n\t}\n\n\n\tclass TextGraph{//code copied from CanvasObjLibrary\n\t\tconstructor(text=''){\n\t\t\tconst G=this;\n\t\t\tG._fontString='';\n\t\t\tG._renderList=null;\n\t\t\tG.style={};\n\t\t\tG.font={};\n\t\t\tG.text=text;\n\t\t\tG._renderToCache=G._renderToCache.bind(G);\n\t\t\tdefProp(G,'_cache',{configurable:true});\n\t\t}\n\t\tprepare(async=false){//prepare text details\n\t\t\tconst G=this;\n\t\t\tif(!G._cache){\n\t\t\t\tdefProp(G,'_cache',{value:document.createElement(\"canvas\")});\n\t\t\t}\n\t\t\tlet ta=[];\n\t\t\t(G.font.fontStyle)&&ta.push(G.font.fontStyle);\n\t\t\t(G.font.fontVariant)&&ta.push(G.font.fontVariant);\n\t\t\t(G.font.fontWeight)&&ta.push(G.font.fontWeight);\n\t\t\tta.push(`${G.font.fontSize}px`);\n\t\t\t(G.font.fontFamily)&&ta.push(G.font.fontFamily);\n\t\t\tG._fontString = ta.join(' ');\n\n\t\t\tconst imgobj = G._cache,ct = (imgobj.ctx2d||(imgobj.ctx2d=imgobj.getContext(\"2d\")));\n\t\t\tct.font = G._fontString;\n\t\t\tG._renderList = G.text.split(/\\n/g);\n\t\t\tG.estimatePadding=Math.max(\n\t\t\t\tG.font.shadowBlur+5+Math.max(Math.abs(G.font.shadowOffsetY),Math.abs(G.font.shadowOffsetX)),\n\t\t\t\tG.font.strokeWidth+3\n\t\t\t);\n\t\t\tlet w = 0,tw,lh=(typeof G.font.lineHeight ==='number')?G.font.lineHeight:G.font.fontSize;\n\t\t\tfor (let i = G._renderList.length; i -- ;) {\n\t\t\t\ttw = ct.measureText(G._renderList[i]).width;\n\t\t\t\t(tw>w)&&(w=tw);//max\n\t\t\t}\n\t\t\timgobj.width = (G.style.width = w) + G.estimatePadding*2;\n\t\t\timgobj.height = (G.style.height = G._renderList.length * lh)+ ((lh<G.font.fontSize)?G.font.fontSize*2:0) + G.estimatePadding*2;\n\n\t\t\tct.translate(G.estimatePadding, G.estimatePadding);\n\t\t\tif(async){\n\t\t\t\trequestIdleCallback(G._renderToCache);\n\t\t\t}else{\n\t\t\t\tG._renderToCache();\n\t\t\t}\n\t\t}\n\t\t_renderToCache(){\n\t\t\tconst G=this;\n\t\t\tif(!G.danmaku)return;\n\t\t\tG.render(G._cache.ctx2d);\n\t\t\tif(useImageBitmap){//use ImageBitmap\n\t\t\t\tif(G._bitmap){\n\t\t\t\t\tG._bitmap.close();\n\t\t\t\t\tG._bitmap=null;\n\t\t\t\t}\n\t\t\t\tcreateImageBitmap(G._cache).then(bitmap=>{\n\t\t\t\t\tG._bitmap=bitmap;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\trender(ct){//render text\n\t\t\tconst G=this;\n\t\t\tif(!G._renderList)return;\n\t\t\tct.save();\n\t\t\tif(G.danmaku.highlight){\n\t\t\t\tct.fillStyle='rgba(255,255,255,0.3)';\n\t\t\t\tct.beginPath();\n\t\t\t\tct.rect(0,0,G.style.width,G.style.height);\n\t\t\t\tct.fill();\n\t\t\t}\n\t\t\tct.font=G._fontString;//set font\n\t\t\tct.textBaseline = 'middle';\n\t\t\tct.lineWidth = G.font.strokeWidth;\n\t\t\tct.fillStyle = G.font.color;\n\t\t\tct.strokeStyle = G.font.strokeColor;\n\t\t\tct.shadowBlur = G.font.shadowBlur;\n\t\t\tct.shadowColor= G.font.shadowColor;\n\t\t\tct.shadowOffsetX = G.font.shadowOffsetX;\n\t\t\tct.shadowOffsetY = G.font.shadowOffsetY;\n\t\t\tct.textAlign = G.font.textAlign;\n\t\t\tlet lh=(typeof G.font.lineHeight ==='number')?G.font.lineHeight:G.font.fontSize,\n\t\t\t\tx;\n\t\t\tswitch(G.font.textAlign){\n\t\t\t\tcase 'left':case 'start':{\n\t\t\t\t\tx=0;break;\n\t\t\t\t}\n\t\t\t\tcase 'center':{\n\t\t\t\t\tx=G.style.width/2;break;\n\t\t\t\t}\n\t\t\t\tcase 'right':case 'end':{\n\t\t\t\t\tx=G.style.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = G._renderList.length;i--;) {\n\t\t\t\tG.font.strokeWidth&&ct.strokeText(G._renderList[i],x,lh*(i+0.5));\n\t\t\t\tG.font.fill&&ct.fillText(G._renderList[i],x, lh*(i+0.5));\n\t\t\t}\n\t\t\tct.restore();\n\t\t}\n\t}\n\n\tclass tunnelManager{\n\t\tconstructor(){\n\t\t\tthis.reset();\n\t\t}\n\t\treset(){\n\t\t\tthis.right={};\n\t\t\tthis.left={};\n\t\t\tthis.bottom={};\n\t\t\tthis.top={};\n\t\t}\n\t\tgetTunnel(tobj,cHeight){//get the tunnel index that can contain the danmaku of the sizes\n\t\t\tlet tunnel=this.tunnel(tobj.danmaku.mode),\n\t\t\t\tsize=tobj.style.height,\n\t\t\t\tti=0,\n\t\t\t\ttnum=-1;\n\t\t\tif(typeof size !=='number' || size<=0){\n\t\t\t\tconsole.error('Incorrect size:'+size);\n\t\t\t\tsize=24;\n\t\t\t}\n\t\t\tif(size>cHeight)return 0;\n\n\t\t\twhile(tnum<0){\n\t\t\t\tfor(let t=ti+size-1;ti<=t;){\n\t\t\t\t\tif(tunnel[ti]){//used\n\t\t\t\t\t\tti+=tunnel[ti].tunnelHeight;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if((ti!==0)&&(ti%(cHeight-1))===0){//new page\n\t\t\t\t\t\tti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(ti===t){//get\n\t\t\t\t\t\ttnum=ti-size+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttobj.tunnelNumber=tnum;\n\t\t\ttobj.tunnelHeight=(((tobj.style.y+size)>cHeight)?1:size);\n\t\t\tthis.addMark(tobj);\n\t\t\treturn tnum;\n\t\t}\n\t\taddMark(tobj){\n\t\t\tlet t=this.tunnel(tobj.danmaku.mode);\n\t\t\tif(!t[tobj.tunnelNumber])t[tobj.tunnelNumber]=tobj;\n\t\t}\n\t\tremoveMark(tobj){\n\t\t\tlet t,tun=tobj.tunnelNumber;\n\t\t\tif(tun>=0&&(t=this.tunnel(tobj.danmaku.mode))[tun]===tobj){\n\t\t\t\tdelete t[tun];\n\t\t\t\ttobj.tunnelNumber=-1;\n\t\t\t}\n\t\t}\n\t\ttunnel(id){\n\t\t\treturn this[tunnels[id]];\n\t\t}\n\t}\n\n\tconst tunnels=['right','left','bottom','top'];\n\n\tclass renderingDanmakuManager{\n\t\tconstructor(dText){\n\t\t\tthis.dText=dText;\n\t\t\tthis.totalArea=0;\n\t\t\tthis.limitArea=Infinity;\n\t\t\tif(dText.text2d.supported)this.timer=setInterval(()=>this.rendererModeCheck(),1500);\n\t\t}\n\t\tadd(t){\n\t\t\tthis.dText.DanmakuText.push(t);\n\t\t\tthis.totalArea+=t._cache.width*t._cache.height;\n\t\t}\n\t\tremove(t){\n\t\t\tlet ind=this.dText.DanmakuText.indexOf(t);\n\t\t\tif(ind>=0){\n\t\t\t\tthis.dText.DanmakuText.splice(ind,1);\n\t\t\t\tthis.totalArea-=t._cache.width*t._cache.height;\n\t\t\t}\n\t\t}\n\t\trendererModeCheck(){\n\t\t\tlet D=this.dText;\n\t\t\tif(!this.dText.options.autoShiftRenderingMode || D.paused)return;\n\t\t\tif(D.frame.fpsRec<(D.frame.fps||60)*0.95){\n\t\t\t\t(this.limitArea>this.totalArea)&&(this.limitArea=this.totalArea);\n\t\t\t}else{\n\t\t\t\t(this.limitArea<this.totalArea)&&(this.limitArea=this.totalArea);\n\t\t\t}\n\t\t\tif(D.rendererMode==1 && this.totalArea>this.limitArea){\n\t\t\t\tD.text2d.supported&&D.setRendererMode(2);\n\t\t\t}else if(D.rendererMode==2&& this.totalArea<this.limitArea*0.5){\n\t\t\t\tD.textCanvas.supported&&D.setRendererMode(1);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction dichotomy(arr,t,start,end,position=false){\n\t\tif(arr.length===0)return 0;\n\t\tlet m=start,s=start,e=end;\n\t\twhile(start <= end){//dichotomy\n\t\t\tm=(start+end)>>1;\n\t\t\tif(t<=arr[m].time)end=m-1;\n\t\t\telse{start=m+1;}\n\t\t}\n\t\tif(position){//find to top\n\t\t\twhile(start>0 && (arr[start-1].time===t)){\n\t\t\t\tstart--;\n\t\t\t}\n\t\t}else{//find to end\n\t\t\twhile(start<=e && (arr[start].time===t)){\n\t\t\t\tstart++;\n\t\t\t}\n\t\t}\n\t\treturn start;\n\t}\n\n\tDanmakuFrame.addModule('TextDanmaku',TextDanmaku);\n};\n\nfunction addEvents(target,events={}){\n\tfor(let e in events)e.split(/\\,/g).forEach(e2=>target.addEventListener(e2,events[e]));\n}\nfunction limitIn(num,min,max){//limit the number in a range\n\treturn num<min?min:(num>max?max:num);\n}\nfunction emptyFunc(){}\nexport default init;","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Template from './textModuleTemplate.js';\n\nclass Text2d extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=false;\n\t\tdText.canvas=document.createElement('canvas');//the canvas\n\t\tdText.context2d=dText.canvas.getContext('2d');//the canvas contex\n\t\tif(!dText.context2d){\n\t\t\tconsole.warn('text 2d not supported');\n\t\t\treturn;\n\t\t}\n\t\tdText.canvas.classList.add(`${dText.randomText}_fullfill`);\n\t\tdText.canvas.id=`${dText.randomText}_text2d`;\n\t\tdText.container.appendChild(dText.canvas);\n\t\tthis.supported=true;\n\t}\n\tdraw(force){\n\t\tlet ctx=this.dText.context2d,\n\t\t\tcW=ctx.canvas.width,\n\t\t\tdT=this.dText.DanmakuText,\n\t\t\ti=dT.length,\n\t\t\tt,\n\t\t\tleft,\n\t\t\tright,\n\t\t\tvW;\n\t\tconst bitmap=this.dText.useImageBitmap;\n\t\tctx.globalCompositeOperation='destination-over';\n\t\tthis.clear(force);\n\t\tfor(;i--;){\n\t\t\t(t=dT[i]).drawn||(t.drawn=true);\n\t\t\tleft=t.style.x-t.estimatePadding;\n\t\t\tright=left+t._cache.width;\n\t\t\tif(left>cW || right<0)continue;\n\t\t\tif(!bitmap && cW>=t._cache.width){//danmaku that smaller than canvas width\n\t\t\t\tctx.drawImage(t._bitmap||t._cache, left, t.style.y-t.estimatePadding);\n\t\t\t}else{\n\t\t\t\tvW=t._cache.width+(left<0?left:0)-(right>cW?right-cW:0)\n\t\t\t\tctx.drawImage(t._bitmap||t._cache,\n\t\t\t\t\t(left<0)?-left:0,0,\n\t\t\t\t\t\t\tvW,t._cache.height,\n\t\t\t\t\t(left<0)?0:left,t.style.y-t.estimatePadding,\n\t\t\t\t\t\t\tvW,t._cache.height);\n\t\t\t}\n\t\t}\n\t}\n\tclear(force){\n\t\tconst D=this.dText;\n\t\tif(force||this._evaluateIfFullClearMode()){\n\t\t\tD.context2d.clearRect(0,0,D.canvas.width,D.canvas.height);\n\t\t\treturn;\n\t\t}\n\t\tfor(let i=D.DanmakuText.length,t;i--;){\n\t\t\tt=D.DanmakuText[i];\n\t\t\tif(t.drawn)\n\t\t\t\tD.context2d.clearRect(t.style.x-t.estimatePadding,t.style.y-t.estimatePadding,t._cache.width,t._cache.height);\n\t\t}\n\t}\n\t_evaluateIfFullClearMode(){\n\t\tif(this.dText.DanmakuText.length>3)return true;\n\t\tlet l=this.dText.GraphCache[this.dText.GraphCache.length-1];\n\t\tif(l&&l.drawn){\n\t\t\tl.drawn=false;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tresize(){\n\t\tlet D=this.dText,C=D.canvas;\n\t\tC.width=D.width;\n\t\tC.height=D.height;\n\t}\n\tenable(){\n\t\tthis.draw();\n\t\tthis.dText.useImageBitmap=!(this.dText.canvas.hidden=false);\n\t}\n\tdisable(){\n\t\tthis.dText.canvas.hidden=true;\n\t\tthis.clear(true);\n\t}\n}\n\nexport default Text2d;","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Mat from '../lib/Mat/Mat.js'\nimport Template from './textModuleTemplate.js';\nconst requestIdleCallback=window.requestIdleCallback||setImmediate;\n\nclass Text3d extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=false;\n\t\tlet c3d=this.c3d=dText.canvas3d=document.createElement('canvas');\n\t\tc3d.classList.add(`${dText.randomText}_fullfill`);\n\t\tc3d.id=`${dText.randomText}_text3d`;\n\t\tdText.context3d=c3d.getContext('webgl')||c3d.getContext('experimental-webgl');//the canvas3d context\n\n\t\tif(!dText.context3d){\n\t\t\tconsole.warn('text 3d not supported');\n\t\t\treturn;\n\t\t}\n\t\tdText.container.appendChild(c3d);\n\t\tconst gl=this.gl=dText.context3d,canvas=c3d;\n\t\t//init webgl\n\n\t\t//shader\n\t\tvar shaders={\n\t\t\tdanmakuFrag:[gl.FRAGMENT_SHADER,`\n\t\t\t\t#pragma optimize(on)\n\t\t\t\tprecision lowp float;\n\t\t\t\tvarying lowp vec2 vDanmakuTexCoord;\n\t\t\t\tuniform sampler2D uSampler;\n\t\t\t\tvoid main(void) {\n\t\t\t\t\tvec4 co=texture2D(uSampler,vDanmakuTexCoord);\n\t\t\t\t\tif(co.a == 0.0)discard;\n\t\t\t\t\tgl_FragColor = co;\n\t\t\t\t}`\n\t\t\t],\n\t\t\tdanmakuVert:[gl.VERTEX_SHADER,`\n\t\t\t\t#pragma optimize(on)\n\t\t\t\tattribute vec2 aVertexPosition;\n\t\t\t\tattribute vec2 aDanmakuTexCoord;\n\t\t\t\tuniform mat4 u2dCoordinate;\n\t\t\t\tvarying lowp vec2 vDanmakuTexCoord;\n\t\t\t\tvoid main(void) {\n\t\t\t\t\tgl_Position = u2dCoordinate * vec4(aVertexPosition,0,1);\n\t\t\t\t\tvDanmakuTexCoord = aDanmakuTexCoord;\n\t\t\t\t}`\n\t\t\t],\n\t\t}\n\t\tfunction shader(name){\n\t\t\tvar s=gl.createShader(shaders[name][0]);\n\t\t\tgl.shaderSource(s,shaders[name][1]);\n\t\t\tgl.compileShader(s);\n\t\t\tif (!gl.getShaderParameter(s,gl.COMPILE_STATUS))\n\t\t\t\tthrow(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(s));\n\t\t\treturn s;\n\t\t}\n\t\tvar fragmentShader = shader(\"danmakuFrag\");\n\t\tvar vertexShader = shader(\"danmakuVert\");\n\t\tvar shaderProgram = this.shaderProgram = gl.createProgram();\n\t\tgl.attachShader(shaderProgram,vertexShader);\n\t\tgl.attachShader(shaderProgram,fragmentShader);\n\t\tgl.linkProgram(shaderProgram);\n\t\tif (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t\t\tconsole.error(\"Unable to initialize the shader program.\");\n\t\t\treturn;\n\t\t}\n\t\tgl.useProgram(shaderProgram);\n\n\t\t//scene\n\t\tgl.clearColor(0, 0, 0, 0.0);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA ,gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tthis.maxTexSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\n\t\tthis.uSampler=gl.getUniformLocation(shaderProgram,\"uSampler\");\n\t\tthis.u2dCoord=gl.getUniformLocation(shaderProgram,\"u2dCoordinate\");\n\t\tthis.aVertexPosition=gl.getAttribLocation(shaderProgram,\"aVertexPosition\");\n\t\tthis.atextureCoord=gl.getAttribLocation(shaderProgram,\"aDanmakuTexCoord\");\n\n\t\tgl.enableVertexAttribArray(this.aVertexPosition);\n\t\tgl.enableVertexAttribArray(this.atextureCoord);\n\n\t\tthis.commonTexCoordBuffer=gl.createBuffer();\n\t\tthis.commonVertCoordBuffer=gl.createBuffer();\n\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tgl.uniform1i(this.uSampler,0);\n\n\t\tthis.supported=true;\n\t}\n\tdraw(force){\n\t\tconst gl=this.gl,l=this.dText.DanmakuText.length;\n\t\tlet cW=this.c3d.width,left,right,vW;\n\t\tfor(let i=0,t;i<l;i++){\n\t\t\tt=this.dText.DanmakuText[i];\n\t\t\tif(!t || !t.glDanmaku)continue;\n\t\t\tleft=t.style.x-t.estimatePadding;\n\t\t\tright=left+t._cache.width,\n\t\t\tvW=t._cache.width+(left<0?left:0)-(right>cW?right-cW:0);\n\t\t\tif(left>cW || right<0)continue;\n\n\t\t\t//vert\n\t\t\tt.vertCoord[0]=t.vertCoord[4]=(left<0)?0:left;\n\t\t\tt.vertCoord[2]=t.vertCoord[6]=t.vertCoord[0]+vW;\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER,this.commonVertCoordBuffer);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER,t.vertCoord,gl.DYNAMIC_DRAW);\n\t\t\tgl.vertexAttribPointer(this.aVertexPosition,2,gl.FLOAT,false,0,0);\n\n\t\t\t//tex\n\t\t\tcommonTextureCoord[0]=commonTextureCoord[4]=(left<0)?-left/t._cache.width:0;\n\t\t\tcommonTextureCoord[2]=commonTextureCoord[6]=commonTextureCoord[0]+vW/t._cache.width;\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER,this.commonTexCoordBuffer);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER,commonTextureCoord,gl.DYNAMIC_DRAW);\n\t\t\tgl.vertexAttribPointer(this.atextureCoord,2,gl.FLOAT,false,0,0);\n\n\t\t\tgl.bindTexture(gl.TEXTURE_2D,t.texture);\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP,0,4);\n\t\t}\n\t\tgl.flush();\n\t}\n\tclear(){\n\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\t}\n\tdeleteTextObject(t){\n\t\tconst gl=this.gl;\n\t\tif(t.texture)gl.deleteTexture(t.texture);\n\t}\n\tresize(w,h){\n\t\tconst gl=this.gl,C=this.c3d;\n\t\tC.width=this.dText.width;\n\t\tC.height=this.dText.height;\n\t\tgl.viewport(0,0,C.width,C.height);\n\t\tgl.uniformMatrix4fv(this.u2dCoord,false,(Mat.Identity(4).translate3d(-1,1,0).scale3d(2/C.width,-2/C.height,0)).array);\n\t}\n\tenable(){\n\t\tthis.dText.DanmakuText.forEach(t=>{\n\t\t\tthis.newDanmaku(t,false);\n\t\t});\n\t\tthis.dText.useImageBitmap=this.c3d.hidden=false;\n\t\trequestAnimationFrame(()=>this.draw());\n\t}\n\tdisable(){\n\t\tthis.clear();\n\t\tthis.c3d.hidden=true;\n\t}\n\tnewDanmaku(t,async=true){\n\t\tconst gl=this.gl;\n\t\tt.glDanmaku=false;\n\t\tif(t._cache.height>this.maxTexSize || t._cache.width>this.maxTexSize){//ignore too large danmaku image\n\t\t\tconsole.warn('Ignore a danmaku width too large size',t.danmaku);\n\t\t\treturn;\n\t\t}\n\t\tlet tex;\n\t\tif(!(tex=t.texture)){\n\t\t\ttex=t.texture=gl.createTexture();\n\t\t\tgl.bindTexture(gl.TEXTURE_2D,tex);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);\n\t\t}\n\t\tif(async){\n\t\t\trequestIdleCallback(()=>{\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D,tex);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,t._cache);\n\t\t\t\tt.glDanmaku=true;\n\t\t\t});\n\t\t}else{\n\t\t\tgl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,t._cache);\n\t\t\tt.glDanmaku=true;\n\t\t}\n\n\t\t//vert\n\t\tlet y=t.style.y-t.estimatePadding;\n\t\tt.vertCoord=new Float32Array([\n\t\t\t0,y,\n\t\t\t0,y,\n\t\t\t0,y+t._cache.height,\n\t\t\t0,y+t._cache.height,\n\t\t]);\n\t}\n}\n\n\n\nconst commonTextureCoord=new Float32Array([\n\t0.0,  0.0,//↖\n\t1.0,  0.0,//↗\n\t0.0,  1.0,//↙\n\t1.0,  1.0,//↘\n]);\n\n\nexport default Text3d;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nimport Template from './textModuleTemplate.js';\n\nclass TextCanvas extends Template{\n\tconstructor(dText){\n\t\tsuper(dText);\n\t\tthis.supported=dText.text2d.supported;\n\t\tif(!this.supported)return;\n\t\tdText.frame.addStyle([`#${dText.randomText}_textCanvasContainer canvas{will-change:transform;top:0;left:0;position:absolute;}`,\n\t\t\t\t\t\t\t\t`#${dText.randomText}_textCanvasContainer.moving canvas{transition:transform 500s linear;}`,\n\t\t\t\t\t\t\t\t`#${dText.randomText}_textCanvasContainer{will-change:transform;pointer-events:none;overflow:hidden;}`]);\n\n\t\tthis.container=dText.textCanvasContainer=document.createElement('div');//for text canvas\n\t\tthis.container.classList.add(`${dText.randomText}_fullfill`);\n\t\tthis.container.id=`${dText.randomText}_textCanvasContainer`;\n\t\tdText.container.appendChild(this.container);\n\t}\n\t_toggle(s){\n\t\tlet D=this.dText,T=D.frame.time;\n\t\tthis.container.classList[s?'add':'remove']('moving');\n\t\tfor(let i=D.DanmakuText.length,t;i--;){\n\t\t\tif((t=D.DanmakuText[i]).danmaku.mode>=2)continue;\n\t\t\tif(s){requestAnimationFrame(()=>this._move(t));}\n\t\t\telse{this._move(t,T);}\n\t\t}\n\t}\n\tpause(){\n\t\tthis._toggle(false);\n\t}\n\tstart(){\n\t\tthis._toggle(true);\n\t}\n\trate(){\n\t\tthis.resetPos();\n\t}\n\t_move(t,T){\n\t\tif(!t.danmaku)return;\n\t\tif(T===undefined)T=this.dText.frame.time+500000;\n\t\tt._cache.style.transform=`translate3d(${(((this.dText._calcSideDanmakuPosition(t,T)-t.estimatePadding)*10)|0)/10}px,${t.style.y-t.estimatePadding}px,0)`;\n\t}\n\tresetPos(){\n\t\tthis.pause();\n\t\tthis.dText.paused||requestAnimationFrame(()=>this.start());\n\t}\n\tresize(){\n\t\tthis.resetPos();\n\t}\n\tremove(t){\n\t\tt._cache.parentNode&&this.container.removeChild(t._cache);\n\t}\n\tenable(){\n\t\trequestAnimationFrame(()=>{\n\t\t\tthis.dText.DanmakuText.forEach(t=>this.newDanmaku(t));\n\t\t});\n\t\tthis.container.hidden=false;\n\t}\n\tdisable(){\n\t\tthis.container.hidden=true;\n\t\tthis.container.innerHTML='';\n\t}\n\tnewDanmaku(t){\n\t\tt._cache.style.transform=`translate3d(${t.style.x-t.estimatePadding}px,${t.style.y-t.estimatePadding}px,0)`;\n\t\tthis.container.appendChild(t._cache);\n\t\tt.danmaku.mode<2&&!this.dText.paused&&requestAnimationFrame(()=>this._move(t));\n\t}\n}\n\n\nexport default TextCanvas;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n\n*/\nclass textModuleTemplate{\n\tconstructor(dText){\n\t\tthis.dText=dText;\n\t}\n\tdraw(){}\n\trate(){}\n\tpause(){}\n\tstart(){}\n\tclear(){}\n\tresize(){}\n\tremove(){}\n\tenable(){}\n\tdisable(){}\n\tnewDanmaku(){}\n\tdeleteTextObject(){}\n}\n\nexport default textModuleTemplate;\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.6.2' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport {i18n} from './i18n.js';\nimport Danmaku from './danmaku.js';\nimport O2H from '../lib/Object2HTML/Object2HTML.js'\n\nconst _=i18n._;\n\n//default options\nconst NyaPCoreOptions={\n\t//for video\n\tmuted:false,\n\tvolume:1,\n\tloop:false,\n\t//for danmaku\n\tenableDanmaku:true,\n\tdanmakuModule:['TextDanmaku'],\n\tdanmakuModuleArg:{\n\t\tTextDanmaku:{\n\t\t\tdefaultStyle:{},\n\t\t\toptions:{},\n\t\t}\n\t},\n\tloadingInfo:{\n\t\tdoneText:'ok',\n\t\tcontentSpliter:'...',\n\t},\n\t//for sending danmaku\n\tdefaultDanmakuColor:null,//a hex color(without #),when the color inputed is invalid,this color will be applied\n\tdefaultDanmakuMode:0,//right\n\tdefaultDanmakuSize:24,\n\tdanmakuSend:(d,callback)=>{callback(false);},//the func for sending danmaku\n\t//for player\n\tsource:(name,address,callback)=>callback(name,address),\n}\n\n\nclass NyaPEventEmitter{\n\tconstructor(){\n\t\tthis._events={};\n\t}\n\temit(e,...arg){\n\t\tthis._resolve(e,...arg);\n\t\tthis.globalHandle(e,...arg);\n\t}\n\t_resolve(e,...arg){\n\t\tif(e in this._events){\n\t\t\tconst hs=this._events[e];\n\t\t\ttry{\n\t\t\t\tfor(let h of hs){\n\t\t\t\t\tif(h.apply(this,arg)===false)return;\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\tthis.log('','error',e);\n\t\t\t}\n\t\t}\n\t}\n\taddEventListener(...args){\n\t\tthis.on(...args);\n\t}\n\ton(e,handle,top=false){\n\t\tif(!(handle instanceof Function))return;\n\t\tif(!(e in this._events))this._events[e]=[];\n\t\tif(top)\n\t\t\tthis._events[e].unshift(handle);\n\t\telse\n\t\t\tthis._events[e].push(handle);\n\t}\n\tremoveEvent(e,handle){\n\t\tif(!(e in this._events))return;\n\t\tif(arguments.length===1){delete this._events[e];return;}\n\t\tlet ind;\n\t\tif(ind=(this._events[e].indexOf(handle))>=0)this._events[e].splice(ind,1);\n\t\tif(this._events[e].length===0)delete this._events[e];\n\t}\n\tglobalHandle(name,...arg){}//所有事件会触发这个函数\n\tlog(){}\n}\n\nclass NyaPlayerCore extends NyaPEventEmitter{\n\tconstructor(opt){\n\t\tsuper();\n\t\tthis.log('%c https://github.com/JiaJiaJiang/NyaP ','log',\"background:#6f8fa2;color:#ccc;padding:.3em\");\n\t\tthis.log('Language:'+i18n.lang,'debug');\n\n\t\topt=this.opt=Object.assign({},NyaPCoreOptions,opt);\n\t\tconst $=this.$={document,window,NP:this};//for save elements that has an id\n\t\tthis.plugins={};\n\t\tthis.stats={};\n\t\tthis.i18n=i18n;\n\t\tthis._={//for private variables\n\t\t\tvideo:O2H({_:'video',attr:{id:'main_video'}}),\n\t\t\tplayerMode:'normal',\n\t\t};\n\n\t\tthis.videoFrame=O2H(\n\t\t\t{_:'div',attr:{id:'video_frame'},child:[\n\t\t\t\tthis.video,\n\t\t\t\t//this.container,\n\t\t\t\t{_:'div',attr:{id:'loading_frame'},child:[\n\t\t\t\t\t{_:'div',attr:{id:'loading_anime'},child:['(๑•́ ω •̀๑)']},\n\t\t\t\t\t{_:'div',attr:{id:'loading_info'}},\n\t\t\t\t]}\n\t\t\t]}\n\t\t);\n\t\tthis.collectEles(this.videoFrame);\n\n\n\t\tlet _lilc=this.loadingInfo(_('Loading core'),true);\n\n\n\t\tif(this._danmakuEnabled){\n\t\t\tthis.danmakuContainer=O2H({_:'div',prop:{id:'danmaku_container'}});\n\t\t\tlet _lildf=this.loadingInfo(_('Loading danmaku frame'),true);\n\t\t\tthis.Danmaku=new Danmaku(this);\n\t\t\tthis.videoFrame.insertBefore(this.danmakuContainer,$.loading_frame);\n\t\t\tthis.collectEles(this.danmakuContainer);\n\t\t\t_lildf.append(this.opt.loadingInfo.doneText);\n\t\t}\n\t\tthis._.loadingAnimeInterval=setInterval(()=>{\n\t\t\t$.loading_anime.style.transform=\"translate(\"+rand(-20,20)+\"px,\"+rand(-20,20)+\"px) rotate(\"+rand(-10,10)+\"deg)\";\n\t\t},80);\n\n\t\t//options\n\t\tsetTimeout(a=>{\n\t\t\t['muted','volume','loop'].forEach(o=>{//dont change the order\n\t\t\t\t(opt[o]!==undefined)&&(this.video[o]=opt[o]);\n\t\t\t})\n\t\t},0)\n\n\t\t//define events\n\t\t{\n\t\t\t//video:_loopChange\n\t\t\tlet LoopDesc=Object.getOwnPropertyDescriptor(HTMLMediaElement.prototype,'loop');\n\t\t\tObject.defineProperty(this.video,'loop',{\n\t\t\t\tget:LoopDesc.get,\n\t\t\t\tset:function(bool){\n\t\t\t\t\tif(bool===this.loop)return;\n\t\t\t\t\tthis.dispatchEvent(Object.assign(new Event('_loopChange'),{value:bool}));\n\t\t\t\t\tLoopDesc.set.call(this,bool);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddEvents(this.video,{\n\t\t\tloadedmetadata:e=>{\n\t\t\t\tclearInterval(this._.loadingAnimeInterval);\n\t\t\t\tif($.loading_frame.parentNode)//remove loading animation\n\t\t\t\t\t$.loading_frame.parentNode.removeChild($.loading_frame);\n\t\t\t},\n\t\t\terror:e=>{\n\t\t\t\tclearInterval(this._.loadingAnimeInterval);\n\t\t\t\tloading_anime.style.transform=\"\";\n\t\t\t\tloading_anime.innerHTML='(๑• . •๑)';\n\t\t\t},\n\t\t});\n\n\t\t//define default video src handle\n\t\tthis.on('setVideoSrc',src=>{\n\t\t\tthis.video.src=src;\n\t\t\treturn false;//stop the event\n\t\t});\n\t\tif(opt.src)this.src=opt.src;\n\n\t\tthis.on('coreLoad',()=>{\n\t\t\tthis.stats.coreLoaded=true;\n\t\t\t_lilc.append(this.opt.loadingInfo.doneText);\n\t\t\t//this.loadingInfo(_('Core loaded'));\n\t\t});\n\t\tif(Array.isArray(opt.plugins)){//load plugins,opt.plugins is a list of url for plugins\n\t\t\tlet _lilp=this.loadingInfo(_('Loading plugin'),true);\n\t\t\tlet pluginList=[];\n\t\t\tfor(let url of opt.plugins){\n\t\t\t\tpluginList.push(this.loadPlugin(url));\n\t\t\t}\n\t\t\tPromise.all(pluginList).then(()=>{\n\t\t\t\t_lilp.append(this.opt.loadingInfo.doneText);\n\t\t\t\tthis.emit('coreLoad');\n\t\t\t}).catch(e=>{\n\t\t\t\tthis.log('','error',e);\n\t\t\t\tthis.emit('coreLoadingError',e);\n\t\t\t})\n\t\t\treturn;\n\t\t}\n\t\tthis.emit('coreLoad');\n\t}\n\tplayToggle(Switch=this.video.paused){\n\t\tthis.video[Switch?'play':'pause']();\n\t}\n\tloadingInfo(text,spliter=false){\n\t\tlet d=O2H({_:'div',child:[text]});\n\t\tif(spliter)d.append(this.opt.loadingInfo.contentSpliter);\n\t\tthis.$.loading_info.appendChild(d);\n\t\treturn d;\n\t}\n\tcollectEles(ele){\n\t\tconst $=this.$;\n\t\tif(ele.id&&!$[ele.id])$[ele.id]=ele;\n\t\ttoArray(ele.querySelectorAll('*')).forEach(e=>{\n\t\t\tif(e.id&&!$[e.id])$[e.id]=e;\n\t\t});\n\t}\n\tplayerMode(mode='normal'){\n\t\tif(mode==='normal' && this._.playerMode===mode)return;\n\t\tif(this._.playerMode==='fullPage'){\n\t\t\tthis.player.style.position='';\n\t\t}else if(this._.playerMode==='fullScreen'){\n\t\t\texitFullscreen();\n\t\t}\n\t\tif(mode!=='normal' && this._.playerMode===mode)mode='normal';//back to normal mode\n\t\tswitch(mode){\n\t\t\tcase 'fullPage':{\n\t\t\t\tthis.player.style.position='fixed';\n\t\t\t\tthis.player.setAttribute('playerMode','fullPage');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'fullScreen':{\n\t\t\t\tthis.player.setAttribute('playerMode','fullScreen');\n\t\t\t\trequestFullscreen(this.player);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tthis.player.setAttribute('playerMode','normal');\n\t\t\t}\n\t\t}\n\t\tthis._.playerMode=mode;\n\t\tthis.emit('playerModeChange',mode);\n\t}\n\tisFullscreen(){\n\t\tconst d=document;\n\t\treturn (d.webkitFullscreenElement\n\t\t\t\t||d.msFullscreenElement\n\t\t\t\t||d.mozFullScreenElement\n\t\t\t\t||d.fullscreenElement)\n\t\t\t\t==this.player;\n\t}\n\tloadPlugin(url){//load a js plugin for NyaP\n\t\tlet p=fetch(url)\n\t\t.then(res=>res.text())\n\t\t.then(script=>{\n\t\t\t'use strict';\n\t\t\tscript=script.trim();\n\t\t\tlet plugin=eval(script);\n\t\t\tif((typeof plugin.name!=='string')||!plugin.name)\n\t\t\t\tthrow(new TypeError('Invalid plugin name'));\n\t\t\tif(this.plugins[plugin.name])\n\t\t\t\tthrow(`Plugin already loaded: ${plugin.name}`);\n\t\t\tthis.plugins[plugin.name]=plugin;\n\t\t\tplugin.init(this);\n\t\t\tthis.emit('pluginLoaded',plugin.name);\n\t\t\treturn plugin.name;\n\t\t});\n\t\tp.catch(e=>{\n\t\t\tthis.log('pluginLoadingError','error',e);\n\t\t\tthis.emit('pluginLoadingError',e);\n\t\t});\n\t\treturn p;\n\t}\n\tlog(content,type='log',...styles){\n\t\tconsole[type](`%c NyaP %c${content}`,\"background:#e0e0e0;padding:.2em\",\"background:unset\",...styles)\n\t}\n\tget danmakuFrame(){return this.Danmaku.danmakuFrame;}\n\tget player(){return this._.player;}\n\tget video(){return this._.video;}\n\tget src(){return this.video.src;}\n\tset src(s){\n\t\ts=s.trim();\n\t\tif(!this.stats.coreLoaded)\n\t\t\tthis.on('coreLoad',()=>{\n\t\t\t\tthis.src=s;\n\t\t\t});\n\t\telse{\n\t\t\tthis.emit('setVideoSrc',s);\n\t\t}\n\t}\n\tget TextDanmaku(){return this.danmakuFrame.modules.TextDanmaku;}\n\tget videoSize(){return [this.video.videoWidth,this.video.videoHeight];}\n\tget _danmakuEnabled(){return this.opt.enableDanmaku==true;}\n}\n\n\n//other functions\n\nfunction addEvents(target,events){\n\tif(!Array.isArray(target))target=[target];\n\tfor(let e in events)\n\t\te.split(/\\,/g).forEach(function(e2){\n\t\t\ttarget.forEach(function(t){\n\t\t\t\tt.addEventListener(e2,events[e])\n\t\t\t});\n\t\t});\n}\nfunction requestFullscreen(d) {\n\ttry{\n\t\t(d.requestFullscreen||\n\t\td.msRequestFullscreen||\n\t\td.mozRequestFullScreen||\n\t\td.webkitRequestFullscreen)\n\t\t.call(d);\n\t}catch(e){\n\t\tconsole.error(e)\n\t\talert(_('Failed to change to fullscreen mode'));\n\t}\n}\nfunction exitFullscreen() {\n\tconst d=document;\n\t(d.exitFullscreen||\n\td.msExitFullscreen||\n\td.mozCancelFullScreen||\n\td.webkitCancelFullScreen).call(d);\n}\nfunction isFullscreen() {\n\tconst d=document;\n\treturn !!(d.fullscreen || d.mozFullScreen || d.webkitIsFullScreen || d.msFullscreenElement);\n}\nfunction formatTime(sec,total){\n\tif(total==undefined)total=sec;\n\tlet r,s=sec|0,h=(s/3600)|0;\n\tif(total>=3600)s=s%3600;\n\tr=[padTime((s/60)|0),padTime(s%60)];\n\t(total>=3600)&&r.unshift(h);\n\treturn r.join(':');\n}\nfunction padTime(n){//pad number to 2 chars\n\treturn n>9&&n||`0${n}`;\n}\nfunction setAttrs(ele,obj){//set multi attrs to a Element\n\tfor(let a in obj)\n\t\tele.setAttribute(a,obj[a])\n}\nfunction limitIn(num,min,max){//limit the number in a range\n\treturn num<min?min:(num>max?max:num);\n}\nfunction rand(min, max) {\n\treturn (min+Math.random()*(max-min)+0.5)|0;\n}\nfunction toArray(obj){\n\tif(obj instanceof Array)return obj.slice();\n\tif(obj.length!==undefined)\n\t\treturn Array.prototype.slice.call(obj);\n\treturn [...obj];\n}\n\n//Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nif(!String.prototype.startsWith)\nString.prototype.startsWith = function(searchString, position=0){\n\treturn this.substr(position, searchString.length) === searchString;\n};\n//Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif(!Object.assign)\nObject.assign = function(target, varArgs) {\n\t'use strict';\n\tif(target==null)throw new TypeError('Cannot convert undefined or null to object');\n\tvar to = Object(target);\n\tfor(var index=1;index<arguments.length;index++){\n\t\tvar nextSource=arguments[index];\n\t\tif(nextSource!=null){\n\t\t\tfor(var nextKey in nextSource) {\n\t\t\t\tif(Object.prototype.hasOwnProperty.call(nextSource,nextKey)){\n\t\t\t\t\tto[nextKey]=nextSource[nextKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn to;\n};\n//Polyfill Array.from\nif(!Array.from)\nArray.from=function(a,func){\n\tif(!(a instanceof Array))a=toArray(a);\n\tvar r=new Array(a.length);\n\tfor(var i=a.length;i--;)r[i]=func?func(a[i],i):a[i];\n\treturn r;\n};\n//Polyfill Number.isInteger\nif(!Number.isInteger)\nNumber.isInteger=function(v){\n  return (v|0)===v;\n};\n\nexport default NyaPlayerCore;\nexport {\n\tNyaPlayerCore,\n\taddEvents,\n\trequestFullscreen,\n\texitFullscreen,\n\tisFullscreen,\n\tformatTime,\n\trand,\n\tpadTime,\n\tsetAttrs,\n\tlimitIn,\n\ttoArray,\n}\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\n\nimport {i18n} from './i18n.js';\nimport O2H from '../lib/Object2HTML/Object2HTML.js';\nimport {NyaPlayerCore,\n\t\taddEvents,\n\t\trequestFullscreen,\n\t\texitFullscreen,\n\t\tformatTime,\n\t\tsetAttrs,\n\t\tpadTime,\n\t\tlimitIn,\n\t\ttoArray} from './NyaPCore.js';\n\nconst _=i18n._;\n\n//NyaPTouch options\nconst NyaPTouchOptions={\n\tdanmakuColors:['fff','6cf','ff0','f00','0f0','00f','f0f','000'],//colors in the danmaku style pannel\n\tdanmakuModes:[0,3,2,1],//0:right\t1:left\t2:bottom\t3:top\n\tdanmakuSizes:[20,24,36],\n\tdragToSeek:true,\n\tdragToChangeVolume:true,\n\tbottomControlHeight:50,\n\tprogressBarHeight:14,\n\tprogressPad:10,\n}\n\n//touch player\nclass NyaPTouch extends NyaPlayerCore{\n\tconstructor(opt){\n\t\tsuper(Object.assign({},NyaPTouchOptions,opt));\n\t\topt=this.opt;\n\t\tconst NP=this,\n\t\t\t$=NP.$,\n\t\t\tvideo=NP.video;\n\n\t\tconst icons=this.icons={\n\t\t\tplay:[30,30,'<path d=\"m10.063,8.856l9.873,6.143l-9.873,6.143v-12.287z\" stroke-width=\"3\" stroke-linejoin=\"round\"/>'],\n\t\t\tfullScreen:[30,30,'<path stroke-linejoin=\"round\" d=\"m11.166,9.761l-5.237,5.239l5.237,5.238l1.905,-1.905l-3.333,-3.333l3.332,-3.333l-1.904,-1.906zm7.665,0l-1.903,1.905l3.332,3.333l-3.332,3.332l1.903,1.905l5.238,-5.238l-5.238,-5.237z\" stroke-width=\"1.3\" />'],\n\t\t\tloop:[30,30,'<path stroke-linejoin=\"round\" stroke-width=\"1\" d=\"m20.945,15.282c-0.204,-0.245 -0.504,-0.387 -0.823,-0.387c-0.583,0 -1.079,0.398 -1.205,0.969c-0.400,1.799 -2.027,3.106 -3.870,3.106c-2.188,0 -3.969,-1.780 -3.969,-3.969c0,-2.189 1.781,-3.969 3.969,-3.969c0.720,0 1.412,0.192 2.024,0.561l-0.334,0.338c-0.098,0.100 -0.127,0.250 -0.073,0.380c0.055,0.130 0.183,0.213 0.324,0.212l2.176,0.001c0.255,-0.002 0.467,-0.231 0.466,-0.482l-0.008,-2.183c-0.000,-0.144 -0.085,-0.272 -0.217,-0.325c-0.131,-0.052 -0.280,-0.022 -0.379,0.077l-0.329,0.334c-1.058,-0.765 -2.340,-1.182 -3.649,-1.182c-3.438,0 -6.236,2.797 -6.236,6.236c0,3.438 2.797,6.236 6.236,6.236c2.993,0 5.569,-2.133 6.126,-5.072c0.059,-0.314 -0.022,-0.635 -0.227,-0.882z\"/>'],\n\t\t\tdanmakuStyle:[30,30,'<path style=\"fill-opacity:1!important\" d=\"m21.781,9.872l-1.500,-1.530c-0.378,-0.385 -0.997,-0.391 -1.384,-0.012l-0.959,0.941l2.870,2.926l0.960,-0.940c0.385,-0.379 0.392,-0.998 0.013,-1.383zm-12.134,7.532l2.871,2.926l7.593,-7.448l-2.872,-2.927l-7.591,7.449l0.000,0.000zm-1.158,2.571l-0.549,1.974l1.984,-0.511l1.843,-0.474l-2.769,-2.824l-0.509,1.835z\" stroke-width=\"0\"/>'],\n\t\t\tdanmakuToggle:[30,30,'<path d=\"m8.569,10.455l0,0c0,-0.767 0.659,-1.389 1.473,-1.389l0.669,0l0,0l3.215,0l6.028,0c0.390,0 0.765,0.146 1.041,0.406c0.276,0.260 0.431,0.613 0.431,0.982l0,3.473l0,0l0,2.083l0,0c0,0.767 -0.659,1.389 -1.473,1.389l-6.028,0l-4.200,3.532l0.985,-3.532l-0.669,0c-0.813,0 -1.473,-0.621 -1.473,-1.389l0,0l0,-2.083l0,0l0,-3.473z\"/>'],\n\t\t\tvolume:[30,30,'<ellipse id=\"volume_circle\" style=\"fill-opacity:.6!important\" ry=\"6\" rx=\"6\" cy=\"15\" cx=\"15\" stroke-dasharray=\"38 90\" stroke-width=\"1.8\"/>'],\n\t\t\tdanmakuMode0:[30,30,'<path style=\"fill-opacity:1!important\" stroke-width=\"0\" d=\"m14.981,17.821l-7.937,-2.821l7.937,-2.821l0,1.409l7.975,0l0,2.821l-7.975,0l0,1.409l0,0.002z\"/>'],\n\t\t\tdanmakuMode1:[30,30,'<path style=\"fill-opacity:1!important\" stroke-width=\"0\" d=\"m15.019,12.178l7.937,2.821l-7.937,2.821l0,-1.409l-7.975,0l0,-2.821l7.975,0l0,-1.409l0,-0.002z\"/>'],\n\t\t\tdanmakuMode3:[30,30,'<path stroke-width=\"3\" d=\"m7.972,7.486l14.054,0\"/>'],\n\t\t\tdanmakuMode2:[30,30,'<path stroke-width=\"3\" d=\"m7.972,22.513l14.054,0\"/>'],\n\t\t\t\n\t\t}\n\t\tObject.assign(icons,opt.icons);\n\t\tfunction icon(name,event,attr={}){\n\t\t\tconst ico=icons[name];\n\t\t\treturn O2H({_:'span',event,attr,prop:{id:`icon_span_${name}`,\n\t\t\t\tinnerHTML:`<svg height=\"${NP.opt.bottomControlHeight}\" width=\"${NP.opt.bottomControlHeight/ico[1]*ico[0]}\" viewBox=\"0,0,${ico[0]},${ico[1]}\" id=\"icon_${name}\"\">${ico[2]}</svg>`}});\n\t\t}\n\n\t\tlet _licp=NP.loadingInfo(_('Creating player'),true);\n\t\tNP._.player=O2H({\n\t\t\t_:'div',attr:{class:'NyaPTouch',id:'NyaPTouch'},child:[\n\t\t\t\tNP.videoFrame,\n\t\t\t\t{_:'div',prop:{id:'controls'},child:[\n\t\t\t\t\t{_:'div',prop:{id:'control_bottom'},child:[\n\t\t\t\t\t\t{_:'div',attr:{id:'control_bottom_first'},child:[\n\t\t\t\t\t\t\t{_:'div',attr:{id:'progress_leftside_button'},child:[\n\t\t\t\t\t\t\t\ticon('play',{click:e=>NP.playToggle()})\n\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t{_:'div',prop:{id:'progress_info'},child:[\n\t\t\t\t\t\t\t\t{_:'span',attr:{id:'progress_frame'},child:[\n\t\t\t\t\t\t\t\t\t{_:'div',prop:{id:'progress_wrap'},child:[\n\t\t\t\t\t\t\t\t\t\t{_:'div',prop:{id:'buffed_bar'}},\n\t\t\t\t\t\t\t\t\t\t{_:'div',prop:{id:'progress_bar'}},\n\t\t\t\t\t\t\t\t\t\t{_:'div',prop:{id:'seekTo_bar',hidden:true}},\n\t\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t\t{_:'span',prop:{id:'time'},child:[\n\t\t\t\t\t\t\t\t\t{_:'span',prop:{id:'current_time'},child:['00:00']},\n\t\t\t\t\t\t\t\t\t'/',\n\t\t\t\t\t\t\t\t\t{_:'span',prop:{id:'total_time'},child:['00:00']},\n\t\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t{_:'span',prop:{id:'progress_rightside_button'},child:[\n\t\t\t\t\t\t\t\ticon('fullScreen',{click:e=>NP.playerMode('fullScreen')}),\n\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t]},\n\t\t\t\t\t\t{_:'div',attr:{id:'control_bottom_second'},child:[\n\t\t\t\t\t\t\t{_:'span',attr:{id:'danmakuStyleEditor',tabindex:0},child:[\n\t\t\t\t\t\t\t\ticon('danmakuStyle',{click:e=>NP.danmakuStyleToggle()}),\n\t\t\t\t\t\t\t\t{_:'div',attr:{id:'danmaku_size_box'}},\n\t\t\t\t\t\t\t\t{_:'div',attr:{id:'danmaku_mode_box'}},\n\t\t\t\t\t\t\t\t{_:'div',attr:{id:'danmaku_color_box'}},\n\t\t\t\t\t\t\t]},\n\t\t\t\t\t\t\t{_:'input',attr:{id:'danmaku_input',placeholder:_('Input danmaku here')}},\n\t\t\t\t\t\t\ticon('danmakuToggle',{click:e=>this.Danmaku.toggle()},{class:'active_icon'}),\n\t\t\t\t\t\t\ticon('loop',{click:e=>video.loop=!video.loop}),\n\t\t\t\t\t\t\ticon('volume',{click:e=>video.muted=!video.muted}),\n\t\t\t\t\t\t]},\n\t\t\t\t\t]},\n\t\t\t\t]},\n\t\t\t]\n\t\t});\n\n\t\t//msg box\n\t\tNP.videoFrame.appendChild(O2H({_:'div',attr:{id:'msg_box'}}));\n\n\t\tNP.collectEles(NP._.player);\n\n\t\tObject.assign(NP._,{\n\t\t\tcurrentDragMode:null,\n\t\t\ttouchStartPoint:[0,0],\n\t\t\tbottomControlDraging:undefined,\n\t\t\tbottomControlTransformY:0,\n\t\t\tpreVideoStat:false,\n\t\t\tseekTo:0,\n\t\t\tvolumeBox:new MsgBox('','info',$.msg_box),\n\t\t});\n\n\t\t//calc progress and control_bottom styles\n\t\tObject.assign($.progress_wrap.style,{\n\t\t\tleft:NP.opt.progressPad+'px',\n\t\t\tright:NP.opt.progressPad+'px',\n\t\t\theight:NP.opt.progressBarHeight+'px',\n\t\t\tmarginTop:(-NP.opt.progressBarHeight/2+1)+'px',\n\t\t});\n\t\t$.control_bottom.style.marginTop=`-${NP.opt.bottomControlHeight}px`;\n\n\t\t//add touch drag event to video\n\t\textendEvent.touchdrag($.main_video,{allowMultiTouch:false,preventDefaultX:true});\n\t\textendEvent.touchdrag($.control_bottom,{allowMultiTouch:false,preventDefaultY:true});\n\n\n\t\tif(this._danmakuEnabled){\n\t\t\t//danmaku sizes\n\t\t\topt.danmakuSizes&&opt.danmakuSizes.forEach((s,ind)=>{\n\t\t\t\tlet e=O2H({_:'span',attr:{style:`font-size:${16+ind*3}px;`,title:s},prop:{size:s},child:['A']});\n\t\t\t\t$.danmaku_size_box.appendChild(e);\n\t\t\t});\n\n\t\t\t//danmaku colors\n\t\t\topt.danmakuColors&&opt.danmakuColors.forEach(c=>{\n\t\t\t\tlet e=O2H({_:'span',attr:{style:`background-color:#${c};`,title:c},prop:{color:c}});\n\t\t\t\t$.danmaku_color_box.appendChild(e);\n\t\t\t});\n\n\t\t\t//danmaku modes\n\t\t\topt.danmakuModes&&opt.danmakuModes.forEach(m=>{\n\t\t\t\t$.danmaku_mode_box.appendChild(icon(`danmakuMode${m}`));\n\t\t\t});\n\t\t\tNP.collectEles($.danmaku_mode_box);\n\t\t}else{\n\t\t\tfor(let i in $){\n\t\t\t\tif(i.match(/danmaku/i)){\n\t\t\t\t\t$[i].parentNode.removeChild($[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//events\n\t\tconst events={\n\t\t\tdocument:{\n\t\t\t\t'fullscreenchange,mozfullscreenchange,webkitfullscreenchange,msfullscreenchange':e=>{\n\t\t\t\t\tif(NP._.playerMode=='fullScreen' && !NP.isFullscreen())\n\t\t\t\t\t\tNP.playerMode('normal');\n\t\t\t\t},\n\t\t\t\tvisibilitychange:e=>{\n\t\t\t\t\tif(document.hidden)NP._.preVideoStat=false;\n\t\t\t\t},\n\t\t\t},\n\t\t\tmain_video:{\n\t\t\t\tplaying:e=>NP._iconActive('play',true),\n\t\t\t\t'pause,stalled':e=>{\n\t\t\t\t\tNP._iconActive('play',false);\n\t\t\t\t},\n\t\t\t\tloadedmetadata:e=>{\n\t\t\t\t\tNP._setTimeInfo(null,formatTime(video.duration,video.duration));\n\t\t\t\t},\n\t\t\t\t_loopChange:e=>NP._iconActive('loop',e.value),\n\t\t\t\tvolumechange:e=>{\n\t\t\t\t\tNP._.volumeBox.renew(`${_('volume')}:${(video.volume*100).toFixed(0)}%`+`${video.muted?('('+_('muted')+')'):''}`,3000);\n\t\t\t\t\tsetAttrs($.volume_circle,{'stroke-dasharray':`${video.volume*12*Math.PI} 90`,style:`fill-opacity:${video.muted?.2:.6}!important`});\n\t\t\t\t},\n\t\t\t\tprogress:e=>NP.drawProgress(),\n\t\t\t\tclick:e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tNP.controlsToggle();\n\t\t\t\t},\n\t\t\t\tdblclick:e=>NP.playToggle(),\n\t\t\t\ttimeupdate:(e)=>{\n\t\t\t\t\tif(Date.now()-NP._.lastTimeUpdate <30)return;\n\t\t\t\t\tNP._setTimeInfo(formatTime(video.currentTime,video.duration));\n\t\t\t\t\tNP.drawProgress();\n\t\t\t\t\tNP._.lastTimeUpdate=Date.now();\n\t\t\t\t},\n\t\t\t\ttouchstart:e=>{\n\t\t\t\t\tlet T=e.changedTouches[0];\n\t\t\t\t\tif(NP._.currentDragMode)return;\n\t\t\t\t\tNP._.touchStartPoint=[T.clientX,T.clientY];\n\t\t\t\t},\n\t\t\t\ttouchmove:e=>{\n\t\t\t\t\tif(NP._.currentDragMode)e.preventDefault();\n\t\t\t\t},\n\t\t\t\ttouchdrag:e=>{\n\t\t\t\t\tif(!NP._.currentDragMode){//make sure the drag mode:seek,volume\n\t\t\t\t\t\tif(opt.dragToSeek&&Math.abs(e.deltaX)>Math.abs(e.deltaY)){//seek\n\t\t\t\t\t\t\tNP._.currentDragMode='seek';\n\t\t\t\t\t\t\tNP._.seekTo=video.currentTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tswitch(NP._.currentDragMode){\n\t\t\t\t\t\tcase 'volume':{\n\t\t\t\t\t\t\tvideo.volume=limitIn(video.volume-e.deltaY/200,0,1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'seek':{\n\t\t\t\t\t\t\tlet mu=1+Math.abs(e.touches[0].clientY-NP._.touchStartPoint[1])/5;\n\t\t\t\t\t\t\tNP._.seekTo=limitIn(NP._.seekTo+(e.deltaX/100)*mu,0,video.duration);\n\t\t\t\t\t\t\tNP.emit('seekMark',NP._.seekTo);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttouchend:e=>{\n\t\t\t\t\tif(NP._.currentDragMode==='seek'){\n\t\t\t\t\t\tvideo.currentTime=NP._.seekTo;\n\t\t\t\t\t\t$.progress_bar.style.width=`${(NP._.seekTo/video.duration*100).toFixed(2)}%`;\n\t\t\t\t\t\tNP.$.seekTo_bar.hidden=true;\n\t\t\t\t\t\tNP._setTimeInfo(null,formatTime(video.duration,video.duration));\n\t\t\t\t\t}\n\t\t\t\t\tNP._.currentDragMode=null;\n\t\t\t\t},\n\t\t\t\tcontextmenu:e=>{\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif(!opt.dragToChangeVolume)return;\n\t\t\t\t\tNP._.currentDragMode='volume';\n\t\t\t\t\tNP._.volumeBox.renew(`${_('volume')}:${(video.volume*100).toFixed(0)}%`+`${video.muted?('('+_('muted')+')'):''}`,3000);\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontrol_bottom:{\n\t\t\t\ttouchdrag:e=>{\n\t\t\t\t\tif(NP._.bottomControlDraging===undefined){\n\t\t\t\t\t\tNP._.bottomControlDraging=(Math.abs(e.deltaY)>Math.abs(e.deltaX));\n\t\t\t\t\t}\n\t\t\t\t\tif(NP._.bottomControlDraging)\n\t\t\t\t\t\tNP._bottomControlTransformY(\n\t\t\t\t\t\t\tlimitIn(\n\t\t\t\t\t\t\t\tNP._.bottomControlTransformY-e.deltaY,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t$.control_bottom.offsetHeight-NP.opt.bottomControlHeight\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\ttouchend:e=>{\n\t\t\t\t\tif(NP._.bottomControlDraging==undefined)return;\n\t\t\t\t\tNP._.bottomControlDraging=undefined;\n\t\t\t\t\tlet R=$.control_bottom.offsetHeight-NP.opt.bottomControlHeight;\n\t\t\t\t\tNP._bottomControlTransformY(NP._.bottomControlTransformY<(R/2)?0:R);\n\t\t\t\t},\n\t\t\t},\n\t\t\tprogress_frame:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tlet t=e.target,pad=NP.opt.progressPad,\n\t\t\t\t\t\tpre=limitIn((e.offsetX-pad)/(t.offsetWidth-2*pad),0,1);\n\t\t\t\t\tvideo.currentTime=pre*video.duration;\n\t\t\t\t},\n\t\t\t},\n\t\t\tdanmaku_input:{\n\t\t\t\t'keydown':e=>{\n\t\t\t\t\tif(e.key=='Enter')NP.send();\n\t\t\t\t},\n\t\t\t\tfocus:e=>{\n\t\t\t\t\tNP._.preVideoStat=!video.paused;\n\t\t\t\t\tvideo.pause();\n\t\t\t\t\tif(!NP.isFullscreen())return;\n\t\t\t\t\t$.control_bottom.style.top=0;\n\t\t\t\t\tNP._bottomControlTransformY(0);\n\t\t\t\t},\n\t\t\t\tblur:e=>{\n\t\t\t\t\tsetTimeout(()=>{if(NP._.preVideoStat)video.play();},100);\n\t\t\t\t\tif($.control_bottom.style.top=='')return;\n\t\t\t\t\t$.control_bottom.style.top='';\n\t\t\t\t\tNP._bottomControlTransformY($.control_bottom.offsetHeight-NP.opt.bottomControlHeight);\n\t\t\t\t},\n\t\t\t},\n\t\t\tdanmakuStyleEditor:{\n\t\t\t\tblur:e=>NP.danmakuStyleToggle(false),\n\t\t\t},\n\t\t\tdanmaku_mode_box:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tlet t=e.target;\n\t\t\t\t\tif(t.id.startsWith('icon_span_danmakuMode')){\n\t\t\t\t\t\tlet m=1*t.id.match(/\\d$/)[0];\n\t\t\t\t\t\tif(NP._.danmakuMode!==undefined)\n\t\t\t\t\t\t\t$[`icon_span_danmakuMode${NP._.danmakuMode}`].classList.remove('active');\n\t\t\t\t\t\t$[`icon_span_danmakuMode${m}`].classList.add('active');\n\t\t\t\t\t\tNP._.danmakuMode=m;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_size_box:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tlet t=e.target;\n\t\t\t\t\tif(!t.size)return;\n\t\t\t\t\ttoArray($.danmaku_size_box.childNodes).forEach(sp=>{\n\t\t\t\t\t\tif(NP._.danmakuSize===sp.size)sp.classList.remove('active');\n\t\t\t\t\t});\n\t\t\t\t\tt.classList.add('active');\n\t\t\t\t\tNP._.danmakuSize=t.size;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanmaku_color_box:{\n\t\t\t\tclick:e=>{\n\t\t\t\t\tif(e.target.color){\n\t\t\t\t\t\tlet c=NP.Danmaku.isVaildColor(e.target.color);\n\t\t\t\t\t\tif(c){//match valid hex color code\n\t\t\t\t\t\t\tNP._.danmakuColor=c;\n\t\t\t\t\t\t\ttoArray($.danmaku_color_box.childNodes).forEach(cp=>{\n\t\t\t\t\t\t\t\tif(cp===e.target)cp.classList.add('active');\n\t\t\t\t\t\t\t\telse cp.classList.remove('active');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tNP._.danmakuColor=undefined;\n\t\t\t\t\t\t\tc=NP.Danmaku.isVaildColor(NP.opt.defaultDanmakuColor);\n\t\t\t\t\t\t\ttoArray($.danmaku_color_box.childNodes).forEach(cp=>cp.classList.remove('active'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tNP:{\n\t\t\t\tdanmakuFrameToggle:bool=>this._iconActive('danmakuToggle',bool),//listen danmakuToggle event to change button style\n\t\t\t\tseekMark:t=>{\n\t\t\t\t\tif($.seekTo_bar.hidden)$.seekTo_bar.hidden=false;\n\t\t\t\t\t$.seekTo_bar.style.width=`${(t/video.duration*100).toFixed(2)}%`;\n\t\t\t\t\tNP._setTimeInfo(null,formatTime(t,video.duration));\n\t\t\t\t},\n\t\t\t\tplayerModeChange:mode=>{\n\t\t\t\t\t['fullScreen'].forEach(m=>{\n\t\t\t\t\t\tNP._iconActive(m,mode===m);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tfor(let eleid in $){//add events to elements\n\t\t\tlet eves=events[eleid];\n\t\t\teves&&addEvents($[eleid],eves);\n\t\t}\n\n\n\t\tif(NP._danmakuEnabled){\n\t\t\tNumber.isInteger(opt.defaultDanmakuMode)\n\t\t\t\t&&$['icon_span_danmakuMode'+opt.defaultDanmakuMode].click();//init to default danmaku mode\n\t\t\t(typeof opt.defaultDanmakuSize === 'number')\n\t\t\t\t&&toArray($.danmaku_size_box.childNodes).forEach(sp=>{if(sp.size===opt.defaultDanmakuSize)sp.click()});\n\t\t}\n\n\t\tif(opt.playerFrame instanceof HTMLElement)\n\t\t\topt.playerFrame.appendChild(NP.player);\n\n\t\t_licp.append(this.opt.loadingInfo.doneText);\n\t}\n\t\n\tsend(){\n\t\tlet color=this._.danmakuColor||this.opt.defaultDanmakuColor,\n\t\t\ttext=this.$.danmaku_input.value,\n\t\t\tsize=this._.danmakuSize,\n\t\t\tmode=this._.danmakuMode,\n\t\t\ttime=this.danmakuFrame.time,\n\t\t\td={color,text,size,mode,time};\n\n\t\tthis.Danmaku.send(d,(danmaku)=>{\n\t\t\tif(danmaku&&danmaku._==='text')\n\t\t\t\tthis.$.danmaku_input.value='';\n\t\t\tdanmaku.highlight=true;\n\t\t\tthis.danmakuFrame.load(danmaku,true);\n\t\t});\n\t}\n\n\tcontrolsToggle(bool=this.$.controls.hidden){\n\t\tthis.$.controls.hidden=!bool;\n\t}\n\tdanmakuStyleToggle(bool=!this.$.danmakuStyleEditor.style.overflow){\n\t\tthis.$.danmakuStyleEditor.style.overflow=bool?'initial':'';\n\t}\n\t_bottomControlTransformY(y=this._.bottomControlTransformY){\n\t\tthis._.bottomControlTransformY=y;\n\t\tthis.$.control_bottom.style.transform=`translate3d(0,-${y}px,0)`;\n\t}\n\tdrawProgress(){\n\t\trequestAnimationFrame(()=>{\n\t\t\tconst V=this.video,\n\t\t\t\t\tB=V.buffered,\n\t\t\t\t\tD=V.duration;\n\t\t\tlet lastBuffered=0;\n\t\t\tif(B.length)lastBuffered=B.end(B.length-1);\n\t\t\tthis.$.buffed_bar.style.width=`${(lastBuffered/D*100).toFixed(2)}%`;\n\t\t\tthis.$.progress_bar.style.width=`${(V.currentTime/D*100).toFixed(2)}%`;\n\t\t});\n\t}\n\t_iconActive(name,bool){\n\t\tthis.$[`icon_span_${name}`].classList[bool?'add':'remove']('active_icon');\n\t}\n\t_setTimeInfo(a=null,b=null){\n\t\trequestAnimationFrame(()=>{\n\t\t\tif(a!==null){\n\t\t\t\tthis.$.current_time.innerHTML=a;\n\t\t\t}\n\t\t\tif(b!==null){\n\t\t\t\tthis.$.total_time.innerHTML=b;\n\t\t\t}\n\t\t});\n\t}\n\n\tmsg(text,type='tip'){//type:tip|info|error\n\t\tlet msg=new MsgBox(text,type,this.$.msg_box);\n\t\trequestAnimationFrame(()=>msg.show());\n\t}\n}\n\nclass MsgBox{\n\tconstructor(text,type,parentNode){\n\t\tthis.using=false;\n\t\tlet msg=this.msg=O2H({_:'div',attr:{class:`msg_type_${type}`}});\n\t\tmsg.addEventListener('click',()=>this.remove());\n\t\tthis.parentNode=parentNode;\n\t\tthis.setText(text);\n\t}\n\tsetTimeout(time){\n\t\tif(this.timeout)clearTimeout(this.timeout);\n\t\tthis.timeout=setTimeout(()=>this.remove(),time||Math.max((this.texts?this.texts.length:0)*0.6*1000,5000));\n\t}\n\tsetText(text){\n\t\tthis.msg.innerHTML='';\n\t\tlet e=O2H(text);\n\t\te&&this.msg.appendChild(e);\n\t\tif(text instanceof HTMLElement)text=text.textContent;\n\t\tlet texts=String(text).match(/\\w+|\\S/g);\n\t\tthis.text=text;\n\t\tthis.texts=texts;\n\t}\n\trenew(text,time){\n\t\tthis.setText(text);\n\t\tthis.setTimeout(time);\n\t\tif(!this.using)this.show();\n\t}\n\tshow(){\n\t\tif(this.using)return;\n\t\tthis.msg.style.opacity=0;\n\t\tif(this.parentNode && this.parentNode!==this.msg.parentNode){\n\t\t\tthis.parentNode.appendChild(this.msg);\n\t\t}\n\t\tthis.msg.parentNode&&setTimeout(()=>{\n\t\t\tthis.using=true;\n\t\t\tthis.msg.style.opacity=1;\n\t\t},0);\n\t\tthis.setTimeout();\n\t}\n\tremove(){\n\t\tif(!this.using)return;\n\t\tthis.using=false;\n\t\tthis.msg.style.opacity=0;\n\t\tif(this.timeout){\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout=0;\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.msg.parentNode&&this.msg.parentNode.removeChild(this.msg);\n\t\t},600);\n\t}\n}\n\nvar extendEventDefaultOpt={\n\ttouchdrag:{\n\t\tpreventDefault:false,\n\t\tpreventDefaultX:false,\n\t\tpreventDefaultY:false,\n\t\tallowMultiTouch:false,\n\t},\n\tdoubletouch:{\n\t\tpreventDefault:true,\n\t}\n}\nvar extendEvent={//扩展事件\n\ttouchdrag:function(element,opt){\n\t\tlet stats={};\n\t\topt=Object.assign({},extendEventDefaultOpt.touchdrag,opt);\n\t\telement.addEventListener('touchstart',function(e){\n\t\t\tif(!opt.allowMultiTouch && e.changedTouches.length>1){stats={};return;}\n\t\t\tlet ct=e.changedTouches;\n\t\t\tfor(let t=ct.length;t--;){\n\t\t\t\tstats[ct[t].identifier]=[ct[t].clientX,ct[t].clientY];\n\t\t\t}\n\t\t});\n\t\telement.addEventListener('touchmove',function(e){\n\t\t\tif(!opt.allowMultiTouch && e.touches.length>1){return;}\n\t\t\tlet ct=e.changedTouches;\n\t\t\tfor(let t=ct.length;t--;){\n\t\t\t\tlet id=ct[t].identifier;\n\t\t\t\tif(!id in stats)continue;//不属于这个元素的事件\n\t\t\t\tlet event=new TouchEvent('touchdrag',e);\n\t\t\t\tevent.deltaX=ct[t].clientX-stats[id][0];\n\t\t\t\tevent.deltaY=ct[t].clientY-stats[id][1];\n\t\t\t\tstats[id]=[ct[t].clientX,ct[t].clientY];\n\t\t\t\tif(opt.preventDefault\n\t\t\t\t\t||(opt.preventDefaultX && Math.abs(event.deltaX)>Math.abs(event.deltaY))\n\t\t\t\t\t||(opt.preventDefaultY && Math.abs(event.deltaX)<Math.abs(event.deltaY))){\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\telement.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t},\n\tdoubletouch:function(element,opt){\n\t\tlet lastTouches=[],lastStartTime=0,fired=false,checking=false,started=false;\n\t\topt=Object.assign({},extendEventDefaultOpt.doubletouch,opt);\n\t\telement.addEventListener('touchstart',function(e){\n\t\t\tlet Ts=(e.touches.length>1)?toArray(e.touches):[e.touches[0]],lT=lastTouches;\n\t\t\tlastTouches=Ts;\n\t\t\tif(!started){\n\t\t\t\tlastStartTime=e.timeStamp;\n\t\t\t\tstarted=true;\n\t\t\t}else if(e.timeStamp-lastStartTime>400){\n\t\t\t\tstarted=false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(Ts.length!==lT.length || !checking)return;\n\t\t\tlet lP=[];\n\t\t\tfor(let i=Ts.length;i--;)\n\t\t\t\tlP.push([lT[i].clientX,lT[i].clientY]);\n\t\t\tfor(let i=Ts.length;i--;){\n\t\t\t\tfor(let i2=lP.length;i2--;){\n\t\t\t\t\tif(lineLength(Ts[i].clientX,Ts[i].clientY,lP[i2][0],lP[i2][1])<=6){\n\t\t\t\t\t\tlP.splice(i2,1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(lP.length!==0)return;\n\t\t\tif(opt.preventDefault)e.preventDefault();\n\t\t\tlet event=new TouchEvent('doubletouch',e);\n\t\t\tevent.points=Ts.length;\n\t\t\telement.dispatchEvent(event);\n\t\t\tstarted=checking=false;\n\t\t\tfired=true;\n\t\t});\n\t\telement.addEventListener('touchend',function(e){\n\t\t\tif(e.touches.length===0 && !fired){\n\t\t\t\tchecking=true;\n\t\t\t}\n\t\t\tfired=false;\n\t\t});\n\t\treturn listeners;\n\t}\n}\n\nfunction lineLength(ax,ay,bx,by){\n\treturn Math.sqrt((ax-bx)*(ax-bx)+(ay-by)*(ay-by));\n}\n\n\nwindow.NyaPTouch=NyaPTouch;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\n'use strict';\nimport {DanmakuFrame,DanmakuFrameModule} from '../lib/danmaku-frame/src/danmaku-frame.js'\nimport addTextDanmaku from '../lib/danmaku-text/src/danmaku-text.js'\nimport {limitIn} from './NyaPCore.js';\naddTextDanmaku(DanmakuFrame,DanmakuFrameModule);//init TextDanmaku mod\n\nconst colorChars='0123456789abcdef';\nconst danmakuProp=['color','text','size','mode','time'];\nclass Danmaku{\n\tconstructor(core){\n\t\tthis.core=core;\n\t\tthis.danmakuFrame=new DanmakuFrame(core.danmakuContainer);\n\t\tif(core.opt.danmakuModule instanceof Array){\n\t\t\tcore.opt.danmakuModule.forEach(m=>{\n\t\t\t\tthis.initModule(m);\n\t\t\t\tthis.danmakuFrame.enable(m);\n\t\t\t});\n\t\t}\n\t\tthis.danmakuFrame.setMedia(core.video);\n\t}\n\tinitModule(name){\n\t\treturn this.danmakuFrame.initModule(name,this.core.opt.danmakuModuleArg[name]);\n\t}\n\tload(obj){\n\t\treturn this.danmakuFrame.load(obj);\n\t}\n\tloadList(list){\n\t\tthis.danmakuFrame.loadList(list);\n\t}\n\tremove(obj){\n\t\tthis.danmakuFrame.unload(obj);\n\t}\n\tenable(){\n\t\tthis.danmakuFrame.enable();\n\t\tthis.core.emit('danmakuFrameToggle',name,this.module(name).enabled);\n\t}\n\tdisable(){this.danmakuFrame.enable();}\n\ttoggle(name,bool){\n\t\tif(typeof name==='boolean' || name==undefined){//frame switch mode\n\t\t\tbool=(name!=undefined)?name:!this.danmakuFrame.enabled;\n\t\t\tthis.danmakuFrame[bool?'enable':'disable']();\n\t\t\tthis.core.emit('danmakuFrameToggle',bool);\n\t\t\treturn;\n\t\t}\n\t\ttry{\n\t\t\tif(bool==undefined)bool=!this.module(name).enabled;\n\t\t\tthis.danmakuFrame[bool?'enable':'disable'](name);\n\t\t\tthis.core.emit('danmakuModuleToggle',name,this.module(name).enabled);\n\t\t}catch(e){\n\t\t\tthis.core.log('','error',e);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tat(x,y){\n\t\treturn this.module('TextDanmaku').danmakuAt(x,y);\n\t}\n\tmodule(name){\n\t\treturn this.danmakuFrame.modules[name];\n\t}\n\tsend(obj,callback){\n\t\tfor(let i of danmakuProp)\n\t\t\tif((i in obj)===false)return false;\n\t\tif((obj.text||'').match(/^\\s*$/))return false;\n\t\tobj.color=this.isVaildColor(obj.color);\n\t\tif(obj.color){\n\t\t\tobj.color=obj.color.replace(/\\$/g,()=>{\n\t\t\t\treturn colorChars[limitIn((16*Math.random())|0,0,15)];\n\t\t\t});\n\t\t}else{\n\t\t\tobj.color=null;\n\t\t}\n\t\tif(this.core.opt.danmakuSend instanceof Function){\n\t\t\tthis.core.opt.danmakuSend(obj,callback||(()=>{}));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tisVaildColor(co){\n\t\tif(typeof co !== 'string')return false;\n\t\treturn (co=co.match(/^\\#?(([\\da-f\\$]{3}){1,2})$/i))?co[1]:false;\n\t}\n}\n\nexport default Danmaku;\n","/*\nCopyright luojia@luojia.me\nLGPL license\n*/\nconst i18n={\n\tlang:null,\n\tlangs:{},\n\t_:(str,...args)=>{\n\t\tlet s=(i18n.lang&&i18n.langs[i18n.lang][str])||str;\n\t\targs.length&&args.forEach((arg,ind)=>{s=s.replace(`$${ind}`,arg)});\n\t\treturn s;\n\t}\n};\n\n\ni18n.langs['zh-CN']={\n\t'play':'播放',\n\t'Send':'发送',\n\t'Done':'完成',\n\t'loop':'循环',\n\t'pause':'暂停',\n\t'muted':'静音',\n\t'volume':'音量',\n\t'settings':'设置',\n\t'wheeling':'滚轮',\n\t'hex color':'Hex颜色',\n\t'Loading core':'加载核心',\n\t'Loading video':'加载视频',\n\t'Loading plugin':'加载插件',\n\t'full page(P)':'全页模式(P)',\n\t'Loading danmaku':'加载弹幕',\n\t'Creating player':'创建播放器',\n\t'full screen(F)':'全屏模式(F)',\n\t'danmaku toggle(D)':'弹幕开关(D)',\n\t'Input danmaku here':'在这里输入弹幕',\n\t'Loading danmaku frame':'加载弹幕框架',\n\t'danmaku input(Enter)':'弹幕输入框(回车)',\n\t'Failed to change to fullscreen mode':'无法切换到全屏模式',\n}\n\n\n\n//automatically select a language\n\nif(!navigator.languages){\n\tnavigator.languages=[navigator.language||navigator.browserLanguage];\n}\n\nfor(let lang of [...navigator.languages]){\n\tif(i18n.langs[lang]){\n\t\ti18n.lang=lang;\n\t\tbreak;\n\t}\n\tlet code=lang.match(/^\\w+/)[0];\n\tfor(let cod in i18n.langs){\n\t\tif(cod.startsWith(code)){\n\t\t\ti18n.lang=cod;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(i18n.lang)break;\n}\n\nexport {i18n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}